<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿小笔记</title>
  
  <subtitle>青春易逝，且行且珍惜！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.axiao.vip/"/>
  <updated>2024-05-11T04:19:46.719Z</updated>
  <id>https://blog.axiao.vip/</id>
  
  <author>
    <name>阿小</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VMware虚拟机安装macOS</title>
    <link href="https://blog.axiao.vip/vmware-macos.html"/>
    <id>https://blog.axiao.vip/vmware-macos.html</id>
    <published>2024-05-11T04:19:46.675Z</published>
    <updated>2024-05-11T04:19:46.719Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><p>1、下载并安装 VMWare 虚拟机软件<strong>【<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html" target="_blank" rel="noopener">官网下载</a>】</strong></p><p>2、下载python环境<a href="https://www.python.org/" target="_blank" rel="noopener">Welcome to Python.org</a>，【Downloads-Windows-Python】找到对应的python版本，没有python环境安装不了unlocker。</p><p>注：安装时要勾选Add python.exe to PATH</p><p>3、下载<strong>[<a href="https://github.com/paolo-projects/unlocker" target="_blank" rel="noopener">VMWare Unlocker】</a></strong>，打开任务管理器，服务，停掉VMware开头的几个服务，再<strong>以管理员身份运行 win-install</strong></p><p>4、下载 macOS 14 索诺玛 （Sonoma）的 ISO 系统文件【<strong><a href="https://www.mediafire.com/file/lzlounvkwazy948/macOS+Sonoma+ISO.iso/file" target="_blank" rel="noopener">点击下载</a></strong>】</p><p>5、创建虚拟机：</p><p>典型（推荐）- 下一步 - 稍后安装操作系统 - 下一步 - Apple Mac OS - macOS 14 - 下一步 - 名称（自己定义）- 位置（自己定义）- 下一步 - 磁盘大小（自己定义） - 下一步 - 自定义硬件 - 内存和处理器（自己定义，注：处理器点开有个虚拟化引擎，不要勾选任何一个），新CD/DVD（使用iso映像文件，选择你之前下载的iso文件） - 关闭 - 完成</p><p>6、首先关闭掉vmware软件，打开你上一步定义的位置 -&gt; 打开文件夹</p><p>找到macOS.vmx文件(macOS是上一步自己定义的名称)，然后选择<strong>使用记事本打开，并在底部输入以下内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smc.version = &quot;0&quot;</span><br></pre></td></tr></table></figure><p>注：AMD芯片在更改文件代码的时候记着加以下代码，否则会弹出CPU已禁用的提示，以下代码中间不能空行，不能有任何空格，否则失效，smc.version = “0”是intel芯片可以用的，amd芯片因特殊原因还需要加上下面的CPUid，切记amd安装macOS的时候复制代码的同时不能开启CPU设置中的任何虚拟化以及CPU计数器，否则会报错提示不兼容</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">smc.version = &quot;0&quot;</span><br><span class="line">cpuid.0.eax = &quot;0000:0000:0000:0000:0000:0000:0000:1011&quot;</span><br><span class="line">cpuid.0.ebx = &quot;0111:0101:0110:1110:0110:0101:0100:0111&quot;</span><br><span class="line">cpuid.0.ecx = &quot;0110:1100:0110:0101:0111:0100:0110:1110&quot;</span><br><span class="line">cpuid.0.edx = &quot;0100:1001:0110:0101:0110:1110:0110:1001&quot;</span><br><span class="line">cpuid.1.eax = &quot;0000:0000:0000:0001:0000:0110:0111:0001&quot;</span><br><span class="line">cpuid.1.ebx = &quot;0000:0010:0000:0001:0000:1000:0000:0000&quot;</span><br><span class="line">cpuid.1.ecx = &quot;1000:0010:1001:1000:0010:0010:0000:0011&quot;</span><br><span class="line">cpuid.1.edx = &quot;0000:0111:1000:1011:1111:1011:1111:1111&quot;</span><br><span class="line">smbios.reflectHost = &quot;TRUE&quot;</span><br><span class="line">hw.model = &quot;MacBookPro14,3&quot;</span><br><span class="line">board-id = &quot;Mac-551B86E5744E2388&quot;</span><br><span class="line">keyboard.vusb.enable = &quot;TRUE&quot;</span><br><span class="line">mouse.vusb.enable = &quot;TRUE&quot;</span><br></pre></td></tr></table></figure><p>7、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">搜索 ethernet0.virtualDev = &quot;e1000e&quot; 并将 e1000e替换 为 vmxnet3 并保存文件。</span><br></pre></td></tr></table></figure><p>注：有的默认就是“vmxnet3”就不用替换啦</p><p>8、打开vmware-开启虚拟机macOS</p><p>注：如果是amd芯片的可能会弹出此主机支持AMD-V，但AMD-V处于禁用状态，</p><p>进入BIOS模式，按F7在高级选项的“CPU设置”里找到“SVM”模式，打开即可（AMD处理器虚拟化）。</p><p>9、重新打开虚拟机macOS，选择语言 - 下一步 - 磁盘工具 - 继续</p><p>点击左上角VMware SATA Hard - 点击右上方抹掉 - 名称（自己定义例如macOS） - 抹掉 - 完成 -</p><p>点击左上角红色的圆圈关闭 - 选择第二个安装macOS - 继续 - 选择磁盘 - 继续 - 后面就是进入mac系统了（时间较慢，耐心等待）</p><p>10、如果出现”获取该虚拟机的所有权失败。主机上的某个应用程序正在使用该虚拟机”</p><p>在存放macOS的文件中找到后缀为.vmx.lck文件夹，.vmx.lck改为.vmx.lck.bak，重新打开虚拟机，此虚拟机可以正常打开了，如果系统一直重启，那就换个iso镜像文件macOS10.15</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vmware" scheme="https://blog.axiao.vip/categories/vmware/"/>
    
    
      <category term="vmware" scheme="https://blog.axiao.vip/tags/vmware/"/>
    
      <category term="macos" scheme="https://blog.axiao.vip/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>微信qq防域名红名</title>
    <link href="https://blog.axiao.vip/fanghong.html"/>
    <id>https://blog.axiao.vip/fanghong.html</id>
    <published>2022-06-10T13:29:44.152Z</published>
    <updated>2022-06-10T13:36:56.188Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><p>1.新建静态页面【fh.html】：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>使用浏览器打开<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span> <span class="attr">name</span>=<span class="string">"viewport"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"yes"</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"black"</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"false"</span> <span class="attr">name</span>=<span class="string">"twcClient"</span> <span class="attr">id</span>=<span class="string">"twcClient"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"aplus-touch"</span> <span class="attr">content</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">body,html&#123;width:100%;height:100%&#125;</span><br><span class="line">*&#123;margin:0;padding:0&#125;</span><br><span class="line">body&#123;background-color:#fff&#125;</span><br><span class="line">#contens&#123;</span><br><span class="line">font-weight: bold;</span><br><span class="line">margin:-285px 0px 10px;</span><br><span class="line">text-align:center;</span><br><span class="line">font-size:20px;</span><br><span class="line">margin-bottom: 125px;</span><br><span class="line">&#125;</span><br><span class="line">.top-bar-guidance&#123;font-size:15px;color:#fff;height:70%;line-height:1.8;padding-left:20px;padding-top:20px;background:url(/img/prompt.webp) center top/contain no-repeat&#125;</span><br><span class="line">.top-bar-guidance .icon-safari&#123;width:25px;height:25px;vertical-align:middle;margin:0 .2em&#125;</span><br><span class="line">.app-download-btn&#123;display:block;width:214px;height:40px;line-height:40px;margin:18px auto 0 auto;text-align:center;font-size:18px;color:#2466f4;border-radius:20px;border:.5px #2466f4 solid;text-decoration:none&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top-bar-guidance"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>点击右上角使用<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/img/safari.png"</span> <span class="attr">class</span>=<span class="string">"icon-safari"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"openm"</span>&gt;</span>浏览器打开<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>可以继续浏览本站哦~<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"contens"</span>&gt;</span></span><br><span class="line">防止腾讯屏蔽本站链接<span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">请使用浏览器或者电脑网页访问<span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery/2.0.3/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/clipboard.js/2.0.0/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"app-download-btn"</span>&gt;</span>点此复制本站网址<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">// 是微信内部webView</span><br><span class="line">if (is_weixn() || is_qq()) &#123;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">window.location.href = document.location.origin;</span><br><span class="line">&#125;</span><br><span class="line">// 是微信浏览器</span><br><span class="line">function is_weixn() &#123;</span><br><span class="line">var ua = navigator.userAgent.toLowerCase();</span><br><span class="line">if (ua.match(/MicroMessenger/i) == "micromessenger") &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">function is_qq()&#123;</span><br><span class="line">var sUserAgent =navigator.userAgent.toLowerCase();</span><br><span class="line">if( sUserAgent.match(/QQ/i) == 'qq')&#123;</span><br><span class="line">return true</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return false</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 复制链接</span><br><span class="line">var clipboard = new ClipboardJS(".app-download-btn",&#123;</span><br><span class="line">text : function()&#123;</span><br><span class="line">//寻找被激活的那个div pre元素,同时获取它下面的内容</span><br><span class="line">return window.location.href;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">clipboard.on('success',function(e)&#123;</span><br><span class="line">alert("已复制到粘贴板！");</span><br><span class="line">// console.log(e);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">clipboard.on('error',function(e)&#123;</span><br><span class="line">alert(e);</span><br><span class="line">// console.log(e);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.引入js：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 是微信内部webView</span></span><br><span class="line">  <span class="keyword">if</span> (is_weixn() || is_qq()) &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href=<span class="string">"/fh"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 是微信浏览器</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">is_weixn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> (ua.match(<span class="regexp">/MicroMessenger/i</span>) == <span class="string">"micromessenger"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">is_qq</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sUserAgent =navigator.userAgent.toLowerCase();</span><br><span class="line">    <span class="keyword">if</span>( sUserAgent.match(<span class="regexp">/QQ/i</span>) == <span class="string">'qq'</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>3.引入的图片</p><p><img src="../images/safari.png" alt="safari"></p><p><img src="../images/prompt.webp" alt="prompt"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>图床介绍</title>
    <link href="https://blog.axiao.vip/img-url.html"/>
    <id>https://blog.axiao.vip/img-url.html</id>
    <published>2022-05-21T08:30:17.525Z</published>
    <updated>2022-05-21T08:33:44.638Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><h3 id="1-免费他人图床"><a href="#1-免费他人图床" class="headerlink" title="1 免费他人图床"></a>1 免费他人图床</h3><p>这里指的是别人搭建好的<a href="https://jiami.dog/t-c" target="_blank" rel="noopener">图床</a>，好多热心人搭建好了图床共享出来供我们使用，但是需要注意的是，99%的都会跑路，这里分享一些比较稳定速度又快的图床。</p><p>特点：这类大佬搭建好的图床一般都是用的Chevereto，还有些用的imgurl，Chevereto的特点是大部分都需要注册，图片会返回给你丰富的链接格式（大部分都是默认反回图床内缩略地址，博客使用请选择直接源文件地址或者Markdown格式），基本上都会在首页放自己收录了多少图片，并且<strong>注册用户能看到自己上传过的图片，支持API</strong>。imgurl特点是会返回给你丰富的链接格式。<strong>请注意，这类图床都是严格鉴黄的！</strong></p><p><strong>这里插一个别的大佬做的图床导航页，里面都是收录的别人搭建好的图床</strong>：<a href="http://imgdh.com/" target="_blank" rel="noopener">http://imgdh.com/</a> （类似smms这种稳定并且图量大但是速度慢的图床我就不推荐了）</p><p><strong>下面是这类图床的推荐</strong><br>比较推荐路过，img.tg，hello，聚合图床，鸡霸</p><h4 id="1-1-路过图床"><a href="#1-1-路过图床" class="headerlink" title="1.1 路过图床"></a>1.1 路过图床</h4><p>该图床没有cdn，但是稳定，图量很大，收录了大概一千六百万张图，速度不太行，直连国外图片存储机器。<strong>测试图片打开速度国内基本在3-4S左右。最大单张支持10 MB</strong><br>地址：<a href="https://imgtu.com/" target="_blank" rel="noopener">https://imgtu.com/</a></p><h4 id="1-2-IMG-TG"><a href="#1-2-IMG-TG" class="headerlink" title="1.2 IMG.TG"></a>1.2 IMG.TG</h4><p>我自己十分喜欢的一个图床，有国内百度云cdn节点加速，4年的老图床了，<strong>测试图片打开速度国内基本在1s以内。图片最大单张5MB</strong><br>地址：<a href="https://img.tg/" target="_blank" rel="noopener">https://img.tg/</a></p><h4 id="1-3-imgloc"><a href="#1-3-imgloc" class="headerlink" title="1.3 imgloc"></a>1.3 imgloc</h4><p>hostloc论坛常用的图床，美国it7机房，应该是美国的CN2线路机器，目前托管将近六百万张图，<strong>游客最大上传8MB图，注册用户最大上传10MB图，测试图片打开速度国内基本在3-4S左右</strong><br>地址：<a href="https://imgloc.com/" target="_blank" rel="noopener">https://imgloc.com/</a></p><h4 id="1-4-鸡霸图床"><a href="#1-4-鸡霸图床" class="headerlink" title="1.4 鸡霸图床"></a>1.4 鸡霸图床</h4><p>也是hostloc一个大佬做的图床，运营了两年多。速度不错，江苏移动的机器加速，目前托管4万张图<strong>，测试图片打开速度国内基本在1-2s，最大上传10MB的图</strong><br>地址：<a href="https://img.gejiba.com/" target="_blank" rel="noopener">https://img.gejiba.com/</a></p><h4 id="1-5-聚合图床"><a href="#1-5-聚合图床" class="headerlink" title="1.5 聚合图床"></a>1.5 聚合图床</h4><p>这是我比较推荐的一个图床，因为这个图床有丰富的客户端和接口，还可以挂载自己的oss，cos，七牛云等存储，自己有足够的盈利措施去长时间运营，并且免费用户的速度也很快，有国内cdn，必须登陆后上传<br><strong>测试图片打开速度国内基本在1s，免费用户最大上传5MB图</strong><br>地址：<a href="https://www.superbed.cn/" target="_blank" rel="noopener">https://www.superbed.cn/</a></p><h4 id="1-6-笑果图床"><a href="#1-6-笑果图床" class="headerlink" title="1.6 笑果图床"></a>1.6 笑果图床</h4><p>一个运营两年多的图床，目前托管超过20万张图，全球cdn加速，但是没有国内机器加速，<strong>测试图片打开速度国内基本在2-4s，游客最大上传5MB的图，注册用户最大上传10MB图</strong><br>地址：<a href="https://imagelol.com/" target="_blank" rel="noopener">https://imagelol.com/</a></p><h4 id="1-7-z4a"><a href="#1-7-z4a" class="headerlink" title="1.7 z4a"></a>1.7 z4a</h4><p>也是一个比较稳定的图床，<strong>最大上传64MB图</strong>，cloudflare加速，速度一般，但是图可以比较大，测试图片打开速度国内基本在1-3S，<strong>必须注册后才能上传！</strong><br>地址：<a href="https://www.z4a.net/" target="_blank" rel="noopener">https://www.z4a.net/</a></p><h4 id="1-8-hello图床"><a href="#1-8-hello图床" class="headerlink" title="1.8 hello图床"></a>1.8 hello图床</h4><p>国内百度云cdn加速，运行一年半左右，<strong>必须注册后上传</strong>，最大上传20MB的图，测试图片打开速度国内基本在1S以内。<br>地址：<a href="https://www.helloimg.com/" target="_blank" rel="noopener">https://www.helloimg.com/</a></p><hr><h3 id="2-云盘做图床"><a href="#2-云盘做图床" class="headerlink" title="2 云盘做图床"></a>2 云盘做图床</h3><p>这里呢推荐几个方案，基本都不是直接使用的，但是比较取巧，大家可以试试。</p><h4 id="2-1-onedrive图床"><a href="#2-1-onedrive图床" class="headerlink" title="2.1 onedrive图床"></a>2.1 onedrive图床</h4><p>对于个人用户来说，onedrive空间有5G到15G，大家也可以去搞那种5T的账号去做图床，国内访问速度一般，有条件的可以上世纪互联，那个国内速度起飞。onedrive做图床最简单的就是电脑打开图片然后点嵌入，提取链接。麻烦一点的就是用oneindex等程序，提取直链做图床。（oneindex是一个onedrive的目录程序，相当于让你自己的onedrive变成一个所有人都可以访问下载的网站）</p><p>当然，也有很多云盘都是管理员薅的世纪互联的账号，比如以前的6pan，白熊云盘，我自己现在还在用<a href="https://jiami.dog/go?_=5772d4eb56aHR0cHM6Ly93d3cuZHVhbmd2cHMuY29tL2FyY2hpdmVzL21vZmlsZS5vd24tY2xvdWQuY24%3D" target="_blank" rel="noopener">小麦魔方</a>，这个提取的链接是国内世纪互联的链接，图片打开速度起飞。不过第三方套onedrive这种，需要先访问第三方网站，再转到onedrive，所以世纪互联的速度实际用起来也没想象中那么快，</p><h4 id="2-2谷歌云盘"><a href="#2-2谷歌云盘" class="headerlink" title="2.2谷歌云盘"></a>2.2谷歌云盘</h4><p>也是利用oneindex这类软件，提取直链，这里就不放链接了。</p><p>其余还有学习通，淘宝等云盘做直链，但是需要一定的程序去做静态链接，比较麻烦，有兴趣的可以去百度搜搜。</p><h3 id="3-云存储做云盘"><a href="#3-云存储做云盘" class="headerlink" title="3 云存储做云盘"></a>3 云存储做云盘</h3><p>这里指的是oss/cos/七牛云/又拍云这类云存储，这类存储再除购买空间费用后，下行流量也需要钱。阿里的oss自己买的话是9元40G的空间，流量是5毛1G，速度很快，阿里云oss有自己的域名，cos需要自己绑定备案域名，文件上传后回返回文件地址，直接打开就是下载，很方便。并且oss和cos有丰富的第三方插件和软件使用，比如wordpress博客就有这类插件，picgo也有挂载oss和cos的插件，非常好用！</p><h4 id="3-1-oss配合cf流量免费使用"><a href="#3-1-oss配合cf流量免费使用" class="headerlink" title="3.1 oss配合cf流量免费使用"></a>3.1 oss配合cf流量免费使用</h4><p>因为国外地区的oss存储，在套上ccloudflare的cdn以后，流量不要钱，所以说我们的开销只是购买oss存储的费用。</p><h3 id="4-大型网站做图床"><a href="#4-大型网站做图床" class="headerlink" title="4 大型网站做图床"></a>4 大型网站做图床</h3><p>这里说的是用简书/博客园/小红书/知乎等网站获取图片，这种网站有的有防盗链，有的没有，需要自己去尝试，</p><h3 id="5-github-coding-gitee图床"><a href="#5-github-coding-gitee图床" class="headerlink" title="5 github/coding/gitee图床"></a>5 github/coding/gitee图床</h3><p>这个就简单了，在这种代码托管平台，新建存储库，上传图片，然后点开图片，复制链接就行，github在国内速度不行，我们可以使用和github合作的免费cdn JSDelivr加速（小访问量可以使用，大访问量的网站使用图片会404）。同时这类也有很多第三方软件和插件可以配合使用，不过要注意，coding和gitee都是国内的平台，黄色图片就不要上传了。</p><h3 id="6-IPFS无审计无来源图床"><a href="#6-IPFS无审计无来源图床" class="headerlink" title="6 IPFS无审计无来源图床"></a>6 IPFS无审计无来源图床</h3><p>ipfs别的特性我们不需要了解，我们需要的是他的分布式存储功能，原理就是ipfs把全世界的ipfs机器都当作一个无数块硬盘，你的资料会加密分块存储在很多个节点上，然后取回的时候通过一个网关加上该文件的加密信息，就能取回，速度很不错，但是好多网关被墙了，这里我们使用cf的网关。<strong>所以说基本不用担心速度/容量/和ghs带来的审核问题。</strong></p><p>下面介绍一个ipfs做图床的项目：<a href="https://github.com/jialezi/img2ipfs" target="_blank" rel="noopener">https://github.com/jialezi/img2ipfs</a></p><p>这个项目作者是反代的被墙了的infura端口，作者在github放的演示页可以直接用，需要注意的是，infura的公共api会帮你固定6个月，固定的意思是在该api的节点机器上固定这个文件，ipfs的规则是，一个文件没被固定的情况下，长时间没人访问就会被删除，所以说利用这种简单易行的ipfs图床，你的图片最少在6个月的时间内访问没问题。</p><p>下面是作者的ipfs图床<a href="https://ipfs.xkx.me/" target="_blank" rel="noopener">https://ipfs.xkx.me/</a></p><p>下面是另一个人找到的api端口，可以在github项目里面替换：<a href="https://ipfs.staging.infura.org:5001/api/v0/add?pin=true" target="_blank" rel="noopener">https://ipfs.staging.infura.org:5001/api/v0/add?pin=true</a></p><p>这是另一个人搭建好的图床：<a href="https://filecdn.pages.dev/" target="_blank" rel="noopener">https://filecdn.pages.dev/</a></p><p>因为cf的网关升级了，所以大家需要复制网址然后浏览一下，复制浏览器变更后的地址，不然速度会慢一丢丢。</p><p><strong>国内访问速度一般在2-3s，十分好用！</strong></p><h3 id="7-白嫖大厂图床！"><a href="#7-白嫖大厂图床！" class="headerlink" title="7 白嫖大厂图床！"></a>7 白嫖大厂图床！</h3><p>这里原理是利用qq和微博等空做图床，因为防盗链等原因，咱们用别人直接做好的就行。<strong>其实我更推荐聚合大厂图床，是下面的8.2.</strong><br>下面推荐几个聚合的大厂图床<br>7.1 映画图床（因为主页不能访问，分页还能访问，这里就放分页地址了）：<a href="https://pic.onji.cn/toutiao.html" target="_blank" rel="noopener">https://pic.onji.cn/toutiao.html</a><br>7.2 真正的聚合图床（集合了超级多的大厂图床！）<a href="https://img.nn.ci/" target="_blank" rel="noopener">https://img.nn.ci/</a><br>7.3 <a href="https://api.xkx.me/tc/" target="_blank" rel="noopener">https://api.xkx.me/tc/</a><br>7.4 <a href="https://img.blueskyxn.com/jd.html" target="_blank" rel="noopener">https://img.blueskyxn.com/jd.html</a></p><p>下面是图床的github源码。大家可以自己搭建，或者以后api不能用了自己修改api使用。</p><ol><li><a href="https://github.com/BlueSkyXN/KIENG-FigureBed" target="_blank" rel="noopener">https://github.com/BlueSkyXN/KIENG-FigureBed</a></li><li><a href="https://github.com/jialezi/imgs" target="_blank" rel="noopener">https://github.com/jialezi/imgs</a></li></ol><h3 id="8-其余图床"><a href="#8-其余图床" class="headerlink" title="8 其余图床"></a>8 其余图床</h3><h4 id="8-1-小麦家的其余业务"><a href="#8-1-小麦家的其余业务" class="headerlink" title="8.1 小麦家的其余业务"></a>8.1 小麦家的其余业务</h4><p>u-file是以前的一个免费项目，现在搞不到账号了，可以看作是又拍云的免费版本，可以去买一个账号，现在是2T存储，2T流量，需要绑定备案域名，很香。</p><p>他家还有一个类似于文叔叔的东西，叫做小麦云链，免费存储东西，可以选择7天或者一个月，然后返回给你下载链接，也可以当作一个暂时的云盘使用，速度可以参考u-file。</p><p><a href="https://ftpod.cn/#/" target="_blank" rel="noopener">https://ftpod.cn/#/</a></p><p>包括上面说的小麦魔方也是他家的业务。</p><h4 id="8-2-聚合大厂图床"><a href="#8-2-聚合大厂图床" class="headerlink" title="8.2 聚合大厂图床"></a>8.2 聚合大厂图床</h4><p>图仓项目介绍：<a href="https://gitee.com/qqqingchen/tucang.cc" target="_blank" rel="noopener">https://gitee.com/qqqingchen/tucang.cc</a><br>这个项目是在作者的服务器上上传照片，然后把照片上传到几十个大厂里面，当作图床，然后在读取文件的时候，先访问作者的服务器，然后再从后端几十个大厂里面选择速度快的，这样就不用担心像上面的单个大厂图床一样，被大厂删图或防盗链了，唯一需要担心的就是图仓作者的服务器崩了。。。<br>图仓地址：<a href="https://tucang.cc/" target="_blank" rel="noopener">https://tucang.cc/</a></p><h4 id="8-3-unicloud"><a href="#8-3-unicloud" class="headerlink" title="8.3 unicloud"></a>8.3 unicloud</h4><p>这个就是类似oss的项目，和oss一样的速度，不过稳定性比oss差点，也是需要实名，项目地址我放这里了<br><a href="https://github.com/sddwt/uis" target="_blank" rel="noopener">https://github.com/sddwt/uis</a></p><p>这里是搭建教程：<a href="https://hostloc.com/thread-811060-1-1.html" target="_blank" rel="noopener">https://hostloc.com/thread-811060-1-1.html</a></p><p>这是另一个unicloud搭建的教程，很详细：<a href="https://www.jingtaiboke.com/unicloud-upload-demo.html" target="_blank" rel="noopener">https://www.jingtaiboke.com/unicloud-upload-demo.html</a></p><h2 id="压缩工具"><a href="#压缩工具" class="headerlink" title="压缩工具"></a>压缩工具</h2><p>这里贴上一个无限次数调用tinypng（堪称最好用的压缩工具）的win客户端，导入点确定就会自动压缩替换文件，非常好用，给图床大佬们节约点空间和流量吧，也能加快自己网站图片的打开速度，<a href="https://github.com/focusbe/tinyImage" target="_blank" rel="noopener">https://github.com/focusbe/tinyImage</a></p><p>图床：<br>国内：<br>速度快：<br>聚合：<a href="https://www.superbed.cn/" target="_blank" rel="noopener">https://www.superbed.cn/</a><br>TG：<a href="https://imgtg.com/" target="_blank" rel="noopener">https://imgtg.com/</a><br>老王：<a href="https://img.gejiba.com/" target="_blank" rel="noopener">https://img.gejiba.com/</a><br>hello：<a href="https://www.helloimg.com/" target="_blank" rel="noopener">https://www.helloimg.com/</a><br>国外：<br>速度还行：<br><a href="https://www.imgurl.org/" target="_blank" rel="noopener">https://www.imgurl.org/</a><br>路过：<a href="https://imgtu.com/" target="_blank" rel="noopener">https://imgtu.com/</a><br>笑果：<a href="https://imagelol.com/" target="_blank" rel="noopener">https://imagelol.com/</a><br>速度慢：<br><a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a><br><a href="https://www.z4a.net/" target="_blank" rel="noopener">https://www.z4a.net/</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="img" scheme="https://blog.axiao.vip/categories/img/"/>
    
    
      <category term="img" scheme="https://blog.axiao.vip/tags/img/"/>
    
  </entry>
  
  <entry>
    <title>国内外静态库比较</title>
    <link href="https://blog.axiao.vip/cdn-static.html"/>
    <id>https://blog.axiao.vip/cdn-static.html</id>
    <published>2022-05-17T14:15:50.107Z</published>
    <updated>2022-05-24T13:19:48.448Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><blockquote><p>jsDelivr 由于dns被污染，时不时挂掉，所以放弃了</p></blockquote><h2 id="jsDelivr-备选站"><a href="#jsDelivr-备选站" class="headerlink" title="jsDelivr 备选站"></a>jsDelivr 备选站</h2><p>目前jsDelivr有以下备选站，分别由不同的赞助商提供，目前DNS还没有被污染，使用方法和 <code>cdn.jsdelivr.net</code> 相同</p><ul><li><code>https://fastly.jsdelivr.net/</code> 由fastly提供</li><li><code>https://gcore.jsdelivr.net/</code> 由G-Core Labs提供</li><li><code>https://testingcf.jsdelivr.net/</code> 由CloudFlare提供</li></ul><p>其实 <code>cdn.jsdelivr.net</code> 就是由上述几家服务的综合，只不过在特定情况只解析某一个特定服务商。</p><p>至于这三个的速度，请自行去类似boce之类的网站上测试（我这里是fastly最好）。<strong>建议有在使用jsDelivr的站长尽快更换一下，不然肯定会有访客访问不了的。</strong></p><p>国内站点可以使用：</p><ul><li><a href="https://www.staticfile.org/" target="_blank" rel="noopener">https://www.staticfile.org/</a> – 由七牛云及掘金提供支持</li><li><a href="https://www.bootcdn.cn/" target="_blank" rel="noopener">https://www.bootcdn.cn/</a> – 由极兔云联合BootStrap中文网提供</li><li><a href="https://cdn.bytedance.com/" target="_blank" rel="noopener">https://cdn.bytedance.com/</a> – 字节跳动提供，内容与cdnjs一致</li><li><a href="https://npm.elemecdn.com/" target="_blank" rel="noopener">https://npm.elemecdn.com/</a> – 内容与unpkg一致</li><li><a href="https://cdn.baomitu.com/" target="_blank" rel="noopener">静态资源托管库 (baomitu.com)</a> – 360前端资源库</li></ul><p>国外站点使用：</p><ul><li><a href="https://cdnjs.com/" target="_blank" rel="noopener">https://cdnjs.com/</a> – 由CloudFlare等提供支持</li><li><a href="https://unpkg.com/" target="_blank" rel="noopener">https://unpkg.com/</a> – 也是CloudFlare提供支持，<strong>仅限npm包</strong></li></ul><p>使用时可以ping一下哪个快用那个</p><p>国外：unpkg.com</p><blockquote><p>unpkg的使用，找哪个静态资源，就在<a href="https://unpkg.com/后面写资源的名字，例如https://unpkg.com/jquery，会出来https://unpkg.com/jquery@3.6.0/dist/jquery.js，然后再去掉最后的jquery.js，就可以选择版本了" target="_blank" rel="noopener">https://unpkg.com/后面写资源的名字，例如https://unpkg.com/jquery，会出来https://unpkg.com/jquery@3.6.0/dist/jquery.js，然后再去掉最后的jquery.js，就可以选择版本了</a></p></blockquote><p>暂时国内：字节跳动，elemecdn</p><blockquote><p>elemecdn的使用，通过unpkg找出来的链接，直接把域名unpkg.com改为npm.elemecdn.com即可使用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">https://npm.elemecdn.com/bootstrap@3.3.7/dist/css/bootstrap.min.css</span><br><span class="line">//unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css</span><br><span class="line">//lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/font-awesome/4.7.0/css/font-awesome.min.css</span><br><span class="line">//unpkg.com/font-awesome@4.7.0/css/font-awesome.min.css</span><br><span class="line">//unpkg.com/twikoo@1.5.9/dist/twikoo.all.min.js</span><br><span class="line">https://npm.elemecdn.com/twikoo@1.5.9/dist/twikoo.all.min.js</span><br><span class="line">//lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/valine/1.4.16/Valine.min.js</span><br><span class="line">https://unpkg.com/valine@1.4.16/dist/Valine.min.js</span><br><span class="line">//lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery/2.0.3/jquery.min.js</span><br><span class="line">https://unpkg.com/jquery@2.1.1/dist/jquery.min.js</span><br><span class="line">//lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/social-share.js/1.0.16/css/share.min.css</span><br><span class="line">https://cdnjs.cloudflare.com/ajax/libs/social-share.js/1.0.16/css/share.min.css</span><br><span class="line">//lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/social-share.js/1.0.16/js/social-share.min.js</span><br><span class="line">https://cdnjs.cloudflare.com/ajax/libs/social-share.js/1.0.16/js/social-share.min.js</span><br><span class="line">//lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.js</span><br><span class="line">https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.2.0/nprogress.min.js</span><br><span class="line">//lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/nprogress/0.2.0/nprogress.min.css</span><br><span class="line">https://cdnjs.cloudflare.com/ajax/libs/nprogress/0.2.0/nprogress.min.css</span><br><span class="line">//lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery.pjax/2.0.1/jquery.pjax.min.js</span><br><span class="line">https://cdnjs.cloudflare.com/ajax/libs/jquery.pjax/2.0.1/jquery.pjax.min.js</span><br><span class="line">//lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.css</span><br><span class="line">https://unpkg.com/aplayer@1.10.1/dist/APlayer.min.css</span><br><span class="line">//lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.js</span><br><span class="line">https://unpkg.com/aplayer@1.10.1/dist/APlayer.min.js</span><br><span class="line">//unpkg.com/meting@2.0.1/dist/Meting.min.js</span><br><span class="line">https://npm.elemecdn.com/meting@2.0.1/dist/Meting.min.js</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="cdn" scheme="https://blog.axiao.vip/categories/cdn/"/>
    
    
      <category term="static" scheme="https://blog.axiao.vip/tags/static/"/>
    
  </entry>
  
  <entry>
    <title>css头部特效</title>
    <link href="https://blog.axiao.vip/css-1.html"/>
    <id>https://blog.axiao.vip/css-1.html</id>
    <published>2022-05-11T10:42:40.029Z</published>
    <updated>2022-05-11T10:46:48.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><p>本篇文章给大家分享多个使用css实现的炫酷边框动画。有一定的参考价值，有需要的朋友可以参考一下，希望对大家有所帮助。</p><p><img src="../images/6038582ea8833346.jpg" alt="img"></p><p>【推荐教程：<a href="https://www.php.cn/course/list/12/type/2.html" target="_blank" rel="noopener">CSS视频教程</a> 】</p><p>今天看到这样一个界面，非常有意思：</p><p><img src="../images/1614304955638576.png" alt="1.png"></p><p>觉得它的风格很独特，尤其是其中一些边框。</p><p>嘿嘿，所以来一篇边框特辑，看看运用 CSS，可以在边框上整些什么花样。</p><h2 id="border-属性"><a href="#border-属性" class="headerlink" title="border 属性"></a>border 属性</h2><p>谈到边框，首先会想到 <code>border</code>，我们最常用的莫过于 <code>solid</code>，<code>dashed</code>，上图中便出现了 <code>dashed</code>。</p><p>除了最常见的 <code>solid</code>，<code>dashed</code>，CSS border 还支持 <code>none</code>，<code>hidden</code>， <code>dotted</code>， <code>double</code>， <code>groove</code>， <code>ridge</code>， <code>inset</code>， <code>outset</code> 等样式。除去 <code>none</code>，<code>hidden</code>，看看所有原生支持的 border 的样式：</p><p><img src="../images/1614304995884721.png" alt="2.png"></p><p>基础的就这些，如果希望实现一个其他样式的边框，或者给边框加上动画，那就需要配合一些其他属性，或是脑洞大开。OK，一起来看看一些额外的有意思的边框。</p><h2 id="边框长度变化"><a href="#边框长度变化" class="headerlink" title="边框长度变化"></a>边框长度变化</h2><p>先来个比较简单的，实现一个类似这样的边框效果：</p><p><img src="../images/9f4f8cf5dcaef34835b46d21cff46980-2.gif" alt="img"></p><p>这里其实是借用了元素的两个伪元素。两个伪元素分别只设置上、左边框，下、右边框，通过 <code>hover</code> 时改变两个伪元素的高宽即可。非常好理解。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;position: relative;border: 1px solid #03A9F3;&amp;::before,&amp;::after &#123;content: ``&quot;&quot;``;position: absolute;width: 20px;height: 20px;&#125;&amp;::before &#123;top: -5px;left: -5px;border-top: 1px solid ``var``(--borderColor);border-left: 1px solid ``var``(--borderColor);&#125;&amp;::after &#123;right: -5px;bottom: -5px;border-bottom: 1px solid ``var``(--borderColor);border-right: 1px solid ``var``(--borderColor);&#125;&amp;:hover::before,&amp;:hover::after &#123;width: calc(100% + 9px);height: calc(100% + 9px);&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/Chokcoco/pen/BaLvJOb" target="_blank" rel="noopener">CodePen Demo – width border animation</a></p><p>接下来，会开始加深一些难度。</p><h2 id="虚线边框动画"><a href="#虚线边框动画" class="headerlink" title="虚线边框动画"></a>虚线边框动画</h2><p>使用 <code>dashed</code> 关键字，可以方便的创建虚线边框。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;border: 1px dashed #333;&#125;复制代码</span><br></pre></td></tr></table></figure><p><img src="../images/9f4f8cf5dcaef34835b46d21cff46980-3.png" alt="img"></p><p>当然，我们的目的是让边框能够动起来。使用 <code>dashed</code> 关键字是没有办法的。但是实现虚线的方式在 CSS 中有很多种，譬如渐变就是一种很好的方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;background: linear-gradient(90deg, #333 50%, transparent 0) repeat-x;background-size: 4px 1px;background-position: 0 0;&#125;复制代码</span><br></pre></td></tr></table></figure><p>看看，使用渐变模拟的虚线如下：</p><p><img src="../images/1a753c128edd5bc07c865817fe83bf57-4.png" alt="img"></p><p>好，渐变支持多重渐变，我们把容器的 4 个边都用渐变表示即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;background:linear-gradient(90deg, #333 50%, transparent 0) repeat-x,linear-gradient(90deg, #333 50%, transparent 0) repeat-x,linear-gradient(0deg, #333 50%, transparent 0) repeat-y,linear-gradient(0deg, #333 50%, transparent 0) repeat-y;background-size: 4px 1px, 4px 1px, 1px 4px, 1px 4px;background-position: 0 0, 0 100%, 0 0, 100% 0;&#125;复制代码</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="../images/1a753c128edd5bc07c865817fe83bf57-5.png" alt="img"></p><p>OK，至此，我们的虚线边框动画其实算是完成了一大半了。虽然 <code>border-style: dashed</code> 不支持动画，但是渐变支持呀。我们给上述 div 再加上一个 <code>hover</code> 效果，<code>hover</code> 的时候新增一个 <code>animation</code> 动画，改变元素的 <code>background-position</code> 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div:hover &#123;animation: linearGradientMove .3s infinite linear;&#125;@keyframes linearGradientMove &#123;100% &#123;background-position: 4px 0, -4px 100%, 0 -4px, 100% 4px;&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>OK，看看效果，hover 上去的时候，边框就能<strong>动起来</strong>，因为整个动画是首尾相连的，无限循环的动画看起来就像是虚线边框在一直运动，这算是一个小小的障眼法或者小技巧：</p><p><img src="../images/1a753c128edd5bc07c865817fe83bf57-6.gif" alt="img"></p><p>这里还有另外一个小技巧，如果我们希望虚线边框动画是从其他边框，过渡到虚线边框，再行进动画。完全由渐变来模拟也是可以的，如果想节省一些代码，使用 <code>border</code> 会更快一些，譬如这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;border: 1px solid #333;&amp;:hover &#123;border: none;background:linear-gradient(90deg, #333 50%, transparent 0) repeat-x,linear-gradient(90deg, #333 50%, transparent 0) repeat-x,linear-gradient(0deg, #333 50%, transparent 0) repeat-y,linear-gradient(0deg, #333 50%, transparent 0) repeat-y;background-size: 4px 1px, 4px 1px, 1px 4px, 1px 4px;background-position: 0 0, 0 100%, 0 0, 100% 0;&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>由于 border 和 background 在盒子模型上位置的差异，视觉上会有一个很明显的错位的感觉：</p><p><img src="../images/98c7cd90a8f65b991224f4dc4d3f50a0-7.gif" alt="img"></p><p>要想解决这个问题，我们可以把 <code>border</code> 替换成 <code>outline</code>，因为 <code>outline</code> 可以设置 <code>outline-offset</code>。便能完美解决这个问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;outline: 1px solid #333;outline-offset: -1px;&amp;:hover &#123;outline: none;&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>最后看看运用到实际按钮上的效果：</p><p><img src="../images/98c7cd90a8f65b991224f4dc4d3f50a0-8.gif" alt="img"></p><p>上述 Demo 完整代码如下：</p><p><a href="https://codepen.io/Chokcoco/pen/NWRevaJ" target="_blank" rel="noopener">CodePen Demo – dashed border animation</a></p><blockquote><p>其实由于背景和边框的特殊关系，使用 border 的时候，通过修改 <code>background-position</code> 也是可以解决的，就是比较绕。关于背景和边框的填充关系，可以看这篇文章：<a href="https://github.com/chokcoco/iCSS/issues/1" target="_blank" rel="noopener">条纹边框的多种实现方式</a></p></blockquote><h2 id="渐变的其他妙用"><a href="#渐变的其他妙用" class="headerlink" title="渐变的其他妙用"></a>渐变的其他妙用</h2><p>利用渐变，不仅仅只是能完成上述的效果。</p><p>我们继续深挖渐变，利用渐变实现这样一个背景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;position: relative;&amp;::after &#123;content: ``&apos;&apos;``;position: absolute;left: -50%;top: -50%;width: 200%;height: 200%;background-repeat: no-repeat;background-size: 50% 50%, 50% 50%;background-position: 0 0, 100% 0, 100% 100%, 0 100%;background-image: linear-gradient(#399953, #399953), linear-gradient(#fbb300, #fbb300), linear-gradient(#d53e33, #d53e33), linear-gradient(#377af5, #377af5);&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>注意，这里运用了元素的伪元素生成的这个图形，并且，宽高都是父元素的 <code>200%</code>，超出则 <code>overflow: hidden</code>。</p><p><img src="../images/e2b45f449544d108ea4833e1c43f51e5-9.png" alt="img"></p><p>接下来，给它加上旋转：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;animation: rotate 4s linear infinite;&#125;@keyframes rotate &#123; 100% &#123;transform: rotate(1turn); &#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>看看效果：</p><p><img src="../images/e2b45f449544d108ea4833e1c43f51e5-10.gif" alt="img"></p><p>最后，再利用一个伪元素，将中间遮罩起来，一个 Nice 的边框动画就出来了 (动画会出现半透明元素，方便示意看懂原理)：</p><p><img src="../images/936095856f9dce192dd51df5b80de21d-11.gif" alt="img"></p><p>上述 Demo 完整代码如下，这个效果我最早见于这位作者 – <a href="https://codepen.io/Chester" target="_blank" rel="noopener">Jesse B</a></p><p><a href="https://codepen.io/Chokcoco/pen/YzGdEMZ" target="_blank" rel="noopener">CodePen Demo – gradient border animation</a></p><h3 id="改变渐变的颜色"><a href="#改变渐变的颜色" class="headerlink" title="改变渐变的颜色"></a>改变渐变的颜色</h3><p>掌握了上述的基本技巧之后，我们可以再对渐变的颜色做一些调整，我们将 4 种颜色变成 1 种颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div::after &#123;content: ``&apos;&apos;``;position: absolute;left: -50%;top: -50%;width: 200%;height: 200%;background-color: #fff;background-repeat: no-repeat;background-size: 50% 50%;background-position: 0 0;background-image: linear-gradient(#399953, #399953);&#125;复制代码</span><br></pre></td></tr></table></figure><p>得到这样一个图形：</p><p><img src="../images/936095856f9dce192dd51df5b80de21d-12.png" alt="img"></p><p>同样的，让它旋转一起，一个单色追逐的边框动画就出来了：</p><p><img src="../images/0e3103cd1170d086ae48aed0766ef812-13.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/zYKybmV" target="_blank" rel="noopener">CodePen Demo – gradient border animation 2</a></p><p>Wow，很不错的样子。不过如果是单线条，有个很明显的缺陷，就是边框的末尾是一个小三角而不是垂直的，可能有些场景不适用或者 PM 接受不了。</p><p><img src="../images/30ecfd758a2e50ef0390ba874472b74b-14.png" alt="img"></p><p>那有没有什么办法能够消除掉这些小三角呢？有的，在下文中我们再介绍一种方法，利用 <code>clip-path</code> ，消除掉这些小三角。</p><h3 id="conic-gradient-的妙用"><a href="#conic-gradient-的妙用" class="headerlink" title="conic-gradient 的妙用"></a><code>conic-gradient</code> 的妙用</h3><p>再介绍 <code>clip-path</code> 之前，先讲讲角向渐变。</p><p>上述主要用到了的是线性渐变 <code>linear-gradient</code> 。我们使用角向渐变 <code>conic-gradient</code> 其实完全也可以实现一模一样的效果。</p><p>我们试着使用 <code>conic-gradient</code> 也实现一次，这次换一种暗黑风格。核心代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.conic &#123;position: relative; &amp;::before &#123;content: ``&apos;&apos;``;position: absolute;left: -50%;top: -50%;width: 200%;height: 200%;background: conic-gradient(transparent, rgba(168, 239, 255, 1), transparent 30%);animation: rotate 4s linear infinite; &#125;&#125;@keyframes rotate &#123;  100% &#123;transform: rotate(1turn); &#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>效果图和示意图如下，旋转一个部分角向渐变的图形，中间的部分使用另外一个伪元素进行遮罩，只漏出线条部分即可：</p><p><img src="../images/30ecfd758a2e50ef0390ba874472b74b-15.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/dypaobm" target="_blank" rel="noopener">CodePen Demo – Rotating border 3</a></p><h2 id="clip-path-的妙用"><a href="#clip-path-的妙用" class="headerlink" title="clip-path 的妙用"></a><code>clip-path</code> 的妙用</h2><p>又是老朋友 <code>clip-path</code>，有意思的事情它总不会缺席。</p><p><code>clip-path</code> 本身是可以进行坐标点的动画的，从一个裁剪形状变换到另外一个裁剪形状。</p><p>利用这个特点，我们可以巧妙的实现这样一种 border 跟随效果。伪代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;position: relative;&amp;::before &#123;content: ``&quot;&quot;``;position: absolute;top: 0;left: 0;right: 0;bottom: 0;border: 2px solid gold;animation: clippath 3s infinite linear;&#125;&#125;@keyframes clippath &#123;0%,100% &#123;clip-path: inset(0 0 95% 0);&#125;25% &#123;clip-path: inset(0 95% 0 0);&#125;50% &#123;clip-path: inset(95% 0 0 0);&#125;75% &#123;clip-path: inset(0 0 0 95%);&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p>效果图与示意图一起：</p><p><img src="../images/68af7ba35b1e937770173dea62f85de6-16.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/bGNJGWX" target="_blank" rel="noopener">CodePen - clip-path border animation</a></p><p>这里，因为会裁剪元素，借用伪元素作为背景进行裁剪并动画即可，使用 <code>clip-path</code> 的优点了，切割出来的边框不会产生小三角。同时，这种方法，也是支持圆角 <code>border-radius</code> 的。</p><p>如果我们把另外一个伪元素也用上，实际实现一个按钮样式，可以得到这样的效果：</p><p><img src="../images/68af7ba35b1e937770173dea62f85de6-17.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/dypayrM" target="_blank" rel="noopener">CodePen - clip-path border animation 2</a></p><h2 id="overflow-的妙用"><a href="#overflow-的妙用" class="headerlink" title="overflow 的妙用"></a><code>overflow</code> 的妙用</h2><p>下面这个技巧利用 overflow 实现。实现这样一个边框动画：</p><p><img src="../images/c1789e86f8130c9dc13eccc9572f77cc-18.gif" alt="img"></p><p>为何说是利用 <code>overflow</code> 实现？</p><p>贴个示意图：</p><p><img src="../images/c1789e86f8130c9dc13eccc9572f77cc-19.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/PooBpQe" target="_blank" rel="noopener">CodePen Demo – 巧用overflow及transform实现线条hover效果</a></p><p>两个核心点：</p><ol><li>我们利用 <code>overflow: hidden</code>，把原本在容器外的一整个元素隐藏了起来</li><li>利用了 <code>transform-origin</code>，控制了元素的旋转中心</li></ol><p>发现没，其实几乎大部分的有意思的 CSS 效果，都是运用了类似技巧：</p><p><strong>简单的说就是，我们看到的动画只是原本现象的一小部分，通过特定的裁剪、透明度的变化、遮罩等，让我们最后只看到了原本现象的一部分。</strong></p><h2 id="border-image-的妙用"><a href="#border-image-的妙用" class="headerlink" title="border-image 的妙用"></a><code>border-image</code> 的妙用</h2><p>利用 <code>border-image</code>，我们也可以实现一些有意思的边框动画。关于 <code>border-image</code>，有一篇非常好的讲解文章 – <a href="https://aotu.io/notes/2016/11/02/border-image/index.html" target="_blank" rel="noopener">border-image 的正确用法</a>，本文不对基本定义做过多的讲解。</p><p>如果我们有这样一张图：</p><p><img src="../images/eae2b24113f104036950bdca0ae2009e-20.png" alt="img"></p><p>便可以利用 <code>border-image-slice</code> 及 <code>border-image-repeat</code> 的特性，得到类似的边框图案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div &#123;width: 200px;height: 120px;border: 24px solid;border-image: url(image-url);border-image-slice: 32;border-image-repeat: ``round``;&#125;复制代码</span><br></pre></td></tr></table></figure><p>在这个基础上，可以随便改变元素的高宽，如此便能扩展到任意大小的容器边框中：</p><p><img src="../images/eae2b24113f104036950bdca0ae2009e-21.png" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/oNzJeKd" target="_blank" rel="noopener">CodePen Demo – border-image Demo</a></p><p>接着，在这篇文章 – <a href="https://css-tricks.com/how-to-animate-a-svg-with-border-image/" target="_blank" rel="noopener">How to Animate a SVG with border-image</a> 中，还讲解了一种利用 <code>border-image</code> 的边框动画，非常的酷炫。</p><p>与上面例子不一样的是，我们只需要让我们的图案，动起来，就是我们需要这样一个背景图（掘金不支持 SVG 动图，<a href="https://skullctf.com/images/skull-border.svg" target="_blank" rel="noopener">原图地址</a>）：</p><p><img src="../images/eae2b24113f104036950bdca0ae2009e-22.gif" alt="img"></p><p>那么，我们也就能得到运动的边框图，代码完全一样，但是，边框是运动的：</p><p><img src="../images/840badcb04cfca86ed833dc8254e015a-23.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/XWjEgRq" target="_blank" rel="noopener">CodePen Demo – Dancing Skull Border</a></p><h3 id="border-image-使用渐变"><a href="#border-image-使用渐变" class="headerlink" title="border-image 使用渐变"></a><code>border-image</code> 使用渐变</h3><p><code>border-image</code> 除了贴图引用 <code>url</code> 之外，也是可以直接填充颜色或者是渐变的。</p><p>之前也有一篇关于 <code>border-image</code> 的文章 – <a href="https://github.com/chokcoco/iCSS/issues/77" target="_blank" rel="noopener">巧妙实现带圆角的渐变边框</a></p><p>我们可以利用 <code>border-image</code> + <code>filter</code> + <code>clip-path</code> 实现渐变变换的圆角边框：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.border-image-clip-path &#123;width: 200px;height: 100px;border: 10px solid;border-image: linear-gradient(45deg, gold, deeppink) 1;clip-path: inset(0px ``round` `10px);animation: huerotate 6s infinite linear;filter: hue-rotate(360deg);&#125;@keyframes huerotate &#123;0% &#123;filter: hue-rotate(0deg);&#125;100% &#123;filter: hue-rotate(360deg);&#125;&#125;复制代码</span><br></pre></td></tr></table></figure><p><img src="../images/840badcb04cfca86ed833dc8254e015a-24.gif" alt="img"></p><p><a href="https://codepen.io/Chokcoco/pen/povBORP" target="_blank" rel="noopener">CodePen Demo – clip-path、border-image 加 filter 实现圆角渐变边框</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="css" scheme="https://blog.axiao.vip/categories/css/"/>
    
    
      <category term="css" scheme="https://blog.axiao.vip/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>hexo向上滚动的广告</title>
    <link href="https://blog.axiao.vip/hexo-extend-gg.html"/>
    <id>https://blog.axiao.vip/hexo-extend-gg.html</id>
    <published>2022-05-10T16:14:03.404Z</published>
    <updated>2022-05-10T16:16:54.186Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><p>html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;head-gg&quot;&gt;</span><br><span class="line">      &lt;div id=&quot;marqueebox&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;head-gg&quot;&gt;&lt;a href=&quot;/adobe.html&quot;&gt;全家桶合集安装包&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;head-gg&quot;&gt;&lt;a href=&quot;/adobe_m1.html&quot;&gt;M1原生2022合集安装包&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;head-gg&quot;&gt;&lt;a href=&quot;/adobe_plugins.html&quot;&gt;插件一键安装合集安装包&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>css</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#head-gg</span><br><span class="line">  max-width: (column-width + gutter-width) * columns + gutter-width</span><br><span class="line">  height: 40px</span><br><span class="line">  position: fixed</span><br><span class="line">  overflow: hidden</span><br><span class="line">  z-index: 99</span><br><span class="line"></span><br><span class="line">.head-gg</span><br><span class="line">  position: relative</span><br><span class="line">  line-height: 40px</span><br><span class="line">  background-image:linear-gradient(left,#fcc5e4,#7b05e6 25%,#6befd1 50%,#cee605 75%,#ef5bcf);</span><br><span class="line">  color:transparent;</span><br><span class="line">  -webkit-background-clip:text;</span><br><span class="line">  background-size:200% 100%;</span><br><span class="line">  -webkit-animation:masked-animation 5s infinite linear;</span><br><span class="line">  animation:masked-animation 5s infinite linear;</span><br><span class="line">  -webkit-transition: margin-left .8s;</span><br><span class="line">  -moz-transition: margin-left .8s;</span><br><span class="line">  -o-transition: margin-left .8s;</span><br><span class="line">  font-weight: bold</span><br><span class="line">  overflow: hidden</span><br><span class="line">  &amp;:before</span><br><span class="line">    content: url(/images/bulletin.gif)</span><br><span class="line">    position: relative</span><br><span class="line">    top: 5px</span><br><span class="line">    margin-right: 5px</span><br><span class="line"></span><br><span class="line">.head-gg a</span><br><span class="line">  background-image:linear-gradient(left,#fcc5e4,#7b05e6 25%,#6befd1 50%,#cee605 75%,#ef5bcf);</span><br><span class="line">  color:transparent;</span><br><span class="line">  -webkit-background-clip:text;</span><br><span class="line">  background-size:200% 100%;</span><br><span class="line">  -webkit-animation:masked-animation 5s infinite linear;</span><br><span class="line">  animation:masked-animation 5s infinite linear;</span><br><span class="line">  -webkit-transition: margin-left .8s;</span><br><span class="line">  -moz-transition: margin-left .8s;</span><br><span class="line">  -o-transition: margin-left .8s;</span><br><span class="line">  text-decoration: none</span><br><span class="line">  &amp;:hover</span><br><span class="line">    color: #fff</span><br><span class="line">  &amp;:after</span><br><span class="line">    font: 14px/1em FontAwesome</span><br><span class="line">    content: &apos;点击直达\f0a5&apos;</span><br><span class="line">    margin-left: 10px</span><br><span class="line">    font-weight: bold</span><br></pre></td></tr></table></figure><p>js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">//滚动广告</span><br><span class="line">function startmarquee(lh, speed, delay) &#123;</span><br><span class="line">  var p = false;</span><br><span class="line">  var t;</span><br><span class="line">  var o = document.getElementById(&quot;marqueebox&quot;);</span><br><span class="line">  o.innerHTML += o.innerHTML;</span><br><span class="line">  o.style.marginTop = 0;</span><br><span class="line">  o.onmouseover = function() &#123;</span><br><span class="line">    p = true;</span><br><span class="line">  &#125;</span><br><span class="line">  o.onmouseout = function() &#123;</span><br><span class="line">    p = false;</span><br><span class="line">  &#125;</span><br><span class="line">  //开始函数</span><br><span class="line">  function start() &#123;</span><br><span class="line">    t = setInterval(scrolling, speed);</span><br><span class="line">    if (!p) o.style.marginTop = parseInt(o.style.marginTop) - 1 + &quot;px&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  //滚动函数。</span><br><span class="line">  function scrolling() &#123;</span><br><span class="line">    if (parseInt(o.style.marginTop) % lh != 0) &#123;</span><br><span class="line">      o.style.marginTop = parseInt(o.style.marginTop) - 1 + &quot;px&quot;;</span><br><span class="line">      if (Math.abs(parseInt(o.style.marginTop)) &gt;= o.scrollHeight / 2) o.style.marginTop = 0;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      clearInterval(t);</span><br><span class="line">      setTimeout(start, delay);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; //开始执行</span><br><span class="line">  setTimeout(start, delay);</span><br><span class="line">&#125;</span><br><span class="line">//调用函数实例</span><br><span class="line">startmarquee(40, 1, 5000);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>fontawesome动态旋转图标类（fa-spin&amp;fa-pulse）</title>
    <link href="https://blog.axiao.vip/fontawesome.html"/>
    <id>https://blog.axiao.vip/fontawesome.html</id>
    <published>2022-05-07T11:54:18.975Z</published>
    <updated>2022-05-07T11:58:22.862Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><h5 id="fa-spin类：将”fa-spinner”这个图标旋转起来，形成一个连续流畅的旋转动画效果。"><a href="#fa-spin类：将”fa-spinner”这个图标旋转起来，形成一个连续流畅的旋转动画效果。" class="headerlink" title="fa-spin类：将”fa-spinner”这个图标旋转起来，形成一个连续流畅的旋转动画效果。"></a>fa-spin类：将”fa-spinner”这个图标旋转起来，形成一个连续流畅的旋转动画效果。</h5><h5 id="fa-pulse类：将”fa-spinner”这个图标以八步为周期旋转起来，形成一个不太流畅的旋转动画效果。"><a href="#fa-pulse类：将”fa-spinner”这个图标以八步为周期旋转起来，形成一个不太流畅的旋转动画效果。" class="headerlink" title="fa-pulse类：将”fa-spinner”这个图标以八步为周期旋转起来，形成一个不太流畅的旋转动画效果。"></a>fa-pulse类：将”fa-spinner”这个图标以八步为周期旋转起来，形成一个不太流畅的旋转动画效果。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;FontAwesome动态旋转图标&lt;/title&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;这是四个用fa-spin类实现的旋转流畅的加载图标&lt;/p&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-circle-o-notch fa-spin&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-refresh fa-spin&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-cog fa-spin&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;p&gt;这是四个用fa-pulse类实现的旋转不太流畅的加载图标&lt;/p&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-spinner fa-pulse&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-circle-o-notch fa-pulse&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-refresh fa-pulse&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i class=&quot;fa fa-cog fa-pulse&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="fontawesome" scheme="https://blog.axiao.vip/categories/fontawesome/"/>
    
    
      <category term="font" scheme="https://blog.axiao.vip/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>hexo文章页面的一些实用操作</title>
    <link href="https://blog.axiao.vip/hexo-extend-post.html"/>
    <id>https://blog.axiao.vip/hexo-extend-post.html</id>
    <published>2022-05-03T09:52:10.730Z</published>
    <updated>2022-05-25T13:31:22.778Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><h3 id="第一步：代码复制功能"><a href="#第一步：代码复制功能" class="headerlink" title="第一步：代码复制功能"></a>第一步：代码复制功能</h3><p>1.js代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">//复制代码</span><br><span class="line">  $(&quot;.highlight&quot;).not(&quot;.gist .highlight&quot;).each(function(b, c) &#123;</span><br><span class="line">    var a = $(&quot;&lt;div&gt;&quot;).addClass(&quot;highlight-wrap&quot;);</span><br><span class="line">    $(c).after(a);</span><br><span class="line">    a.append($(&quot;&lt;button&gt;&quot;).addClass(&quot;copy-btn&quot;).append(&quot;复制&quot;).on(&quot;click&quot;,</span><br><span class="line">    function(k) &#123;</span><br><span class="line">        var j = $(this).parent().find(&quot;.code&quot;).find(&quot;.line&quot;).map(function(l, m) &#123;</span><br><span class="line">            return $(m).text()</span><br><span class="line">        &#125;).toArray().join(&quot;\n&quot;);</span><br><span class="line">        var f = document.createElement(&quot;textarea&quot;);</span><br><span class="line">        var i = window.pageYOffset || document.documentElement.scrollTop;</span><br><span class="line">        f.style.top = i + &quot;px&quot;;</span><br><span class="line">        f.style.position = &quot;absolute&quot;;</span><br><span class="line">        f.style.opacity = &quot;0&quot;;</span><br><span class="line">        f.readOnly = true;</span><br><span class="line">        f.value = j;</span><br><span class="line">        document.body.appendChild(f);</span><br><span class="line">        const h = document.getSelection();</span><br><span class="line">        const g = h.rangeCount &gt; 0 ? h.getRangeAt(0) : false;</span><br><span class="line">        f.select();</span><br><span class="line">        f.setSelectionRange(0, j.length);</span><br><span class="line">        f.readOnly = false;</span><br><span class="line">        var d = document.execCommand(&quot;copy&quot;);</span><br><span class="line">        if (d) &#123;</span><br><span class="line">            $(this).text(&quot;复制成功&quot;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $(this).text(&quot;复制失败&quot;)</span><br><span class="line">        &#125;</span><br><span class="line">        f.blur();</span><br><span class="line">        $(this).blur();</span><br><span class="line">        if (g) &#123;</span><br><span class="line">            h.removeAllRanges();</span><br><span class="line">            h.addRange(g)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)).on(&quot;mouseleave&quot;,</span><br><span class="line">    function(f) &#123;</span><br><span class="line">        var d = $(this).find(&quot;.copy-btn&quot;);</span><br><span class="line">        setTimeout(function() &#123;</span><br><span class="line">            d.text(&quot;复制&quot;)</span><br><span class="line">        &#125;,</span><br><span class="line">        300)</span><br><span class="line">    &#125;).append(c)</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>2.css代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">/*====================================================</span><br><span class="line">    copy-code</span><br><span class="line">====================================================*/</span><br><span class="line">.copy-btn &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  padding: 6px 12px;</span><br><span class="line">  font-size: 13px;</span><br><span class="line">  font-weight: 700;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  color: #333;</span><br><span class="line">  white-space: nowrap;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  background-color: #ebebeb;</span><br><span class="line">  border: none;</span><br><span class="line">  user-select: none;</span><br><span class="line">  outline: 0;</span><br><span class="line">&#125;</span><br><span class="line">.copy-btn:hover &#123;</span><br><span class="line">  background-color: #e67e22;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">.highlight-wrap .copy-btn &#123;</span><br><span class="line">  transition: opacity .3s ease-in-out;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  padding: 2px 6px;</span><br><span class="line">  position: absolute;</span><br><span class="line">  right: 0px;</span><br><span class="line">  z-index: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-wrap:hover .copy-btn,</span><br><span class="line">.highlight-wrap .copy-btn:focus &#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.highlight-wrap &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.引入即可</p><h3 id="第二步：文章图片点击放大"><a href="#第二步：文章图片点击放大" class="headerlink" title="第二步：文章图片点击放大"></a>第二步：文章图片点击放大</h3><p>1.js代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章中图片点击放大</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">createImgEventFullScreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> imgs = $(<span class="string">".post-body"</span>).find(<span class="string">"img"</span>);</span><br><span class="line">      <span class="comment">// console.log(imgs);</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span><br><span class="line">          <span class="comment">// $(imgs[i]).click(createCover(imgs[i]));</span></span><br><span class="line">          imgs[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> src = e.srcElement.currentSrc;</span><br><span class="line">              <span class="keyword">var</span> _this = $(<span class="keyword">this</span>);</span><br><span class="line">              <span class="comment">// console.log(_this);</span></span><br><span class="line">              createCover(src,_this);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">createCover</span>(<span class="params">src,_this</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// console.log(_this);</span></span><br><span class="line">          <span class="comment">// console.log(src);</span></span><br><span class="line">          <span class="keyword">var</span> cover = $(<span class="string">"&lt;div id='outerDiv'  style='position:fixed;top:0;left:0;background:rgba(0,0,0,0.7);z-index:5;width:100%;height:100%;display:none;'&gt;&lt;div id='innerDiv' style='position:absolute;'&gt;&lt;img  id='bigImg' style='border:5px solid #fff;' src=''/&gt;&lt;/div&gt;&lt;/div&gt;"</span>);</span><br><span class="line">          $(<span class="string">"#outerDiv"</span>).remove();</span><br><span class="line">          $(<span class="string">"body"</span>).append(cover);</span><br><span class="line">          imgShow(<span class="string">"#outerDiv"</span>, <span class="string">"#innerDiv"</span>, <span class="string">"#bigImg"</span>, _this,src);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">imgShow</span>(<span class="params">outerDiv, innerDiv, bigImg, _this,src</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//var src = _this.attr("src"); //获取当前点击的common-img元素中的src属性</span></span><br><span class="line">    $(bigImg).attr(<span class="string">"src"</span>, src); <span class="comment">//设置#bigImg元素的src属性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*获取当前点击图片的真实大小，并显示弹出层及大图*/</span></span><br><span class="line">    $(<span class="string">"&lt;img/&gt;"</span>).attr(<span class="string">"src"</span>, src).on(<span class="string">'load'</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> windowW = $(<span class="built_in">window</span>).width(); <span class="comment">//获取当前窗口宽度</span></span><br><span class="line">        <span class="keyword">var</span> windowH = $(<span class="built_in">window</span>).height(); <span class="comment">//获取当前窗口高度</span></span><br><span class="line">        <span class="keyword">var</span> realWidth = <span class="keyword">this</span>.width; <span class="comment">//获取图片真实宽度</span></span><br><span class="line">        <span class="keyword">var</span> realHeight = <span class="keyword">this</span>.height; <span class="comment">//获取图片真实高度</span></span><br><span class="line">        <span class="keyword">var</span> imgWidth, imgHeight;</span><br><span class="line">        <span class="keyword">var</span> scale = <span class="number">0.8</span>; <span class="comment">//高度缩放尺寸</span></span><br><span class="line">        <span class="keyword">var</span> scale2 = <span class="number">0.95</span>; <span class="comment">//宽度缩放尺寸</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (realHeight &gt; windowH * scale) &#123; <span class="comment">//判断图片高度</span></span><br><span class="line">            imgHeight = windowH * scale; <span class="comment">//如大于窗口高度，图片高度进行缩放</span></span><br><span class="line">            imgWidth = imgHeight / realHeight * realWidth; <span class="comment">//等比例缩放宽度</span></span><br><span class="line">            <span class="keyword">if</span> (imgWidth &gt; windowW * scale2) &#123; <span class="comment">//如宽度仍大于窗口宽度</span></span><br><span class="line">                imgWidth = windowW * scale2; <span class="comment">//再对宽度进行缩放</span></span><br><span class="line">                imgHeight = imgWidth / realWidth * realHeight; <span class="comment">//等比例缩放高度</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (realWidth &gt; windowW * scale) &#123; <span class="comment">//如图片高度合适，判断图片宽度</span></span><br><span class="line">            imgWidth = windowW * scale2; <span class="comment">//如大于窗口宽度，图片宽度进行缩放</span></span><br><span class="line">            imgHeight = imgWidth / realWidth * realHeight; <span class="comment">//等比例缩放高度</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//如果图片真实高度和宽度都符合要求，高宽不变</span></span><br><span class="line">            imgWidth = realWidth;</span><br><span class="line">            imgHeight = realHeight;</span><br><span class="line">        &#125;</span><br><span class="line">        $(bigImg).css(<span class="string">"width"</span>, imgWidth); <span class="comment">//以最终的宽度对图片缩放</span></span><br><span class="line">        <span class="keyword">var</span> w = (windowW - imgWidth) / <span class="number">2</span>; <span class="comment">//计算图片与窗口左边距</span></span><br><span class="line">        <span class="keyword">var</span> h = (windowH - imgHeight) / <span class="number">2</span>; <span class="comment">//计算图片与窗口上边距</span></span><br><span class="line">        $(innerDiv).css(&#123; <span class="string">"top"</span>: h, <span class="string">"left"</span>: w &#125;); <span class="comment">//设置#innerDiv的top和left属性</span></span><br><span class="line">        <span class="comment">// console.log('窗口k:'+windowW+'图k:'+imgWidth+'窗口g:'+windowH+'图g:'+imgHeight);</span></span><br><span class="line">        $(outerDiv).fadeIn(<span class="string">"fast"</span>); <span class="comment">//淡入显示#outerDiv</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(outerDiv).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//再次点击淡出消失弹出层</span></span><br><span class="line">        $(<span class="keyword">this</span>).fadeOut(<span class="string">"fast"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      createImgEventFullScreen();</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>2.更改js代码中的第二行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//post-body不同的主题这个class不同，改成你的就行</span><br><span class="line">var imgs = $(&quot;.post-body&quot;).find(&quot;img&quot;);</span><br></pre></td></tr></table></figure><p>3.引入即可</p><h3 id="第三步：文章图片懒加载"><a href="#第三步：文章图片懒加载" class="headerlink" title="第三步：文章图片懒加载"></a>第三步：文章图片懒加载</h3><p>1.安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure><p>2.项目根目录_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: true</span><br><span class="line">  onlypost: true  # 是否只对文章的图片做懒加载</span><br><span class="line">  loadingImg: /images/loading.gif</span><br><span class="line">  isSPA: true # pjax需要开启这个</span><br><span class="line">  preloadRatio: 20 # 距离视窗倍数才加载，默认为1</span><br></pre></td></tr></table></figure><p>3.输入hexo命令查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="第四步：文章底部加公众号"><a href="#第四步：文章底部加公众号" class="headerlink" title="第四步：文章底部加公众号"></a>第四步：文章底部加公众号</h3><p>1.主题<code>layout\_partial</code>文件夹下新建<code>wechat-subscriber.ejs</code>，加入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">&lt;div style=&quot;margin-top:35px;text-align:center;&quot;&gt;</span><br><span class="line">------ &lt;span class=&quot;fa fa-heart&quot;&gt;&lt;/span&gt; 扫码&lt;b&gt; 免费 &lt;/b&gt;获取资料 ------</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;div style=&quot;text-align: center;margin-bottom:35px;&quot;&gt;</span><br><span class="line">&lt;img src=&quot;&lt;%= url_for(theme.wechat_subscriber.qcode) %&gt;&quot; title=&quot;微信公众号&quot; style=&quot;width: 200px&quot;/&gt;</span><br><span class="line">&lt;div&gt;&lt;%= theme.wechat_subscriber.description %&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>2.主题配置文件_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Wechat Subscriber</span><br><span class="line">wechat_subscriber:</span><br><span class="line">  enable: true</span><br><span class="line">  qcode: /img/wechat.jpg</span><br><span class="line">  description: 微信扫一扫，关注不迷路</span><br></pre></td></tr></table></figure><p>3.找到文章底部文件例：<code>post.ejs</code>，加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.wechat_subscriber.enable)&#123; %&gt;</span><br><span class="line">        &lt;%- partial(&apos;_partial/wechat-subscriber&apos;) %&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="第五步：底部添加分享"><a href="#第五步：底部添加分享" class="headerlink" title="第五步：底部添加分享"></a>第五步：底部添加分享</h3><p>1.主题<code>layout\_partial</code>文件夹下新建<code>socialshare.ejs</code>，加入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//lib.baomitu.com/jquery/2.0.3/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link href=&quot;//cdn.bootcdn.net/ajax/libs/social-share.js/1.0.16/css/share.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.bootcdn.net/ajax/libs/social-share.js/1.0.16/js/jquery.share.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>2.主题配置文件_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 分享</span><br><span class="line">social_share:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>3.找到文章底部文件例：<code>post.ejs</code>，加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.social_share.enable)&#123; %&gt;</span><br><span class="line">&lt;%- partial(&apos;_partial/socialshare&apos;) %&gt;</span><br><span class="line">&lt;div class=&quot;social-share&quot; data-sites=&quot;wechat,qq,weibo,douban,qzone,linkedin,diandian,facebook,twitter,google&quot; style=&quot;float: right;margin-top: 10px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="第六步：评论系统"><a href="#第六步：评论系统" class="headerlink" title="第六步：评论系统"></a>第六步：评论系统</h3><p>之前一直使用的Valine，自从发现twikoo后就感觉要换了，twikoo界面舒服，功能人性化</p><p>1.主题<code>layout\_partial</code>文件夹下新建<code>twikoo.ejs</code>，加入代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;tcomment&quot; class=&quot;twikoo&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;%- js(&apos;/js/twikoo.all.min.js&apos;) %&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    twikoo.init(&#123;</span><br><span class="line">        envId: &apos;&lt;%= theme.twikoo.envId %&gt;&apos;, // 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app）</span><br><span class="line">        el: &apos;#tcomment&apos;, // 容器元素</span><br><span class="line">        region: &apos;&lt;%= theme.twikoo.region %&gt;&apos;, // 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填</span><br><span class="line">        path: location.pathname, // 用于区分不同文章的自定义 js 路径，如果您的文章路径不是 location.pathname，需传此参数</span><br><span class="line">        lang: &apos;&lt;%= config.language %&gt;&apos;.toLowerCase(), // 用于手动设定评论区语言，支持的语言列表 https://github.com/imaegoo/twikoo/blob/main/src/js/utils/i18n/index.js</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.tk-footer[data-v-c0af544c] &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>2.主题配置文件_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">## Twikoo评论</span><br><span class="line">twikoo:</span><br><span class="line">  enable: true</span><br><span class="line">  envId: # 只需要填写这一个参数就可以</span><br><span class="line">  region: # vercel部署不用填写</span><br><span class="line">  </span><br><span class="line">## twikoo评论自带文章浏览统计,需要开启twikoo评论</span><br><span class="line">twikoo_counter:</span><br><span class="line">  page: true</span><br></pre></td></tr></table></figure><p>3.找到文章底部文件例：<code>post.ejs</code>，加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.twikoo.enable)&#123; %&gt;</span><br><span class="line">&lt;div id=&quot;comments&quot;&gt;</span><br><span class="line">    &lt;%- partial(&apos;_partial/twikoo&apos;) %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>4.文章统计：找到文章标题下方，加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(theme.twikoo_counter.page) &#123;%&gt;</span><br><span class="line">    &lt;span class=&quot;fa-wrap&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span id=&quot;twikoo_visitors&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>5.获取参数</p><p>使用免费的</p><table><thead><tr><th><a href="https://twikoo.js.org/quick-start.html#vercel-部署" target="_blank" rel="noopener">Vercel 部署</a></th><th>[ 建议 ] 适用于想要免费部署的用户，在中国大陆访问速度较慢。</th></tr></thead></table><p>6.在评论框下面有个设置按钮，点击，自己设置后台密码，进去自行配置，里面有个输入“暗号”来隐藏这个按钮，上传图片功能需要你去配置一下图床的token</p><h3 id="第七步：文章置顶"><a href="#第七步：文章置顶" class="headerlink" title="第七步：文章置顶"></a>第七步：文章置顶</h3><p>1.打开博客目录，打开博客目录下的“node_modules\hexo-generator-index\lib”目录，其中的“generator.js”文件就是我们所要修改的文件。</p><p>实现该功能需要在const posts = locals.posts.sort(config.index_generator.order_by);<br>代码下添加一下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">    if(a.top &amp;&amp; b.top) &#123; // 两篇文章都有top，top大的在前</span><br><span class="line">        if(a.top == b.top)</span><br><span class="line">      return b.date - a.date; // 若top值一样，最新的文章在前面</span><br><span class="line">        else</span><br><span class="line">      return b.top - a.top; // top大的在前面</span><br><span class="line">    &#125;</span><br><span class="line">    else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面</span><br><span class="line">        return -1;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else return b.date - a.date;  //都没有top标签，最新的文章在前面</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>去掉这一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort(posts.data, (a, b) =&gt; (b.sticky || 0) - (a.sticky || 0));</span><br></pre></td></tr></table></figure><p>修改后的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line"></span><br><span class="line">const pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">const &#123; sort &#125; = require(&apos;timsort&apos;);</span><br><span class="line"></span><br><span class="line">module.exports = function(locals) &#123;</span><br><span class="line">  const config = this.config;</span><br><span class="line">  const posts = locals.posts.sort(config.index_generator.order_by);</span><br><span class="line"></span><br><span class="line">  posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">    if(a.top &amp;&amp; b.top) &#123; // 两篇文章都有top，top大的在前</span><br><span class="line">        if(a.top == b.top)</span><br><span class="line">      return b.date - a.date; // 若top值一样，最新的文章在前面</span><br><span class="line">        else</span><br><span class="line">      return b.top - a.top; // top大的在前面</span><br><span class="line">    &#125;</span><br><span class="line">    else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面</span><br><span class="line">        return -1;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else return b.date - a.date;  //都没有top标签，最新的文章在前面</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  const paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  const path = config.index_generator.path || &apos;&apos;;</span><br><span class="line"></span><br><span class="line">  return pagination(path, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>使用时只需要在文章md文件头部加入top属性（top: 1）即可，top越大文章越靠前。</p><p>2.添加置顶标志</p><p>在你需要的位置添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (post.top)&#123; %&gt;</span><br><span class="line">置顶</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>样式自己去添加</p><h3 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo相关推荐文章</title>
    <link href="https://blog.axiao.vip/hexo-extend-related.html"/>
    <id>https://blog.axiao.vip/hexo-extend-related.html</id>
    <published>2022-05-02T16:16:17.018Z</published>
    <updated>2022-05-02T16:33:14.581Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><h2 id="方法一：手动添加代码"><a href="#方法一：手动添加代码" class="headerlink" title="方法一：手动添加代码"></a>方法一：手动添加代码</h2><p>1.主题文件夹scripts中新建文件<code>related_post.js</code>，填入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.helper.register(&apos;related_posts&apos;, function(currentPost, allPosts)&#123;</span><br><span class="line">    var relatedPosts = [];</span><br><span class="line">    currentPost.tags.forEach(function (tag) &#123;</span><br><span class="line">        allPosts.forEach(function (post) &#123;</span><br><span class="line">            if (isTagRelated(tag.name, post.tags)) &#123;</span><br><span class="line">                var relatedPost = &#123;</span><br><span class="line">                    title: post.title,</span><br><span class="line">                    path: post.path,</span><br><span class="line">                    weight: 1</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                var index = findItem(relatedPosts, &apos;path&apos;, post.path);</span><br><span class="line"></span><br><span class="line">                if (index != -1) &#123;</span><br><span class="line">                    relatedPosts[index].weight += 1;</span><br><span class="line">                &#125; else&#123;</span><br><span class="line">                    if (currentPost.path != post.path) &#123;</span><br><span class="line">                        relatedPosts.push(relatedPost);</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    if (relatedPosts.length == 0) &#123;return &apos;&apos;&#125;;</span><br><span class="line"></span><br><span class="line">    var result = &apos;&lt;h3&gt;相关文章：&lt;/h3&gt;&lt;ul class=&quot;related-posts&quot;&gt;&apos;;</span><br><span class="line">    relatedPosts = relatedPosts.sort(compare(&apos;weight&apos;));</span><br><span class="line">    for (var i = 0; i &lt; Math.min(relatedPosts.length, 10); i++) &#123;</span><br><span class="line">        result += &apos;&lt;li&gt;&lt;a href=&quot;/&apos; + relatedPosts[i].path + &apos;&quot;&gt;&apos; + relatedPosts[i].title + &apos;&lt;/a&gt;&lt;/li&gt;&apos;;</span><br><span class="line">    &#125;;</span><br><span class="line">    result += &apos;&lt;/ul&gt;&apos;;</span><br><span class="line"></span><br><span class="line">    // console.log(relatedPosts);</span><br><span class="line">    return result;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function isTagRelated (tagName, TBDtags) &#123;</span><br><span class="line">    var result = false;</span><br><span class="line">    TBDtags.forEach(function (tag) &#123;</span><br><span class="line">        if (tagName == tag.name) &#123;</span><br><span class="line">            result = true;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function findItem (arrayToSearch, attr, val) &#123;</span><br><span class="line">    for (var i = 0; i &lt; arrayToSearch.length; i++) &#123;</span><br><span class="line">        if (arrayToSearch[i][attr] == val) &#123;</span><br><span class="line">            return i</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function compare (attr) &#123;</span><br><span class="line">    return function (a, b) &#123;</span><br><span class="line">        var val1 = a[attr];</span><br><span class="line">        var val2 = b[attr];</span><br><span class="line">        return val2 - val1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.主题文件夹layout中的post.ejs文件，自己找个地方添加，如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.related.enable)&#123; %&gt;</span><br><span class="line">//注意：下面传入的page，有的主题是传入post</span><br><span class="line">&lt;%- related_posts(page, site.posts) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>3.主题配置文件_config.yml，添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 相关文章</span><br><span class="line">related:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="方法二：使用插件"><a href="#方法二：使用插件" class="headerlink" title="方法二：使用插件"></a>方法二：使用插件</h2><p>1.安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure><p>2.主题文件夹layout中的post.ejs文件，自己找个地方添加，如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-</span><br><span class="line">    popular_posts_json(&#123; maxCount: 5 , ulClass: &apos;popular-posts&apos; , PPMixingRate: 0.0 , isImage: true&#125; , post )</span><br><span class="line">  %&gt;</span><br></pre></td></tr></table></figure><p>3.如果需要详细配置看这里：<a href="https://github.com/tea3/hexo-related-popular-posts/wiki/More-Settings" target="_blank" rel="noopener">More Settings · tea3/hexo-related-popular-posts Wiki (github.com)</a></p><p>4.注意事项：报错的话，先<code>hexo clean</code>，再去<code>hexo s</code>查看。</p><h3 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo站点的蜘蛛抓取seo统计与分析</title>
    <link href="https://blog.axiao.vip/hexo-extend-seo.html"/>
    <id>https://blog.axiao.vip/hexo-extend-seo.html</id>
    <published>2022-05-02T04:48:15.104Z</published>
    <updated>2022-05-02T06:12:53.949Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><h2 id="第一步：抓取"><a href="#第一步：抓取" class="headerlink" title="第一步：抓取"></a>第一步：抓取</h2><p>1.查站点是否被收录，打开百度搜索：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:你的域名</span><br></pre></td></tr></table></figure><p>2.百度自动推送，将以下代码放入</p><head></head>中<p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(function() &#123;</span><br><span class="line">    var bp = document.createElement(&apos;script&apos;);</span><br><span class="line">    var curProtocol = window.location.protocol.split(&apos;:&apos;)[0];</span><br><span class="line">    if (curProtocol === &apos;https&apos;) &#123;</span><br><span class="line">        bp.src = &apos;https://zz.bdstatic.com/linksubmit/push.js&apos;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        bp.src = &apos;http://push.zhanzhang.baidu.com/push.js&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    var s = document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.主动推送</p><p>打开<a href="https://ziyuan.baidu.com/" target="_blank" rel="noopener">百度搜索资源平台_共创共享鲜活搜索 (baidu.com)</a></p><p>登录后，点击用户中心-站点管理-添加网站-验证网站（三种方式，选择一种方式进行验证）</p><p>点击左边栏-资源提交中的普通收录</p><ul><li><p>通过百度的API推送</p><p>安装hexo-baidu-url-submit插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>配置根目录_config.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: https://域名 ## 在百度站长平台中注册的域名</span><br><span class="line">permalink: :title.html</span><br><span class="line"></span><br><span class="line">baidu_url_submit:</span><br><span class="line">  count: 3 ## 比如3，代表提交最新的三个链接</span><br><span class="line">  host: 你的域名 ## 在百度站长平台中注册的域名</span><br><span class="line">  token: your_token ## 请注意这是您的秘钥， API提交下面一串代码中的token!</span><br><span class="line">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo: 仓库地址</span><br><span class="line">    branch: master</span><br><span class="line">  - type: baidu_url_submitter</span><br></pre></td></tr></table></figure></li><li><p>提交sitemap</p><p>安装插件，分别用下面两个命令来安装百度抓取和其他抓取平台的插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>在根目录的_config.yml中添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Plugins:</span><br><span class="line">  - hexo-generator-baidu-sitemap</span><br><span class="line">  - hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br></pre></td></tr></table></figure><p>然后推送生成sitemap，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>生成地址：https://域名/baidusitemap.xml</p><p>把这个地址填入百度平台sitemap下面的框中，点击提交，OK完成</p></li><li><p>手动提交</p><p>手动输入你需要百度抓取的页面地址即可</p></li></ul><h3 id="第二步：谷歌sitemap"><a href="#第二步：谷歌sitemap" class="headerlink" title="第二步：谷歌sitemap"></a>第二步：谷歌sitemap</h3><p>谷歌操作比较简单，就是向<a href="https://www.google.com/webmasters/tools" target="_blank" rel="noopener">Google站长工具</a>提交sitemap<br>登录Google账号，添加了站点验证通过后，选择站点，之后在<strong>抓取</strong>——<strong>站点地图</strong>——<strong>添加/测试站点地图</strong></p><h3 id="第三步：百度统计"><a href="#第三步：百度统计" class="headerlink" title="第三步：百度统计"></a>第三步：百度统计</h3><p>1.百度统计</p><p>打开<a href="https://tongji.baidu.com" target="_blank" rel="noopener">百度统计</a>，登录-使用设置，新增网站，输入域名-网站首页（https://域名）等信息</p><p>2.复制代码，放到</p><head></head>中<p></p><h3 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo主题hexo-theme-snippet</title>
    <link href="https://blog.axiao.vip/hexo-extend-themes.html"/>
    <id>https://blog.axiao.vip/hexo-extend-themes.html</id>
    <published>2022-04-30T05:23:56.174Z</published>
    <updated>2022-04-30T05:41:43.237Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>安装hexo</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>下载主题：<a href="https://github.com/shenliyang/hexo-theme-snippet" target="_blank" rel="noopener">shenliyang/hexo-theme-snippet: Snippet 简洁而不简单，也许是一款你寻找已久的hexo主题 (github.com)</a></p><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>安装主题插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-ejs hexo-renderer-less hexo-deployer-git -S</span><br></pre></td></tr></table></figure><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>启用站内本地搜索功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-json-content@2.2.0 -S</span><br></pre></td></tr></table></figure><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><p>配置gulp压缩代码</p><p>1、安装gulp<br><code>npm install --global gulp-cli</code></p><p>2、安装gulp模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp --save</span><br><span class="line">npm install gulp-htmlclean gulp-htmlmin gulp-clean-css gulp-uglify gulp-imagemin --save</span><br><span class="line">npm install gulp-babel babel-preset-env babel-preset-mobx --save</span><br><span class="line">npm install -D @babel/core @babel/preset-react @babel/preset-env --save</span><br></pre></td></tr></table></figure><p>3、在hexo目录创建gulpfile.js，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">let gulp = require(&apos;gulp&apos;)</span><br><span class="line">let cleanCSS = require(&apos;gulp-clean-css&apos;)</span><br><span class="line">let htmlmin = require(&apos;gulp-htmlmin&apos;)</span><br><span class="line">let htmlclean = require(&apos;gulp-htmlclean&apos;)</span><br><span class="line">let babel = require(&apos;gulp-babel&apos;) /* 转换为es2015 */</span><br><span class="line">let uglify = require(&apos;gulp-uglify&apos;)</span><br><span class="line">let imagemin = import(&apos;gulp-imagemin&apos;)</span><br><span class="line"></span><br><span class="line">// 设置根目录</span><br><span class="line">const root = &apos;./public&apos;</span><br><span class="line"></span><br><span class="line">// 匹配模式， **/*代表匹配所有目录下的所有文件</span><br><span class="line">const pattern = &apos;**/*&apos;</span><br><span class="line"></span><br><span class="line">// 压缩html</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function() &#123;</span><br><span class="line">  return gulp</span><br><span class="line">    // 匹配所有 .html结尾的文件</span><br><span class="line">    .src(`$&#123;root&#125;/$&#123;pattern&#125;.html`)</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(</span><br><span class="line">      htmlmin(&#123;</span><br><span class="line">        removeComments: true,</span><br><span class="line">        minifyJS: true,</span><br><span class="line">        minifyCSS: true,</span><br><span class="line">        minifyURLs: true</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 压缩css</span><br><span class="line">gulp.task(&apos;minify-css&apos;, function() &#123;</span><br><span class="line">  return gulp</span><br><span class="line">    // 匹配所有 .css结尾的文件</span><br><span class="line">    .src(`$&#123;root&#125;/$&#123;pattern&#125;.css`)</span><br><span class="line">    .pipe(</span><br><span class="line">      cleanCSS(&#123;</span><br><span class="line">        compatibility: &apos;ie8&apos;</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function() &#123;</span><br><span class="line">  return gulp</span><br><span class="line">    // 匹配所有 .js结尾的文件</span><br><span class="line">    .src(`$&#123;root&#125;/$&#123;pattern&#125;.js`)</span><br><span class="line">    .pipe(</span><br><span class="line">      babel(&#123;</span><br><span class="line">        presets: [&apos;env&apos;]</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .pipe(uglify())</span><br><span class="line">    .pipe(gulp.dest(&apos;./public&apos;))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 压缩图片</span><br><span class="line">gulp.task(&apos;minify-images&apos;, function() &#123;</span><br><span class="line">  return gulp</span><br><span class="line">    // 匹配public/images目录下的所有文件</span><br><span class="line">    .src(`$&#123;root&#125;/images/$&#123;pattern&#125;`)</span><br><span class="line">    .pipe(</span><br><span class="line">      imagemin(</span><br><span class="line">        [</span><br><span class="line">          imagemin.gifsicle(&#123; optimizationLevel: 3 &#125;),</span><br><span class="line">          imagemin.jpegtran(&#123; progressive: true &#125;),</span><br><span class="line">          imagemin.optipng(&#123; optimizationLevel: 7 &#125;),</span><br><span class="line">          imagemin.svgo()</span><br><span class="line">        ],</span><br><span class="line">        &#123; verbose: true &#125;</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">    .pipe(gulp.dest(&apos;./public/images&apos;))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(&apos;default&apos;, gulp.series(&apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;))</span><br></pre></td></tr></table></figure><p>4、执行顺序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">gulp</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h2><p>github actions自动部署</p><p>1、命令精简，修改根目录package.json中的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;build&quot;: &quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp&quot;,</span><br><span class="line">    &quot;clean&quot;: &quot;hexo clean&quot;,</span><br><span class="line">    &quot;deploy&quot;: &quot;hexo deploy&quot;,</span><br><span class="line">    &quot;server&quot;: &quot;hexo server&quot;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>2、在本地 【hexo源码】 根目录下创建 <code>.github/workflows/deploy.yml</code> 文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"># Action 的名字</span><br><span class="line">name: Hexo Auto Deploy</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  # 触发条件1：main 分支收到 push 后执行任务。</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line">  # 触发条件2：手动按钮</span><br><span class="line">  workflow_dispatch:</span><br><span class="line"></span><br><span class="line"># 这里放环境变量,需要替换成你自己的</span><br><span class="line">env:</span><br><span class="line">  # Hexo 编译后使用此 git 用户部署到 github 仓库</span><br><span class="line">  GIT_USER: axiao1554</span><br><span class="line">  # Hexo 编译后使用此 git 邮箱部署到 github 仓库</span><br><span class="line">  GIT_EMAIL: 397480224@qq.com</span><br><span class="line">  # Hexo 编译后要部署的 github 仓库</span><br><span class="line">  GIT_DEPLOY_REPO: axiao1554/win</span><br><span class="line">  # Hexo 编译后要部署到的分支</span><br><span class="line">  GIT_DEPLOY_BRANCH: master</span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    name: Build on node $&#123;&#123; matrix.node_version &#125;&#125; and $&#123;&#123; matrix.os &#125;&#125;</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    if: github.event.repository.owner.id == github.event.sender.id</span><br><span class="line">    strategy:</span><br><span class="line">      matrix:</span><br><span class="line">        os: [ubuntu-18.04]</span><br><span class="line">        node_version: [12.x]</span><br><span class="line"></span><br><span class="line">    steps:</span><br><span class="line">      - name: Checkout</span><br><span class="line">        uses: actions/checkout@v2</span><br><span class="line"></span><br><span class="line">      - name: Checkout deploy repo</span><br><span class="line">        uses: actions/checkout@v2</span><br><span class="line">        with:</span><br><span class="line">          repository: $&#123;&#123; env.GIT_DEPLOY_REPO &#125;&#125;</span><br><span class="line">          ref: $&#123;&#123; env.GIT_DEPLOY_BRANCH &#125;&#125;</span><br><span class="line">          path: .deploy_git</span><br><span class="line"></span><br><span class="line">      - name: Use Node.js $&#123;&#123; matrix.node_version &#125;&#125;</span><br><span class="line">        uses: actions/setup-node@v1</span><br><span class="line">        with:</span><br><span class="line">          node-version: $&#123;&#123; matrix.node_version &#125;&#125;</span><br><span class="line"></span><br><span class="line">      - name: Configuration environment</span><br><span class="line">        env:</span><br><span class="line">          HEXO_DEPLOY_PRI: $&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span><br><span class="line">        run: |</span><br><span class="line">          sudo timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br><span class="line">          mkdir -p ~/.ssh/</span><br><span class="line">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span><br><span class="line">          chmod 600 ~/.ssh/id_rsa</span><br><span class="line">          ssh-keyscan -t rsa github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">          git config --global user.name $GIT_USER</span><br><span class="line">          git config --global user.email $GIT_EMAIL</span><br><span class="line"></span><br><span class="line">      - name: Install dependencies</span><br><span class="line">        run: |</span><br><span class="line">          npm install hexo-cli -g</span><br><span class="line">          npm install</span><br><span class="line">          npm run build</span><br><span class="line"></span><br><span class="line">      - name: Deploy hexo</span><br><span class="line">        run: |</span><br><span class="line">          npm run deploy</span><br></pre></td></tr></table></figure><p>3、自动部署具体步骤请参阅：<a href="/hexo-extend-actions" target="_blank">这里</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo不使用hexo插件引用aplayer带歌单</title>
    <link href="https://blog.axiao.vip/hexo-extend-aplyer.html"/>
    <id>https://blog.axiao.vip/hexo-extend-aplyer.html</id>
    <published>2022-04-24T08:42:03.165Z</published>
    <updated>2022-05-10T03:45:53.320Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><p><code>layout.ejs&lt;/body&gt;</code>上方引入以下三个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.jsdelivr.net/gh/axiao1554/cloud/assets/APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.jsdelivr.net/gh/axiao1554/cloud/assets/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//cdn.jsdelivr.net/gh/axiao1554/cloud/assets/Meting.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><code>APlayer.min.css</code>文件中改了俩出地方：</p><p>1.最前面加入【隐藏】：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body&#123;left:-66px !important;&#125;.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover&#123;left:0px !important;&#125;</span><br></pre></td></tr></table></figure><p>2.最后面加入【歌词样式】：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.aplayer-lrc .aplayer-lrc-contents p&#123;font-weight:bold;font-size:15px;font-style:italic;background-image:linear-gradient(#FF4081,#7b05e6,#FF4081);color:transparent;-webkit-background-clip:text;text-shadow:none;&#125;</span><br></pre></td></tr></table></figure><p><code>footer.ejs</code>中插入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;meting-js</span><br><span class="line">    server=&quot;tencent&quot;</span><br><span class="line">    type=&quot;playlist&quot;</span><br><span class="line">    id=&quot;7044625667&quot;</span><br><span class="line">    mode=&quot;circulation&quot;</span><br><span class="line">    mutex=&quot;true&quot;</span><br><span class="line">    theme=&quot;#FF4081&quot;</span><br><span class="line">    fixed=&quot;true&quot;</span><br><span class="line">    order=&quot;random&quot;</span><br><span class="line">    preload=&quot;auto&quot;</span><br><span class="line">    list-folded=&quot;false&quot;</span><br><span class="line">    listmaxheight=&quot;340px&quot;&gt;</span><br><span class="line">  &lt;/meting-js&gt;</span><br></pre></td></tr></table></figure><h3 id="修改样式（参考）："><a href="#修改样式（参考）：" class="headerlink" title="修改样式（参考）："></a>修改样式（参考）：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(theme.two_menu.playlist.enable)&#123; %&gt;</span><br><span class="line">                &lt;div class=&quot;playlist&quot; style=&quot;display:none;&quot;&gt;</span><br><span class="line">                    &lt;meting-js</span><br><span class="line">                        server=&quot;netease&quot;</span><br><span class="line">                        type=&quot;playlist&quot;</span><br><span class="line">                        id=&quot;308313843&quot;</span><br><span class="line">                        mode=&quot;circulation&quot;</span><br><span class="line">                        mutex=&quot;true&quot;</span><br><span class="line">                        theme=&quot;#e67e22&quot;</span><br><span class="line">                        fixed=&quot;false&quot;</span><br><span class="line">                        order=&quot;random&quot;</span><br><span class="line">                        preload=&quot;auto&quot;</span><br><span class="line">                        list-folded=&quot;false&quot;</span><br><span class="line">                        listmaxheight=&quot;340px&quot;&gt;</span><br><span class="line">                    &lt;/meting-js&gt;</span><br><span class="line">                    &lt;style&gt;</span><br><span class="line">                        /*====================================================</span><br><span class="line">                          各种按钮显示</span><br><span class="line">                        ====================================================*/</span><br><span class="line">                        .aplayer.aplayer-arrow .aplayer-icon-loop, .aplayer .aplayer-icon-back, .aplayer .aplayer-icon-forward, .aplayer .aplayer-icon-order, .aplayer .aplayer-icon-play &#123;</span><br><span class="line">                            display: inline-block !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        /*====================================================</span><br><span class="line">                          歌曲名向左对齐</span><br><span class="line">                        ====================================================*/</span><br><span class="line">                        .aplayer-list-index &#123;</span><br><span class="line">                            position: absolute;</span><br><span class="line">                            left: 12px;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer-list-title &#123;</span><br><span class="line">                            position: absolute;</span><br><span class="line">                            left: 36px;</span><br><span class="line">                        &#125;</span><br><span class="line">                        /*====================================================</span><br><span class="line">                          收缩按钮</span><br><span class="line">                        ====================================================*/</span><br><span class="line">                        .aplayer .aplayer-icon.aplayer-icon-menu &#123;</span><br><span class="line">                            width: 20px;</span><br><span class="line">                            height: 20px;</span><br><span class="line">                            margin-right: -7px;</span><br><span class="line">                            margin-left: 10px;</span><br><span class="line">                            margin-top: -1px;</span><br><span class="line">                            border: 1px solid #e9e9e9 !important;</span><br><span class="line">                            border-radius: 0 0 3px 0 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-icon.aplayer-icon-menu svg path &#123;</span><br><span class="line">                            fill: #e67e22 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-icon.aplayer-icon-menu:hover &#123;</span><br><span class="line">                            background-color: #e67e22 !important;</span><br><span class="line">                            border: 1px solid #e67e22 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-icon.aplayer-icon-menu:hover path &#123;</span><br><span class="line">                            fill: #fff !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        /*====================================================</span><br><span class="line">                          mini</span><br><span class="line">                        ====================================================*/</span><br><span class="line">                        .mini &#123;</span><br><span class="line">                            position: absolute;</span><br><span class="line">                            top: -5px;</span><br><span class="line">                            right: 15px;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer.aplayer-narrow &#123;</span><br><span class="line">                            width: 58px !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer.aplayer-narrow .aplayer-body, .aplayer.aplayer-narrow .aplayer-pic &#123;</span><br><span class="line">                            width: 58px !important;</span><br><span class="line">                            height: 58px !important;</span><br><span class="line">                            border-radius: 50%;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-pic .aplayer-play svg,.aplayer .aplayer-pic .aplayer-pause svg&#123;</span><br><span class="line">                            pointer-events:none;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        .rotate &#123;</span><br><span class="line">                            -webkit-transform: rotate(360deg);</span><br><span class="line">                            animation: rotation 5s linear infinite;</span><br><span class="line">                            -moz-animation: rotation 5s linear infinite;</span><br><span class="line">                            -webkit-animation: rotation 5s linear infinite;</span><br><span class="line">                            -o-animation: rotation 5s linear infinite;</span><br><span class="line">                        &#125;</span><br><span class="line">                        @-webkit-keyframes rotation &#123;</span><br><span class="line">                            from &#123;</span><br><span class="line">                            -webkit-transform: rotate(0deg);</span><br><span class="line">                            &#125;</span><br><span class="line">                            to &#123;</span><br><span class="line">                            -webkit-transform: rotate(360deg);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        </span><br><span class="line">                        /*====================================================</span><br><span class="line">                          mini按钮</span><br><span class="line">                        ====================================================*/</span><br><span class="line">                        .aplayer .aplayer-miniswitcher &#123;</span><br><span class="line">                            display: inline-block !important;</span><br><span class="line">                            width: 20px !important;</span><br><span class="line">                            height: 20px !important;</span><br><span class="line">                            background-color: #fff !important;</span><br><span class="line">                            border: 1px solid #e9e9e9 !important;</span><br><span class="line">                            border-radius: 0 3px 0 0 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-miniswitcher .aplayer-icon path &#123;</span><br><span class="line">                            fill: #e67e22 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-miniswitcher:hover &#123;</span><br><span class="line">                            background-color: #e67e22 !important;</span><br><span class="line">                            border: 1px solid #e67e22 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-miniswitcher:hover path &#123;</span><br><span class="line">                            fill: #fff !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        /*====================================================</span><br><span class="line">                          展示框高度调节以及歌词样式</span><br><span class="line">                        ====================================================*/</span><br><span class="line">                        .aplayer &#123;</span><br><span class="line">                            margin: 5px 0 0 0 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer.aplayer-withlrc .aplayer-pic &#123;</span><br><span class="line">                            width: 58px !important;</span><br><span class="line">                            height: 58px !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer.aplayer-withlrc .aplayer-info &#123;</span><br><span class="line">                            margin-left: 58px !important;</span><br><span class="line">                            height: 58px !important;</span><br><span class="line">                            padding: 2px 7px 0 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer-controller &#123;</span><br><span class="line">                            top: -24px;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-info .aplayer-music .aplayer-title &#123;</span><br><span class="line">                            font-size : 12px !important;</span><br><span class="line">                            position: absolute;</span><br><span class="line">                            left: 70px;</span><br><span class="line">                            color:#ccc !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-info .aplayer-music .aplayer-title::before &#123;</span><br><span class="line">                            content: &apos;歌曲名：&apos;;</span><br><span class="line">                            color:#ccc !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-info .aplayer-music .aplayer-author &#123;</span><br><span class="line">                            position: absolute;</span><br><span class="line">                            left: 70px;</span><br><span class="line">                            top: 16px;</span><br><span class="line">                            color:#ccc !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-info .aplayer-music .aplayer-author::before &#123;</span><br><span class="line">                            content: &apos;演唱&apos;;</span><br><span class="line">                            color:#ccc !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-lrc &#123;</span><br><span class="line">                            top: -19px !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-lrc::after, .aplayer .aplayer-lrc::before &#123;</span><br><span class="line">                            z-index: 0 !important;</span><br><span class="line">                            display: none !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                        .aplayer .aplayer-lrc p &#123;</span><br><span class="line">                            color:#e67e22 !important;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &lt;/style&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>js：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">//歌单点击加载</span><br><span class="line">      var $href2 = $(this).find(&apos;.main-a&apos;).attr(&apos;href&apos;);</span><br><span class="line">      if($href2 == &apos;./#playlist/&apos;)&#123;</span><br><span class="line">        $(&apos;.playlist&apos;).slideToggle(500);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">// 歌单收缩按钮点击显示mini样式</span><br><span class="line">  function miniclick()&#123;</span><br><span class="line">    $(&apos;.playlist&apos;).on(&apos;click&apos;,&apos;.aplayer .aplayer-miniswitcher&apos;,function()&#123;</span><br><span class="line">      if($(&apos;.playlist&apos;).hasClass(&apos;mini&apos;)) &#123;</span><br><span class="line">        $(&apos;.playlist&apos;).removeClass(&apos;mini&apos;);</span><br><span class="line">        $(this).css(&apos;cssText&apos;,&apos;width:20px !important;height:20px !important&apos;);</span><br><span class="line">        $(&apos;.aplayer .aplayer-miniswitcher .aplayer-icon&apos;).css(&apos;transform&apos;,&apos;rotateY(180deg)&apos;);</span><br><span class="line">        //去掉旋转</span><br><span class="line">        $(&apos;.aplayer.aplayer-withlrc .aplayer-pic&apos;).removeClass(&apos;rotate&apos;);</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        $(&apos;.playlist&apos;).addClass(&apos;mini&apos;);</span><br><span class="line">        $(this).css(&apos;cssText&apos;,&apos;width:15px !important;height:100% !important;&apos;);</span><br><span class="line">        $(&apos;.aplayer .aplayer-miniswitcher .aplayer-icon&apos;).css(&apos;transform&apos;,&apos;rotateY(360deg)&apos;);</span><br><span class="line">        //关停判断旋转</span><br><span class="line">        if(document.querySelector(&apos;.aplayer .aplayer-pic .aplayer-pause&apos;) !== null) &#123;</span><br><span class="line">          $(&apos;.aplayer.aplayer-narrow .aplayer-pic&apos;).addClass(&apos;rotate&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  //关停判断旋转</span><br><span class="line">  function minirotate()&#123;</span><br><span class="line">    function picrotate()&#123;</span><br><span class="line">      if($(&apos;.aplayer.aplayer-narrow .aplayer-pic&apos;).hasClass(&apos;rotate&apos;))&#123;</span><br><span class="line">        $(&apos;.aplayer.aplayer-narrow .aplayer-pic&apos;).addClass(&apos;rotate&apos;);</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        $(&apos;.aplayer.aplayer-narrow .aplayer-pic&apos;).removeClass(&apos;rotate&apos;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $(&apos;.playlist&apos;).on(&apos;click&apos;,&apos;.aplayer.aplayer-narrow .aplayer-pic&apos;,function()&#123;</span><br><span class="line">      if($(this).hasClass(&apos;rotate&apos;))&#123;</span><br><span class="line">        $(this).removeClass(&apos;rotate&apos;);</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        $(this).addClass(&apos;rotate&apos;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    $(&apos;.playlist&apos;).on(&apos;click&apos;,&apos;.aplayer .aplayer-pic .aplayer-play&apos;,function()&#123;</span><br><span class="line">      picrotate();</span><br><span class="line">    &#125;)</span><br><span class="line">    $(&apos;.playlist&apos;).on(&apos;click&apos;,&apos;.aplayer .aplayer-pic .aplayer-pause&apos;,function()&#123;</span><br><span class="line">      picrotate();</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  if(document.querySelector(&apos;.playlist&apos;) !== null) &#123;</span><br><span class="line">    miniclick();</span><br><span class="line">    minirotate();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo网页访问速度优化之pjax</title>
    <link href="https://blog.axiao.vip/hexo-extend-pjax.html"/>
    <id>https://blog.axiao.vip/hexo-extend-pjax.html</id>
    <published>2022-04-23T14:46:49.585Z</published>
    <updated>2022-05-22T06:25:02.416Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><blockquote><p>简介：pjax 结合 pushState 和 ajax 技术， 不需要重新加载整个页面就能从服务器加载 Html 到你当前页面，这个 ajax 请求会有永久链接、title 并支持浏览器的回退/前进按钮。</p></blockquote><p>使用：需要引入jquery和pjax</p><p>jquery：<a href="https://lib.baomitu.com/jquery/2.0.3/jquery.min.js" target="_blank" rel="noopener">https://lib.baomitu.com/jquery/2.0.3/jquery.min.js</a></p><p>pjax：<a href="https://cdn.jsdelivr.net/gh/axiao1554/cloud/assets/jquery.pjax.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/axiao1554/cloud/assets/jquery.pjax.js</a></p><p>方法1：</p><p>添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">$(document).pjax(&apos;a[target!=_blank]&apos;, &apos;#pjaxouter&apos;, &#123;fragment: &apos;#pjaxouter&apos;,timeout: 8000&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><code>‘#pjaxouter’是你将会刷新的地方,自己定义一个【id=&#39;pjaxouter&#39;】 fragment: ‘#pjaxouter’,是把那个地方的代码刷新然后放到’#pjaxouter’中</code></p><p>方法2：</p><p>1、首先给我们不需要 Pjax 加载的链接添加一个额外的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;/wp-login.php?action=logout&quot; pjax=&quot;exclude&quot;&gt;退出&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>2、在初始化我们插件的时候排除掉有这个属性的 A 标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(document).pjax(&apos;a[pjax!=&quot;exclude&quot;]&apos;, &apos;#pjax-container&apos;, &#123;</span><br><span class="line">  fragment: &apos;#pjax-container&apos;,</span><br><span class="line">  timeout: 10000</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.pjax会影响图片的懒加载 lazyload功能，去配置根目录下面_config.yml代码【注意开启isSPA】：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  enable: true</span><br><span class="line">  onlypost: false  # 是否只对文章的图片做懒加载</span><br><span class="line">  loadingImg: //cdn.jsdelivr.net/gh/axiao1554/cloud/assets/loading4.gif # eg ./images/loading.gif</span><br><span class="line">  isSPA: true # optional</span><br><span class="line">  preloadRatio: 3 # optional, default is 1</span><br></pre></td></tr></table></figure><ul><li><p>onlypost</p><p>true：只有路由页面或者文章的图片才会被懒加载。</p><p>false：除了站点背景图（如果有的话），整个站点的图片均会被懒加载。</p></li><li><p>loadingImg：指定的话，加载自定义路径的图片用作文章图片加载时显示，不指定的话显示默认图片。</p></li><li><p>isSPA</p><p>true：针对单页面应用，当滚动条滚动到图片位置时就会向后端请求图片</p><p>false：刷新才能请求图片</p></li><li><p>preloadRatio：在多少倍的可见区域时触发图片请求，默认为1，即当前屏幕的区域。</p></li></ul><p>2.页脚不算子统计，因为是ajax加载内容不刷新页面，统计会停止，添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">$(document).on(&apos;pjax:complete&apos;,function()&#123;</span><br><span class="line">  $.getScript(&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>3.通过NProgress为pjax添加加载过渡效果：</p><p>需要引入以下：</p><p>nprogress.js：<a href="https://cdn.jsdelivr.net/gh/axiao1554/cloud/assets/nprogress.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/axiao1554/cloud/assets/nprogress.js</a></p><p>nprogress.css：<a href="https://cdn.jsdelivr.net/gh/axiao1554/cloud/assets/nprogress.css" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/axiao1554/cloud/assets/nprogress.css</a></p><p>添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">$(document).on(&apos;pjax:start&apos;, NProgress.start).on(&apos;pjax:end&apos;, NProgress.done);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>4.加密文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(document).on(&apos;pjax:complete&apos;,function()&#123;</span><br><span class="line">    $.getScript(&quot;/lib/hbe.js&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>5.背景图片刷新和fancybox</p><p>这俩的js放在一起到pjaxload.js，直接引入即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(document).on(&apos;pjax:complete&apos;,function()&#123;</span><br><span class="line">    $.getScript(&quot;/js/pjaxload.js&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意fancybox的代码需要改一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 修改第6行this.src改成this.dataset.original，不然点击图片一直显示加载图</span><br><span class="line">$(&apos;.article-entry&apos;).each(function(i)&#123;</span><br><span class="line">$(this).find(&apos;img&apos;).each(function()&#123;</span><br><span class="line">if ($(this).parent().hasClass(&apos;fancybox&apos;)) return;</span><br><span class="line">var alt = this.alt;</span><br><span class="line">if (alt) $(this).after(&apos;&lt;span class=&quot;caption&quot;&gt;&apos; + alt + &apos;&lt;/span&gt;&apos;);</span><br><span class="line">$(this).wrap(&apos;&lt;a href=&quot;&apos; + this.dataset.original + &apos;&quot; title=&quot;&apos; + alt + &apos;&quot; class=&quot;fancybox&quot;&gt;&lt;/a&gt;&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(this).find(&apos;.fancybox&apos;).each(function()&#123;</span><br><span class="line">$(this).attr(&apos;rel&apos;, &apos;article&apos; + i);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">if ($.fancybox)&#123;</span><br><span class="line">$(&apos;.fancybox&apos;).fancybox();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.评论系统bug|文章中引入aplayer的bug：暂时没用到，用的时候再去改</p><p>7.通过阅读更多输入验证码公众号导流<a href="https://openwrite.cn/" target="_blank" rel="noopener">主页 | OpenWrite</a></p><p>使用pjax的话需要在js中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(document).on(&apos;pjax:start&apos;, function(result)&#123;</span><br><span class="line">    const btw = new BTWPlugin();</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// readmore改变toc</span><br><span class="line">  function hasMore()&#123;</span><br><span class="line">    let hasMoreBtn = $(&quot;#read-more-btn&quot;).length;</span><br><span class="line">    if (hasMoreBtn) &#123;</span><br><span class="line">      $(&quot;#article-toc .article-toc&quot;).append(&apos;&lt;p class=&quot;readmoretoc&quot;&gt;点击阅读全文后查看&lt;/p&gt;&apos;);</span><br><span class="line">      $(&quot;#article-toc .article-toc ol&quot;).css(&apos;display&apos;,&apos;none&apos;);</span><br><span class="line">      $(&quot;#container&quot;).on(&apos;click&apos;,&apos;#btw-submit-btn&apos;,function()&#123;</span><br><span class="line">        setTimeout(function()&#123;</span><br><span class="line">          if(!$(&quot;#read-more-btn&quot;).length)&#123;</span><br><span class="line">            $(&quot;.readmoretoc&quot;).remove();</span><br><span class="line">            $(&quot;#article-toc .article-toc ol&quot;).css(&apos;display&apos;,&apos;block&apos;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,1000)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  if(isPC)&#123;</span><br><span class="line">    hasMore();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>用GitHub Actions自动部署Hexo到github pages+gitee pages</title>
    <link href="https://blog.axiao.vip/hexo-extend-actions.html"/>
    <id>https://blog.axiao.vip/hexo-extend-actions.html</id>
    <published>2022-04-19T16:20:38.362Z</published>
    <updated>2022-04-19T17:10:37.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:28 GMT+0800 (GMT+08:00) --><blockquote><p>需要俩个仓库，一个放public生成的静态网页，一个放hexo源码，以后就可以在线编辑啦</p></blockquote><h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><p>1.生成静态网页的仓库【aqrj】之前就建好了，这个仓库必须是公开的才可以使用pages，手动【hexo d】来提交比较麻烦，内容多了提交会很慢</p><p>2.在github创建【aqrjfiles】放hexo源码的仓库，这个仓库可以是私密的</p><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><p>1.创建ssh密钥，由于之前配置hexo时就已经生成好了，详情见<a href="/hexo-install.html" target="_blank">这里</a></p><p>2.找到【id_rsa】私钥，去配置hexo源码仓库【aqrjfiles】，如下</p><p>在 <code>myblog</code> 仓库 <code>Settings</code> -&gt; <code>Secrets</code> -&gt; Actions-&gt;<code>New repository secret</code> 页面上添加。</p><ul><li>在 <code>Name</code> 输入框填写 <code>HEXO_DEPLOY_PRI</code></li><li>在 <code>Value</code> 输入框填写 <code>id_rsa</code> 文件内容</li></ul><p>再次点击<code>New repository secret</code></p><ul><li>在 <code>Name</code> 输入框填写 <code>GITEE_PASSWORD</code></li><li>在 <code>Value</code> 输入框填写 <code>gitee的登录密码</code></li></ul><p>3.找到【id_rsa.pub】公钥，去配置静态网页仓库【aqrj】,由于之前手动提交时，已经使用过公钥配置了，所以这里不配置就行</p><h1 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h1><p>1.在本地 【hexo源码】 根目录下创建 <code>.github/workflows/deploy.yml</code> 文件</p><p>2.<code>deploy.yml</code> 的内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"># Action 的名字</span><br><span class="line">name: Hexo Auto Deploy</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  # 触发条件1：main 分支收到 push 后执行任务。</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line">  # 触发条件2：手动按钮</span><br><span class="line">  workflow_dispatch:</span><br><span class="line"></span><br><span class="line"># 这里放环境变量,需要替换成你自己的</span><br><span class="line">env:</span><br><span class="line">  # Hexo 编译后使用此 git 用户部署到 github 仓库</span><br><span class="line">  GIT_USER: axiao1554</span><br><span class="line">  # Hexo 编译后使用此 git 邮箱部署到 github 仓库</span><br><span class="line">  GIT_EMAIL: 397480224@qq.com</span><br><span class="line">  # Hexo 编译后要部署的 github 仓库</span><br><span class="line">  GIT_DEPLOY_REPO: axiao1554/aqrj</span><br><span class="line">  # Hexo 编译后要部署到的分支</span><br><span class="line">  GIT_DEPLOY_BRANCH: master</span><br><span class="line">  </span><br><span class="line">  # Hexo 编译后使用此 gitee 用户部署到gitee仓库</span><br><span class="line">  GITEE_USER: aqrj</span><br><span class="line">  # Hexo 编译后要部署的 gitee 仓库</span><br><span class="line">  GITEE_DEPLOY_REPO: aqrj/aqrj</span><br><span class="line">  # Hexo 编译后要部署到的分支</span><br><span class="line">  GITEE_DEPLOY_BRANCH: master</span><br><span class="line">  </span><br><span class="line">  # 注意替换为你的 GitHub 源仓库地址</span><br><span class="line">  GIT_SOURCE_REPO: git@github.com:axiao1554/aqrj.git</span><br><span class="line">  # 注意替换为你的 Gitee 目标仓库地址</span><br><span class="line">  GITEE_DESTINATION_REPO: git@gitee.com:aqrj/aqrj.git</span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    name: Build on node $&#123;&#123; matrix.node_version &#125;&#125; and $&#123;&#123; matrix.os &#125;&#125;</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    if: github.event.repository.owner.id == github.event.sender.id</span><br><span class="line">    strategy:</span><br><span class="line">      matrix:</span><br><span class="line">        os: [ubuntu-18.04]</span><br><span class="line">        node_version: [12.x]</span><br><span class="line"></span><br><span class="line">    steps:</span><br><span class="line">      - name: Checkout</span><br><span class="line">        uses: actions/checkout@v2</span><br><span class="line"></span><br><span class="line">      - name: Checkout deploy repo</span><br><span class="line">        uses: actions/checkout@v2</span><br><span class="line">        with:</span><br><span class="line">          repository: $&#123;&#123; env.GIT_DEPLOY_REPO &#125;&#125;</span><br><span class="line">          ref: $&#123;&#123; env.GIT_DEPLOY_BRANCH &#125;&#125;</span><br><span class="line">          path: .deploy_git</span><br><span class="line"></span><br><span class="line">      - name: Use Node.js $&#123;&#123; matrix.node_version &#125;&#125;</span><br><span class="line">        uses: actions/setup-node@v1</span><br><span class="line">        with:</span><br><span class="line">          node-version: $&#123;&#123; matrix.node_version &#125;&#125;</span><br><span class="line"></span><br><span class="line">      - name: Configuration environment</span><br><span class="line">        env:</span><br><span class="line">          HEXO_DEPLOY_PRI: $&#123;&#123;secrets.HEXO_DEPLOY_PRI&#125;&#125;</span><br><span class="line">        run: |</span><br><span class="line">          sudo timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br><span class="line">          mkdir -p ~/.ssh/</span><br><span class="line">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span><br><span class="line">          chmod 600 ~/.ssh/id_rsa</span><br><span class="line">          ssh-keyscan -t rsa github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">          ssh-keyscan -t rsa gitee.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="line">          git config --global user.name $GIT_USER</span><br><span class="line">          git config --global user.email $GIT_EMAIL</span><br><span class="line"></span><br><span class="line">      - name: Install dependencies</span><br><span class="line">        run: |</span><br><span class="line">          npm install hexo-cli -g</span><br><span class="line">          npm install</span><br><span class="line"></span><br><span class="line">      - name: Deploy hexo</span><br><span class="line">        run: |</span><br><span class="line">          npm run deploy</span><br><span class="line"></span><br><span class="line">      # 以下为发布到gitee</span><br><span class="line">      - name: Sync to Gitee</span><br><span class="line">        uses: wearerequired/git-mirror-action@master</span><br><span class="line">        env:</span><br><span class="line">          # 直接使用了 HEXO_DEPLOY_PRI</span><br><span class="line">          SSH_PRIVATE_KEY: $&#123;&#123; secrets.HEXO_DEPLOY_PRI &#125;&#125;</span><br><span class="line">        with:</span><br><span class="line">          # GitHub 源仓库地址</span><br><span class="line">          source-repo: $&#123;&#123; env.GIT_SOURCE_REPO &#125;&#125;</span><br><span class="line">          # Gitee 目标仓库地址</span><br><span class="line">          destination-repo: $&#123;&#123; env.GITEE_DESTINATION_REPO &#125;&#125;</span><br><span class="line"></span><br><span class="line">      - name: Build Gitee Pages</span><br><span class="line">        uses: yanglbme/gitee-pages-action@main</span><br><span class="line">        with:</span><br><span class="line">          # 你的 Gitee 用户名</span><br><span class="line">          gitee-username: $&#123;&#123; env.GITEE_USER &#125;&#125;</span><br><span class="line">          # 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span><br><span class="line">          gitee-password: $&#123;&#123; secrets.GITEE_PASSWORD &#125;&#125;</span><br><span class="line">          # 你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span><br><span class="line">          gitee-repo: $&#123;&#123; env.GITEE_DEPLOY_REPO &#125;&#125;</span><br><span class="line">          # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span><br><span class="line">          branch: $&#123;&#123; env.GITEE_DEPLOY_BRANCH &#125;&#125;</span><br></pre></td></tr></table></figure><p>3.<code>deploy.yml</code> 的内容需要修改的地方，</p><ul><li>第8行改成你的【hexo源码】分支名字</li><li>第13行-&gt;env中的所有常量，赋值为你的数据，每行都有注释，对照着改</li></ul><h1 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h1><p>1.git你的【hexo源码】到你的【aqrjfiles】仓库，数据比较多，速度有点慢，耐心等待</p><p>2.ok，完成，以后直接在【hexo源码】仓库修改添加数据，静态网页仓库会自己更新</p><p>3.修改完后点击【hexo源码】仓库中的【Actions】查看提交数据和报错信息</p><h1 id="第五步【重要知识点】"><a href="#第五步【重要知识点】" class="headerlink" title="第五步【重要知识点】"></a>第五步【重要知识点】</h1><p>踩坑注意点：</p><p>1.【github静态网页仓库】必须要和【gitee网页仓库】的分支名字相同，否则必报错</p><p>2.分支不同的可以去修改【github静态网页仓库】的分支名字，settings-&gt;Branches修改，修改完记得给以下两个配置文件</p><ul><li>【hexo源码】根目录的【_config.yml】文件中：deploy:branch：【新分支名字】</li><li>【hexo源码】根目录的<code>.github/workflows/deploy.yml</code> 文件中：env:GIT_DEPLOY_BRANCH: 【新分支名字】</li></ul><p>3.<code>.github/workflows/deploy.yml</code> 文件中：env:GIT_SOURCE_REPO:【github静态网页仓库地址】，别填错</p><p>4.修改【hexo源码】后，点击Actions还报错的话，重新上传【hexo源码】，操作如下：</p><ol><li>删除<code>.deploy_git</code>文件夹;</li><li>git中输入<code>git config --global core.autocrlf false</code></li><li>重新git上传</li></ol><h2 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h2><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
      <category term="gitee" scheme="https://blog.axiao.vip/tags/gitee/"/>
    
  </entry>
  
  <entry>
    <title>windows上安装macos系统</title>
    <link href="https://blog.axiao.vip/vmware-mac.html"/>
    <id>https://blog.axiao.vip/vmware-mac.html</id>
    <published>2022-04-11T14:38:36.838Z</published>
    <updated>2022-04-15T16:10:48.358Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><p>需要的软件如下：</p><p>vmware-16.2.3：<a href="https://pan.baidu.com/s/1xisspaTJssT-KSRgHwFWuw?pwd=ojlp" target="_blank">点这里</a></p><p>unlocker：<a href="https://pan.baidu.com/s/1A_J6Xcyc68sCM7OgEKj3AA?pwd=8a5g" target="_blank">点这里</a></p><p>mac系统镜像：<a href="https://pan.baidu.com/s/1jcQOIeNEnPSbuwPH537lwQ?pwd=nj0a" target="_blank">点这里</a></p><p>vmware密钥：<a href="https://pan.baidu.com/s/111J0waamF1JRT9wQx4LCxw?pwd=7x87" target="_blank">点这里</a></p><p>确定可用的软件组合：vm16.2.3+unlocker10.15+镜像10.13、11.5</p><h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><p>安装vmware，安装完成最后一步，点击许可证，输入密钥</p><p>打开电脑进程，关闭vmware有关的所有进程</p><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><p>unlocker解压并放到VMware的安装目录下</p><p>找到 <code>win-install.cmd</code> 单击右键以管理员身份运行</p><h1 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h1><p>1.创建虚拟机-选择典型（推荐）</p><p>2.选择安装程序光盘映像文件-找到镜像（默认iso格式，cdr的需要打开所有文件）</p><p>3.选择macos版本，这里选择macOS 10.13</p><p>4.选择安装虚拟机mac系统的磁盘位置，并起个名字</p><p>5.自定义磁盘大小（这里我用60G），并选择 <code>将虚拟磁盘拆分成多个文件</code></p><p>6.自定义硬件（根据自己的电脑硬件要求分配），点击完成</p><p>7.进入mac磁盘文件夹，找到 <code>macOS 10.13.vmx</code> ,打开编辑，最后加入代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smc.version = &quot;0&quot;</span><br><span class="line">cpuid.1.eax = &quot;00000000000000010000011010100101&quot;</span><br></pre></td></tr></table></figure><h1 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h1><p>1.开期虚拟机,进行maoos系统安装.</p><p>2.耐心等待吧，时间比较长</p><p>3.选择语言，下一步协议书点同意</p><p>4.选择要安装的磁盘，点击上方的 <code>实用工具</code>-磁盘工具 ，选择自己之前给的虚拟机大小差不多的虚拟磁盘，点击 <code>抹掉</code> ,自定义一个名字mac，点击抹掉</p><p>5.完成-点击左上角红点关闭</p><p>6.进行系统安装，选择磁盘mac，点击继续，慢慢等待</p><p>7.自行设置一些基础设置</p><h1 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h1><p>联网</p><p>1.设置虚拟机-网络适配器-选<strong>NAT模式，用于共享主机的IP地址</strong></p><p>2.在MacOS中，设置网络 以太网 使用<strong>DHCP</strong>，其实默认就是这个不用设置也行</p><p>3.回到win10，打开任务管理器，打开 <strong>服务</strong>，找到<strong>VMware DHCP</strong>和<strong>VMware NAT</strong>，把这两个服务打开，完美，能上网了</p><h1 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h1><p>1.右键创建文件功能</p><p>去appstore应用商店下载 <code>超级右键</code> ，并去扩展给予权限</p><p>2.从主机向虚拟机跨系统复制粘贴拖动文件</p><p>VMware菜单栏 —&gt; 虚拟机 —&gt; 设置 —&gt;屏幕弹出 “虚拟机设置界面”</p><p>虚拟机设置 —&gt; 硬件 —&gt; 选中“CD/DVD（SATA）”，选择 <code>使用ISO映像文件</code> 在VMware的安装目录下找 <code>darwin.iso</code> ，点击确定，打开虚拟机，桌面上就会出现VMware Tools镜像，打开点击安装VMware Tools工具，安装完重启就好了</p><p>3.和主机windows系统共享文件</p><p>参考：<a href="https://www.jianshu.com/p/c53df6ad8000" target="_blank" rel="noopener">实现虚拟机上的macOS系统和主机windows系统共享文件 - 简书 (jianshu.com)</a></p><h1 id="第七步"><a href="#第七步" class="headerlink" title="第七步"></a>第七步</h1><p>优化：</p><p>1.系统偏好设置” 进入”辅助功能” -显示-然后勾选”减少透明度”</p><p>2.“系统偏好设置”进入”Dock” 最小化窗口时使用: 选择“缩放效果”</p><p>3.系统偏好设置”进入”扩展”,然后将不使用的组件勾掉</p><p>4.下载beamoff软件：<a href="https://pan.baidu.com/s/1QXZnyRUfLAtm95Sa17guJQ?pwd=tzgv" target="_blank">点这里下载</a></p><p>5.设置为开机自动运行：系统偏好设置 - 用户与群组 - 选中你自己的用户名 - 选择 “登录项” 选项卡 - 点 + 号 找到你下载并解压出来的beamoff.app，点击添加</p><h2 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h2><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="vmware" scheme="https://blog.axiao.vip/categories/vmware/"/>
    
    
      <category term="vmware" scheme="https://blog.axiao.vip/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GiteePages+typora+picgo【从零开始】</title>
    <link href="https://blog.axiao.vip/hexo-extend-picgo.html"/>
    <id>https://blog.axiao.vip/hexo-extend-picgo.html</id>
    <published>2022-03-17T14:33:49.603Z</published>
    <updated>2022-04-29T10:44:20.017Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><blockquote><ol><li>hexo主题引用外部的js需要替换一下域名</li><li>创建Gitee仓库</li><li>提交文件到Gitee仓库前的准备工作</li><li>推送资源文件到Gitee仓库</li><li>开启GiteePages服务</li><li>Picgo + Gitee + Github 搭建免费图库， Typora 自动上传图片</li></ol></blockquote><br><p>软件资源站主题安装教程：<a href="https://github.com/shenliyang/hexo-theme-snippet" target="_blank" rel="noopener">shenliyang/hexo-theme-snippet: Snippet 简洁而不简单，也许是一款你寻找已久的hexo主题 (github.com)</a></p><p><a href="https://cloud.tencent.com/developer/article/1987495" target="_blank" rel="noopener">Hexo-Butterfly主题魔改 - 云+社区 - 腾讯云 (tencent.com)</a></p><p>优化参考：<a href="https://akilar.top/posts/969dffe3/" target="_blank" rel="noopener">Hexo博客静态资源加速 | Akilarの糖果屋</a></p><ul><li><h2 id="hexo主题引用外部的js需要替换一下域名"><a href="#hexo主题引用外部的js需要替换一下域名" class="headerlink" title="hexo主题引用外部的js需要替换一下域名"></a>hexo主题引用外部的js需要替换一下域名</h2><p>首先搭建hexo就不用多做介绍</p><blockquote><p>由于众所周知的原因，只需替换一个域名就可以继续使用 Google 提供的前端公共库了。 同样，通过 <code>script</code> 标记引用这些资源，让网站访问速度瞬间提速！</p></blockquote><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>此插件/扩展可以将以下的 cdn 资源替换为国内的：</p><ol><li><code>ajax.googleapis.com</code> - 前端公共库，替换为 <code>ajax.loli.net</code></li><li><code>fonts.googleapis.com</code> - 免费字体库，替换为 <code>fonts.loli.net</code></li><li><code>themes.googleusercontent.com</code> - fonts 有时会使用到这个里面的资源，替换为 <code>themes.loli.net</code></li><li><code>fonts.gstatic.com</code> - 免费字体库，替换为 <code>gstatic.loli.net</code></li><li><code>www.google.com/recaptcha</code> - Google 图像验证库，替换为 <code>www.recaptcha.net/recaptcha</code></li><li><code>secure.gravatar.com</code> - gravatar 头像，替换为 <code>gravatar.loli.net</code></li><li><code>maxcdn.bootstrapcdn.com/bootstrap</code> - bootstrap 框架使用的 CDN，替换为 <code>cdn.bootcdn.net/ajax/libs/twitter-bootstrap</code></li></ol></li><li><h2 id="创建Gitee仓库"><a href="#创建Gitee仓库" class="headerlink" title="创建Gitee仓库"></a>创建Gitee仓库</h2><p>首先注册gitee就不用介绍了</p><p>现在登录到你之前注册的Gitee主页，顶栏上有个<code>+</code>图标</p><p><img src="../images/webp.webp" alt="img"></p><p>鼠标移上去，点击<code>新建仓库</code>进入到创建仓库页面</p><img src="../images/webp-16475289273751.webp" alt="img" style="zoom:50%"><p>如果你想直接通过域名就能访问你的博客（个人网站）的话，创建仓库的时候你的仓库名就需要和你注册Gitee的时候的用户名一样。</p><p>例如：我的Gitee用户名为<code>maoyikun</code>，我创建的仓库名是<code>maoyikun</code>，那我访问的时候直接使用<a href="https://links.jianshu.com/go?to=maoyikun.gitee.io" target="_blank" rel="noopener">maoyikun.gitee.io</a>就可以直接访问了。但是，如果我创建的仓库名和用户名不一样，比如我创建仓库的时候，仓库名为<code>blog</code>，那我访问的时候，就必须要域名+仓库名才能访问，如<a href="https://links.jianshu.com/go?to=maoyikun.gitee.io%2Fblog" target="_blank" rel="noopener">maoyikun.gitee.io</a>。</p><p><code>是否开源</code>的选项，如果你的东西不想被别人看见的话，就选择私有的。</p><p>其他的随便选择就好。</p><p>这样，存放我们博客（个人网站）资源的仓库就创建好了。</p><h2 id="提交文件到Gitee仓库前的准备工作"><a href="#提交文件到Gitee仓库前的准备工作" class="headerlink" title="提交文件到Gitee仓库前的准备工作"></a>提交文件到Gitee仓库前的准备工作</h2><p>将本地文件推送到Gitee仓库之前，我们需要做一些简单的配置。</p><p>在终端输入命令配置Git提交时的用户名和邮箱：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "username" //全局配置提交是使用的提交人名</span><br><span class="line">git config --global user.email "xxx@mail.com" //全局配置提交人的电子邮箱</span><br></pre></td></tr></table></figure><p>如果想每次提交的时候不输入用户名和密码就需要在本地生成ssh秘钥。</p><p>在终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "公钥描述"</span><br></pre></td></tr></table></figure><p>生成的秘钥会存放在<code>~/.ssh/</code>目录下。</p><p>接下来在终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>就可以看到生成的公钥内容了，将公钥的内容复制下来放到Gitee上。</p><p>进入到你的Gitee主页，点击<code>设置</code></p><img src="https:////upload-images.jianshu.io/upload_images/2978725-ffe410f6428ea127?imageMogr2/auto-orient/strip|imageView2/2/w/942/format/webp" alt="img" style="zoom:50%"><p>进入到Gitee设置页面，找到<code>安全设置</code>-<code>SSH公钥</code></p><p><img src="https:////upload-images.jianshu.io/upload_images/2978725-fe5aa843c381557d?imageMogr2/auto-orient/strip%7CimageView2/2/w/448/format/webp" alt="img"></p></li></ul><p>进入到添加公钥页面</p><p><img src="https:////upload-images.jianshu.io/upload_images/2978725-4c641987e8998e8b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>将刚才你复制的公钥内容粘贴到<code>公钥</code>输入框，点击<code>确定</code>保存公钥。</p><p>做完以上操作之后，可以测试一下公钥是否配置成功。</p><p>在终端输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure><p>执行命令如果输出了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi 你的Gitee账号! You've successfully authenticated, but GITEE.COM does not provide shell access.</span><br></pre></td></tr></table></figure><p>此时证明你的公钥已经配置成功了。</p><p>接下来要做的就是将本地的文件推送到Gitee仓库了。</p><h3 id="推送资源文件到Gitee仓库"><a href="#推送资源文件到Gitee仓库" class="headerlink" title="推送资源文件到Gitee仓库"></a>推送资源文件到Gitee仓库</h3><p>本地博客（个人网站）目录已经生成，Gitee仓库已经创建，现在我们需要将本地的文件推送到Gitee仓库了。</p><p>因为GiteePages是支持Hexo资源编译的，所以需要推送到Gitee仓库的文件就有两种选择。</p><ol><li><p>只推送Hexo生成的静态文件到Gitee仓库</p><p>这种方式是直接将Hexo生成的所有静态文件推送到Gitee仓库，这样就相当于是GiteePages托管的就是你的博客（个人网站的）所有生成好的静态文件，就不需要GiteePages再去编译生成一次静态文件。这样每次更新GiteePages的时候时间会相对短一些。这种方式还有个好处就是操作简单一点，可直接通过Hexo命令来推送文件到Gitee仓库。</p><p>使用终端，进入到博客（个人网站）文件夹下面，执行命令安装一个插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><p>装好插件之后，在该目录下找到<code>_config.yml</code>文件，打开文件配置你的仓库信息：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在文件中找到这个deploy这个节点，修改或添加配置</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">你的仓库地址</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">你要推送到仓库的分支（默认为master）</span></span><br></pre></td></tr></table></figure><p>在该目录下执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>这个命令会根据你的Markdown文件生成对应的静态文件，生成好了之后，可本地启动Hexo服务看下效果，输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s //和hexo server命令一样</span><br></pre></td></tr></table></figure><p>感觉效果满意了，就可以提交到Gitee仓库了，执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>至此，生成的静态文件就已经推送到Gitee仓库去了。</p></li><li><p>将整个之前初始化的文件夹推送到Gitee仓库</p><p>这种方式是将你初始化的博客（个人网站）整个文件夹下面的所有文件推送到Gitee仓库，GiteePages在更新的时候会自动的去编译一次你的目录，然后生成所有的的静态文件，这样的话，每次更新GiteePages的时候肯定时间就相对会久一点。</p><p>在终端进入到之前初始化的博客（个人网站）文件夹中，执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init //将该文件夹中的文件纳入到Git的版本控制中</span><br><span class="line"></span><br><span class="line">git add . //将所有的文件添加到Git暂存区</span><br><span class="line"></span><br><span class="line">git commit -m "此次提交的说明" //将文件提交到本地</span><br><span class="line"></span><br><span class="line">git remote add origin 你的远程仓库地址 //告诉Git你的Gitee仓库在哪里</span><br><span class="line"></span><br><span class="line">git push -u origin master //将你本地的文件提交到Gitee仓库的master分支</span><br></pre></td></tr></table></figure><p>至此，你的博客（个人网站）的所有文件已经提交到了Gitee仓库去了。</p><p>ps：Gitee仓库地址需要进入你创建的仓库首页才能看到，既然配置了公钥，那么仓库地址肯定是使用ssh协议最好。</p></li></ol><p><img src="https:////upload-images.jianshu.io/upload_images/2978725-01900f651983b4cb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>现在是万事具备，只欠开启GiteePages服务了。</p><h3 id="开启GiteePages服务"><a href="#开启GiteePages服务" class="headerlink" title="开启GiteePages服务"></a>开启GiteePages服务</h3><p>终于走到了最后一步。</p><p>现在进入到你的Gitee仓库页面，找到<code>服务</code>，点击<code>Gitee Pages</code>开启GiteePages服务</p><p><img src="https:////upload-images.jianshu.io/upload_images/2978725-a595969bfe6ba8bc?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>进入到页面之后，可选择GiteePages服务需要托管的分支，推荐勾选上<code>强制使用HTTPS</code>，选择完毕之后点击<code>启动</code>便可开启GiteePages服务。</p><p><img src="https:////upload-images.jianshu.io/upload_images/2978725-011e139243faa807?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>启动完成之后会展示你的GiteePages网址，这个网址便是你的博客（个人网站）的网址了，记住这个网址。</p><p><img src="https:////upload-images.jianshu.io/upload_images/2978725-3773f3f2c04cfbaf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1144/format/webp" alt="img"></p><p>以后如果你的博客（个人网站）的内容有改动，只需在GiteePages服务页面点击<code>更新</code>即可。</p><p>至此，你的博客（个人网站）便已经全部搭建完成。</p><h2 id="Picgo-Gitee-Github-搭建免费图库，-Typora-自动上传图片"><a href="#Picgo-Gitee-Github-搭建免费图库，-Typora-自动上传图片" class="headerlink" title="Picgo + Gitee + Github 搭建免费图库， Typora 自动上传图片"></a>Picgo + Gitee + Github 搭建免费图库， Typora 自动上传图片</h2><p>参考这个：</p><p><a href="https://blog.csdn.net/Cceking/article/details/106610175" target="_blank" rel="noopener">(33条消息) Picgo + Gitee + Github 搭建免费图库， Typora 自动上传图片_Cceking的博客-CSDN博客</a></p><p><img src="../images/picgo.png" alt="picgo"></p><p>注意事项：图床仓库必须是公共仓库，私有的访问不了</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>上面的设置完成后，在 Typora 里写字时，就可以自动上传图片到图床啦。</p><h2 id="拖拽"><a href="#拖拽" class="headerlink" title="拖拽"></a>拖拽</h2><p>可以直接选择图片，然后拖拽到编辑页面。</p><p><img src="../images/aHR0cDovL2hveGlzLmliZXRhbGlmZS5jb20vcGljZ28vMjAyMDAzMTAxMzAzMDIuZ2lm.gif" alt="▲ 拖拽上传"></p><h2 id="编辑器内插入"><a href="#编辑器内插入" class="headerlink" title="编辑器内插入"></a>编辑器内插入</h2><p>使用快捷键 <strong>Ctrl + Shift + I</strong>，可以调出插入图片的功能。</p><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><p>也可以直接复制图片，然后再编辑器中直接粘贴。</p><p>或者<strong>截图后直接粘贴</strong>（比如 Snipaste）。</p><p><img src="../images/aHR0cDovL2hveGlzLmliZXRhbGlmZS5jb20vcGljZ28vMjAyMDAzMTAxNTEwMzQuZ2lm.gif" alt="▲ 截图后直接粘贴"></p><p>这里需要多一个点击<strong>上传图片</strong>的操作。</p><p>然后图片就可以上传到图床了。</p><p>另外，还可以看到<strong>所有的上传在 PicGo 的相册里都能找到：</strong></p><p><img src="../images/format,png.png" alt="img"></p><h3 id="over！！！！先这样吧，以后再改"><a href="#over！！！！先这样吧，以后再改" class="headerlink" title="over！！！！先这样吧，以后再改"></a>over！！！！先这样吧，以后再改</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="https://blog.axiao.vip/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://blog.axiao.vip/tags/hexo/"/>
    
      <category term="gitee" scheme="https://blog.axiao.vip/tags/gitee/"/>
    
  </entry>
  
  <entry>
    <title>TP5.1项目实战简单登录验证操作</title>
    <link href="https://blog.axiao.vip/tp-project-login.html"/>
    <id>https://blog.axiao.vip/tp-project-login.html</id>
    <published>2021-04-12T11:40:54.684Z</published>
    <updated>2020-05-26T15:12:53.104Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><blockquote><p>三层架构<br>控制层接受参数并传递给业务逻辑层<br>业务逻辑层service操作处理,密码哈希加密以及验证<br>配置文件配置返回码code，配置缓存代理<br>钩子定义常量，注册缓存代理<br>公共文件创建函数获取返回值<br>工具文件设置session缓存<br>门面代理缓存</p></blockquote><hr><a id="more"></a><h4 id="了解三层架构"><a href="#了解三层架构" class="headerlink" title="了解三层架构"></a>了解三层架构</h4><blockquote><p>控制层controller：接收用户的请求，并响应用户的请求。同时会根据用户的请求调用对应的service完成我们项目中的功能，注意它不会直接与业务和数据库相关联<br>业务逻辑层service：完成项目中的功能（项目中某个功能的业务和逻辑），它会调用到model中方法来操作数据库，注意它不会直接与数据库连接<br>模型层model：只有一个事情就是对数据库进行CURD操作</p></blockquote><h4 id="控制层接收参数"><a href="#控制层接收参数" class="headerlink" title="控制层接收参数"></a>控制层接收参数</h4><p>建立控制器admin\controller\Login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\admin\controller;</span><br><span class="line">use think\Controller;</span><br><span class="line">use Request;</span><br><span class="line">use app\service\UserService;</span><br><span class="line">use app\validate\UserValidate;</span><br><span class="line">use think\captcha\Captcha;</span><br><span class="line">class Login extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    private $userService;</span><br><span class="line">    /**</span><br><span class="line">     * 控制器的初始化方法</span><br><span class="line">     */</span><br><span class="line">    protected function initialize()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;userService = new UserService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function login()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Request::isPost()) &#123;</span><br><span class="line">            $username = Request::param(&apos;username&apos;);</span><br><span class="line">            $password = Request::param(&apos;password&apos;);</span><br><span class="line">            //验证码验证</span><br><span class="line">            $userValidate = new UserValidate;</span><br><span class="line">            if (!$userValidate-&gt;check(Request::param())) &#123;</span><br><span class="line">                return json([</span><br><span class="line">                    &apos;code&apos; =&gt; USER_LOGIN_VALIDATE_ERROR,</span><br><span class="line">                    &apos;msg&apos;  =&gt; $userValidate-&gt;getError() // 验证器回复错误信息的方法</span><br><span class="line">                ]);</span><br><span class="line">            &#125;</span><br><span class="line">            //公共文件common.php函数ajaxReturn</span><br><span class="line">            return ajaxReturn($this-&gt;userService-&gt;login($username,$password));</span><br><span class="line">        &#125;</span><br><span class="line">        return $this-&gt;fetch();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //验证码生成</span><br><span class="line">    public function verify()</span><br><span class="line">    &#123;</span><br><span class="line">        $captcha = new Captcha();</span><br><span class="line">        return $captcha-&gt;entry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务逻辑层功能操作"><a href="#业务逻辑层功能操作" class="headerlink" title="业务逻辑层功能操作"></a>业务逻辑层功能操作</h4><p>根目录建立data\service\UserService.php（起名根据模型名+service）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace data\service;</span><br><span class="line">use data\model\User;</span><br><span class="line">use SC,OnlyLogin;</span><br><span class="line">class UserService</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 定义所有的登入方式</span><br><span class="line">     */</span><br><span class="line">    private $loginWay = [</span><br><span class="line">        &apos;user_name&apos;, //用户名登录</span><br><span class="line">        &apos;user_email&apos;,//邮箱登录</span><br><span class="line">        &apos;user_tel&apos;,  //手机登录</span><br><span class="line">        &apos;uid&apos;        //账户登录</span><br><span class="line">    ];</span><br><span class="line">    public function login($username, $password)</span><br><span class="line">    &#123;</span><br><span class="line">        // 一般做登入 先判断用户名是否存在，如存在我们就判断用户的密码是否正确</span><br><span class="line">        foreach ($this-&gt;loginWay as $key =&gt; $value) &#123;</span><br><span class="line">            $user = User::where($value, $username)-&gt;find();</span><br><span class="line">            if ($user) &#123; // 如果存在就证明是有这个用户</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (!$user) &#123;</span><br><span class="line">           // 用户名是否存在</span><br><span class="line">           return ERROR_NO_USER;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if ($user-&gt;user_status != 1) &#123;</span><br><span class="line">           // 用户是否被封</span><br><span class="line">           return ERROR_USER_START;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //验证哈希加密password_hash($password,1)的密码：</span><br><span class="line">        if (!password_verify($password ,$user-&gt;user_password)) &#123;</span><br><span class="line">            // 用户密码是否错误</span><br><span class="line">            return ERROR_PASSWORD;</span><br><span class="line">        &#125;</span><br><span class="line">        // 用户登入成功</span><br><span class="line">        $this-&gt;initLogin($user);</span><br><span class="line">        //生成检验唯一登录的标识</span><br><span class="line">        OnlyLogin::onlyRecord($user-&gt;uid);</span><br><span class="line">        return SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 登入初始化</span><br><span class="line">     */</span><br><span class="line">    public function initLogin($user)</span><br><span class="line">    &#123;</span><br><span class="line">        SC::setLogin(true); // 根据自己安全需求设置token</span><br><span class="line">        if ($user-&gt;is_system == 1) &#123; // 这么写的原因</span><br><span class="line">            SC::setIsSystem(true);</span><br><span class="line">            SC::setUserRole(Rbac::getRoleModule($user-&gt;role_id));</span><br><span class="line">            // 计入用户的权限</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            SC::setIsSystem(false);</span><br><span class="line">        &#125;</span><br><span class="line">        SC::setUserInfo([</span><br><span class="line">            &apos;uid&apos;       =&gt; $user-&gt;uid,</span><br><span class="line">            &apos;user_name&apos; =&gt; $user-&gt;user_name,</span><br><span class="line">            &apos;is_system&apos; =&gt; $user-&gt;is_system,</span><br><span class="line">            &apos;nick_name&apos; =&gt; $user-&gt;nick_name,</span><br><span class="line">            //...</span><br><span class="line">            // &apos;role_id&apos;   =&gt; $user-&gt;role_id</span><br><span class="line">        ]);</span><br><span class="line">        // 用户登入之后信息记入</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;current_login_ip&apos; =&gt; request()-&gt;ip(),</span><br><span class="line">            &apos;current_login_time&apos; =&gt; date(&apos;Y-m-d H:i:s&apos;, time()),</span><br><span class="line">            &apos;last_login_time&apos; =&gt; $user-&gt;last_login_time</span><br><span class="line">            // ...</span><br><span class="line">        ];</span><br><span class="line">        User::where(&apos;uid&apos;, $user-&gt;uid)-&gt;update($data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="模型层"><a href="#模型层" class="headerlink" title="模型层"></a>模型层</h4><p>建立model\User.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\model;</span><br><span class="line">use think\Model;</span><br><span class="line">class User extends Model</span><br><span class="line">&#123;</span><br><span class="line">    protected $pk = &apos;id&apos;;</span><br><span class="line"></span><br><span class="line">    public function userRole()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;hasOne(&apos;UserRole&apos;, &apos;role_id&apos;, &apos;role_id&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="验证器"><a href="#验证器" class="headerlink" title="验证器"></a>验证器</h4><p>建立validate\UserValidate.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\validate;</span><br><span class="line">use think\Validate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 使用验证器校验用户输入的验证码</span><br><span class="line"> */</span><br><span class="line">class UserValidata extends Validate</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 定义验证规则</span><br><span class="line">     * 格式：&apos;字段名&apos;=&gt;[&apos;规则1&apos;,&apos;规则2&apos;...]</span><br><span class="line">     *</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">protected $rule = [</span><br><span class="line">// 用户名和 密码  省...</span><br><span class="line">// 关于验证器的一些参数的使用</span><br><span class="line">&apos;vertify&apos; =&gt; &apos;require|captcha&apos;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 定义错误信息</span><br><span class="line">     * 格式：&apos;字段名.规则名&apos;=&gt;&apos;错误信息&apos;</span><br><span class="line">     *</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">    protected $message = [</span><br><span class="line">&apos;vertify&apos; =&gt; [</span><br><span class="line">&apos;require&apos; =&gt; &apos;验证码必须有&apos;,</span><br><span class="line">&apos;captcha&apos; =&gt; &apos;验证码错误&apos;,</span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置返回状态码，配置缓存代理"><a href="#配置返回状态码，配置缓存代理" class="headerlink" title="配置返回状态码，配置缓存代理"></a>配置返回状态码，配置缓存代理</h4><p>1.建立config\message.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 回复信息配置</span><br><span class="line">return [</span><br><span class="line">    1 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;SUCCESS&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;操作成功&apos;,</span><br><span class="line">        //...</span><br><span class="line">    ],</span><br><span class="line">    // user信息</span><br><span class="line">    -1000 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;USER_LOGIN_VALIDATE_ERROR&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;用户登入校验不成功&apos;,</span><br><span class="line">    ],</span><br><span class="line">    -1001 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;ERROR_NO_USER&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;用户不存在&apos;,</span><br><span class="line">    ],</span><br><span class="line">    -1002 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;ERROR_USER_START&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;用户状态不对&apos;,</span><br><span class="line">    ],</span><br><span class="line">    -1003 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;ERROR_PASSWORD&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;用户密码错误&apos;,</span><br><span class="line">    ],</span><br><span class="line">    -1005 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;ERROR_LOGIN_EXCESS_TIME_OUT&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;登入超过规定次数&apos;,</span><br><span class="line">    ],</span><br><span class="line">    // 用户组信息</span><br><span class="line">    -2001 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;ERROR_USER_GROUP_REPEAT&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;用户组名重复&apos;</span><br><span class="line">    ],</span><br><span class="line">    -2002 =&gt; [</span><br><span class="line">        &apos;code&apos; =&gt; &apos;ERROR_USER_GROUP&apos;,</span><br><span class="line">        &apos;msg&apos;  =&gt; &apos;用户组名操作失败&apos;</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>2.建立config\facade.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//为了方便与管理自定义门面类和别名 就定义在配置文件中</span><br><span class="line">return [</span><br><span class="line">    &apos;facade&apos; =&gt; [</span><br><span class="line">        \app\facade\SC::class =&gt; \app\util\SC::class,</span><br><span class="line">        \app\facade\OnlyLogin::class =&gt; \app\util\OnlyLogin::class,</span><br><span class="line">    ],</span><br><span class="line">    &apos;alias&apos; =&gt; [</span><br><span class="line">        &apos;SC&apos; =&gt; \app\facade\SC::class,</span><br><span class="line">        &apos;OnlyLogin&apos; =&gt; \app\facade\OnlyLogin::class,</span><br><span class="line">    ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h4 id="行为钩子获取配置文件并定义常量，注册缓存代理"><a href="#行为钩子获取配置文件并定义常量，注册缓存代理" class="headerlink" title="行为钩子获取配置文件并定义常量，注册缓存代理"></a>行为钩子获取配置文件并定义常量，注册缓存代理</h4><p>1.建立app\behavior\MessageBehavior.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\behavior;</span><br><span class="line">use Config;</span><br><span class="line">class MessageBehavior</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        $codes = Config::get(&apos;message.&apos;);</span><br><span class="line">        foreach ($codes as $key =&gt; $value) &#123;</span><br><span class="line">            define($value[&apos;code&apos;], $key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.建立app\behavior\LoadBehavior.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\behavior;</span><br><span class="line">use Config;</span><br><span class="line">use think\Facade; // 是用来facade注册</span><br><span class="line">use think\Loader; // 是用来别名注册</span><br><span class="line"></span><br><span class="line">class LoadBehavior</span><br><span class="line">&#123;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line">        // 如果不知道 请看think\base.php对于核心类库文件的代理和别名注册</span><br><span class="line">        // facade注册</span><br><span class="line">        Facade::bind(Config::get(&apos;facade.facade&apos;));</span><br><span class="line">        // 别名注册</span><br><span class="line">        Loader::addClassAlias(Config::get(&apos;facade.alias&apos;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.app\tags.php中配置行为钩子加载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 应用初始化</span><br><span class="line">&apos;app_init&apos;     =&gt; [</span><br><span class="line">    \app\behavior\MessageBehavior::class,</span><br><span class="line">    \app\behavior\LoadBehavior::class</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h4 id="公共文件获取返回信息"><a href="#公共文件获取返回信息" class="headerlink" title="公共文件获取返回信息"></a>公共文件获取返回信息</h4><p>common.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 应用公共文件</span><br><span class="line">function ajaxReturn($code, $data = [])</span><br><span class="line">&#123;</span><br><span class="line">    $result = [&apos;code&apos; =&gt; $code, &apos;message&apos; =&gt; getMessage($code)];</span><br><span class="line">    $result = (!empty($data)) ? $result[&apos;data&apos;] = $data : $result;</span><br><span class="line">    return json($result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function getMessage($code)&#123;</span><br><span class="line">    $info = config(&apos;message.&apos;);</span><br><span class="line">    return (array_key_exists($code, $info)) ? $info[$code][&apos;msg&apos;] : &apos;操作失败&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="工具文件设置session缓存，唯一登入操作"><a href="#工具文件设置session缓存，唯一登入操作" class="headerlink" title="工具文件设置session缓存，唯一登入操作"></a>工具文件设置session缓存，唯一登入操作</h4><p>1.建立util\SC.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\util;</span><br><span class="line">use Session;</span><br><span class="line">/**</span><br><span class="line"> * 工具类</span><br><span class="line"> * 用户缓存 facade代理 SC</span><br><span class="line"> */</span><br><span class="line">class SC</span><br><span class="line">&#123;</span><br><span class="line">      /**</span><br><span class="line">       * 用户登录的session key</span><br><span class="line">       */</span><br><span class="line">      CONST LOGIN_MARK_SESSION_KEY = &apos;LOGIN_MARK_SESSION&apos;;</span><br><span class="line">      /**</span><br><span class="line">       * 权限信息</span><br><span class="line">       * @var string</span><br><span class="line">       */</span><br><span class="line">      CONST USER_ROLE_SESSION = &apos;USER_ROLE_SESSION&apos;;</span><br><span class="line">      /**</span><br><span class="line">       * USER用户信息</span><br><span class="line">       * @var string</span><br><span class="line">       */</span><br><span class="line">      CONST USER_INFO_SESSION = &apos;USER_INFO_SESSION&apos;;</span><br><span class="line">      // /**</span><br><span class="line">      //  * 是否设置用户登入的有效时间</span><br><span class="line">      //  * @var string</span><br><span class="line">      //  */</span><br><span class="line">      // CONST CHECK_TIME_SESSION = &apos;CHECK_TIME_SESSION&apos;;</span><br><span class="line">      //</span><br><span class="line">      // private $checkTime = false;</span><br><span class="line"></span><br><span class="line">      //---------------------------设置和判断用户的是否登入</span><br><span class="line">      // 设置用户登入token</span><br><span class="line">      public function setLogin($value)</span><br><span class="line">      &#123;</span><br><span class="line">          Session::set(self::LOGIN_MARK_SESSION_KEY, password_hash($value, 1));</span><br><span class="line">      &#125;</span><br><span class="line">      // 判断用户是否登入成功</span><br><span class="line">      public function getLogin()</span><br><span class="line">      &#123;</span><br><span class="line">          Session::get(self::LOGIN_MARK_SESSION_KEY);</span><br><span class="line">      &#125;</span><br><span class="line">      //---------------------------设置用户和获取用户的登入信息</span><br><span class="line">      // 设置用户的信息</span><br><span class="line">      public function setUserInfo($value)</span><br><span class="line">      &#123;</span><br><span class="line">          Session::set(self::USER_INFO_SESSION, $value);</span><br><span class="line">      &#125;</span><br><span class="line">      // 获取用户的信息</span><br><span class="line">      public function getUserInfo($value = null)</span><br><span class="line">      &#123;</span><br><span class="line">          $userInfo = Session::get(self::USER_INFO_SESSION);</span><br><span class="line">          return ($value) ? $userInfo[$value] : $userInfo;</span><br><span class="line">      &#125;</span><br><span class="line">      //--------------------------设置和获取用户的权限</span><br><span class="line">      // 设置用户的信息</span><br><span class="line">      public function setUserRole($value)</span><br><span class="line">      &#123;</span><br><span class="line">          Session::set(self::USER_ROLE_SESSION, $value);</span><br><span class="line">      &#125;</span><br><span class="line">      // 获取用户的信息</span><br><span class="line">      public function getUserRole()</span><br><span class="line">      &#123;</span><br><span class="line">          Session::get(self::USER_ROLE_SESSION);</span><br><span class="line">      &#125;</span><br><span class="line">      //-------------------------用户退出清空用户缓存信息</span><br><span class="line">      // 退出登入</span><br><span class="line">      public function clear()</span><br><span class="line">      &#123;</span><br><span class="line">          Session::del(self::USER_INFO_SESSION);</span><br><span class="line">          Session::del(self::USER_ROLE_SESSION);</span><br><span class="line">          Session::del(self::LOGIN_MARK_SESSION_KEY);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.建立util\OnlyLogin.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\util;</span><br><span class="line"></span><br><span class="line">use Cache,Cookie,SC,Log;</span><br><span class="line">/**</span><br><span class="line"> * 就是唯一登入的服务类</span><br><span class="line"> */</span><br><span class="line">class OnlyLogin</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 这是校验用户是否唯一登入的方法</span><br><span class="line">     */</span><br><span class="line">    public function onlyCheck()</span><br><span class="line">    &#123;</span><br><span class="line">        // 客户端</span><br><span class="line">        $cookieToken = Cookie::get(&apos;TOKEN&apos;.SC::getUserInfo(&apos;uid&apos;));</span><br><span class="line">        &lt;!-- Log::write(&quot;=====&gt;&gt;&gt;cookieToken ::: &quot;.$cookieToken); --&gt;</span><br><span class="line">        // 服务端</span><br><span class="line">        $cacheToken = Cache::get(&apos;TOKEN&apos;.SC::getUserInfo(&apos;uid&apos;));</span><br><span class="line">        &lt;!-- Log::write(&quot;=====&gt;&gt;&gt;cacheToken ::: &quot;.$cacheToken); --&gt;</span><br><span class="line">        // 进行服务端的token与客户端token进行校验</span><br><span class="line">        // 第一次登入$CacheToken 没有，异地登入的时候$cookieToken</span><br><span class="line">        if (empty($cacheToken) || empty($cookieToken)) &#123;</span><br><span class="line">            &lt;!-- Log::write(&apos;正常登入时候，异地登入时候&apos;); --&gt;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        // 如果都有</span><br><span class="line">        // 判断是否异地登入 如果相等那么就没有异地登入 所以当前是不会被T</span><br><span class="line">        if ($cookieToken != $cacheToken) &#123;</span><br><span class="line">            &lt;!-- Log::write(&apos;在异地登入了，本地就被T了&apos;); --&gt;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        &lt;!-- Log::write(&apos;常规操作&apos;); --&gt;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 会根据用户的id作为key 生成对应标识</span><br><span class="line">     */</span><br><span class="line">    public function onlyRecord($user_id )</span><br><span class="line">    &#123;</span><br><span class="line">        $token = $this-&gt;createToken($user_id);</span><br><span class="line">        // 过期时间</span><br><span class="line">        // 客户端</span><br><span class="line">        Cookie::set(&apos;TOKEN&apos;.$user_id, $token);</span><br><span class="line">        // 服务端</span><br><span class="line">        Cache::set(&apos;TOKEN&apos;.$user_id, $token);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 创建token的方法</span><br><span class="line">     * 因为每一个项目token生成的规则不一样 唯一安全</span><br><span class="line">     * 参考微信公众号生成token的方式</span><br><span class="line">     */</span><br><span class="line">    private function createToken($user_id)</span><br><span class="line">    &#123;</span><br><span class="line">        $time  = time(); // 时间戳</span><br><span class="line">        $nonce = mt_rand(10, 1000);</span><br><span class="line">        $array = array($time, $nonce, &apos;ONLY_USER_TOKEN&apos;, $user_id);</span><br><span class="line">        sort($array);</span><br><span class="line">        $token = implode($array);</span><br><span class="line">        return sha1($token);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 清空用户的登入信息</span><br><span class="line">     * @return [type] [description]</span><br><span class="line">     */</span><br><span class="line">    public function clear()</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="门面代理缓存-代理唯一登入操作类"><a href="#门面代理缓存-代理唯一登入操作类" class="headerlink" title="门面代理缓存,代理唯一登入操作类"></a>门面代理缓存,代理唯一登入操作类</h4><p>1.建立facade\SC.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\facade;</span><br><span class="line">use think\Facade;</span><br><span class="line">class SC extends Facade</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 获取当前Facade对应类名</span><br><span class="line">     * @access protected</span><br><span class="line">     * @return string</span><br><span class="line">     */</span><br><span class="line">    protected static function getFacadeClass()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.建立facade\OnlyLogin.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\facade;</span><br><span class="line">use think\Facade;</span><br><span class="line">class OnlyLogin extends Facade</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 获取当前Facade对应类名</span><br><span class="line">     * @access protected</span><br><span class="line">     * @return string</span><br><span class="line">     */</span><br><span class="line">    protected static function getFacadeClass()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="中间件-唯一登录验证，规避短时间重复请求"><a href="#中间件-唯一登录验证，规避短时间重复请求" class="headerlink" title="中间件(唯一登录验证，规避短时间重复请求)"></a>中间件(唯一登录验证，规避短时间重复请求)</h4><p>1.建立http\middleware\AuthMiddleware.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\http\middleware;</span><br><span class="line">use OnlyLogin;</span><br><span class="line">class AuthMiddleware</span><br><span class="line">&#123;</span><br><span class="line">    public function handle($request, \Closure $next)</span><br><span class="line">    &#123;</span><br><span class="line">       if (OnlyLogin::onlyCheck()) &#123;</span><br><span class="line">            return $next($request);</span><br><span class="line">       &#125;</span><br><span class="line">       return response(&apos;你被T了&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.建立http\middleware\RepetitionMiddleware.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\http\middleware;</span><br><span class="line">use Session,Log;</span><br><span class="line">/**</span><br><span class="line"> * 规避短时间重复请求</span><br><span class="line"> */</span><br><span class="line">class RepetitionMiddleware</span><br><span class="line">&#123;</span><br><span class="line">    public function handle($request, \Closure $next)</span><br><span class="line">    &#123;</span><br><span class="line">        Session::get(&apos;LAST_TIME&apos;); // 最后请求的时间 , 根据当前时间请求的这个时间</span><br><span class="line">        // 当前时间  - 上次请求的时间 &lt; 3</span><br><span class="line">        // 第一次是没有的 上次请求的时间</span><br><span class="line">        $lastTime = (Session::get(&apos;LAST_TIME&apos;)) ? Session::get(&apos;LAST_TIME&apos;) : 0;</span><br><span class="line">        $nowTime = time();</span><br><span class="line"></span><br><span class="line">        if ($nowTime - $lastTime &lt; 1) &#123;</span><br><span class="line">            &lt;!-- Log::write(&apos; 请求频率了 过多 &apos;); --&gt;</span><br><span class="line">            return response(&apos;&apos;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Session::set(&apos;LAST_TIME&apos;, $nowTime);</span><br><span class="line">            return $next($request);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.建立app\middleware.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">return [</span><br><span class="line">    \app\http\middleware\AuthMiddleware::class,</span><br><span class="line">    \app\http\middleware\RepetitionMiddleware::class</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h1 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h1><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;三层架构&lt;br&gt;控制层接受参数并传递给业务逻辑层&lt;br&gt;业务逻辑层service操作处理,密码哈希加密以及验证&lt;br&gt;配置文件配置返回码code，配置缓存代理&lt;br&gt;钩子定义常量，注册缓存代理&lt;br&gt;公共文件创建函数获取返回值&lt;br&gt;工具文件设置session缓存&lt;br&gt;门面代理缓存&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="thinkPHP" scheme="https://blog.axiao.vip/categories/thinkPHP/"/>
    
    
      <category term="tp5.1" scheme="https://blog.axiao.vip/tags/tp5-1/"/>
    
      <category term="login" scheme="https://blog.axiao.vip/tags/login/"/>
    
  </entry>
  
  <entry>
    <title>TP5.1微信公众号对接</title>
    <link href="https://blog.axiao.vip/tp-wechat.html"/>
    <id>https://blog.axiao.vip/tp-wechat.html</id>
    <published>2020-05-21T13:31:11.831Z</published>
    <updated>2020-05-21T14:41:20.265Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><blockquote><p>微信对接token验证<br>消息回复</p></blockquote><hr><a id="more"></a><h3 id="一-微信对接token验证"><a href="#一-微信对接token验证" class="headerlink" title="一.微信对接token验证"></a>一.微信对接token验证</h3><h4 id="1-先建立工具类文件util-WeixinUtil-php"><a href="#1-先建立工具类文件util-WeixinUtil-php" class="headerlink" title="1.先建立工具类文件util\WeixinUtil.php"></a>1.先建立工具类文件util\WeixinUtil.php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\util;</span><br><span class="line">use Request;</span><br><span class="line">/**</span><br><span class="line"> * 操作微信公众号工具，这些方法可以提供给当前的项目使用，也可以提供给其他项目使用的代码</span><br><span class="line"> */</span><br><span class="line">class WeixinUtil</span><br><span class="line">&#123;</span><br><span class="line">    private $token = &quot;shineyork&quot;;</span><br><span class="line">    /**</span><br><span class="line">     * 微信公众号校验</span><br><span class="line">     * @return [type] [description]</span><br><span class="line">     */</span><br><span class="line">    public function check()&#123;</span><br><span class="line">        //1).接收微信以get方式传过来的参数</span><br><span class="line">        $signature = Request::param(&quot;signature&quot;);</span><br><span class="line">        $timestamp = Request::param(&quot;timestamp&quot;);</span><br><span class="line">        $nonce     = Request::param(&quot;nonce&quot;);</span><br><span class="line"></span><br><span class="line">        //2).处理数据</span><br><span class="line">        //2.1)排序 $timestamp，$nonce，$token</span><br><span class="line">        $arrayName = array($timestamp ,$nonce ,$this-&gt;token );</span><br><span class="line">        sort($arrayName);</span><br><span class="line">        //2.2).加密  sha1</span><br><span class="line">        $temp = implode($arrayName);</span><br><span class="line">        $temp = sha1($temp);</span><br><span class="line">        //3).比对参数</span><br><span class="line">        //客户系统判断是否来自微信</span><br><span class="line">        if ($temp == $signature) &#123;</span><br><span class="line">            //告诉微信校验成功</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 没有校验成功</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-建立代理类facade-WeixinUtilFacade-php"><a href="#2-建立代理类facade-WeixinUtilFacade-php" class="headerlink" title="2.建立代理类facade\WeixinUtilFacade.php"></a>2.建立代理类facade\WeixinUtilFacade.php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\facade;</span><br><span class="line">use think\Facade;</span><br><span class="line">class WeixinUtilFacade extends Facade</span><br><span class="line">&#123;</span><br><span class="line">    protected static function getFacadeClass()</span><br><span class="line">    &#123;</span><br><span class="line">        return \app\util\WeixinUtil::class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-建立中间件"><a href="#3-建立中间件" class="headerlink" title="3.建立中间件"></a>3.建立中间件</h4><p>使用命令：<code>php think make:middleware WeixinMiddleware</code><br>http\middleware\WeixinMiddleware.php代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\http\middleware;</span><br><span class="line">use app\facade\WeixinUtilFacade;</span><br><span class="line">class WeixinMiddleware</span><br><span class="line">&#123;</span><br><span class="line">    public function handle($request, \Closure $next)</span><br><span class="line">    &#123;</span><br><span class="line">        if(WeixinUtilFacade::check())&#123;</span><br><span class="line">            // 判断是不是第一次校验</span><br><span class="line">            if ($request-&gt;param(&apos;echostr&apos;)) &#123;</span><br><span class="line">               return response($request-&gt;param(&apos;echostr&apos;));</span><br><span class="line">            &#125;</span><br><span class="line">            // 执行用户的请求</span><br><span class="line">            return $next($request);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return response(&apos;对不起访问错误&apos;);</span><br><span class="line">            // 不是正常微信端请求</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-注册全局中间件"><a href="#4-注册全局中间件" class="headerlink" title="4.注册全局中间件"></a>4.注册全局中间件</h4><p>配置app\middleware.php代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 注册全局中间件</span><br><span class="line">return [</span><br><span class="line">    \app\http\middleware\WeixinMiddleware::class</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="二-消息回复"><a href="#二-消息回复" class="headerlink" title="二.消息回复"></a>二.消息回复</h3><h4 id="1-配置消息回复模板xml"><a href="#1-配置消息回复模板xml" class="headerlink" title="1.配置消息回复模板xml"></a>1.配置消息回复模板xml</h4><p>建立配置文件config\weixin.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">return [</span><br><span class="line">    // 文本模板</span><br><span class="line">    &apos;text&apos;  =&gt; &apos;</span><br><span class="line">        &lt;xml&gt;</span><br><span class="line">          &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">          &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">          &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span><br><span class="line">          &lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;</span><br><span class="line">          &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;</span><br><span class="line">        &lt;/xml&gt;&apos;,</span><br><span class="line">    // 图片模板</span><br><span class="line">    &apos;image&apos;  =&gt; &apos;</span><br><span class="line">        &lt;xml&gt;</span><br><span class="line">            &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">            &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">            &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span><br><span class="line">            &lt;MsgType&gt;&lt;![CDATA[image]]&gt;&lt;/MsgType&gt;</span><br><span class="line">            &lt;Image&gt;</span><br><span class="line">                &lt;MediaId&gt;&lt;![CDATA[%s]]&gt;&lt;/MediaId&gt;</span><br><span class="line">            &lt;/Image&gt;</span><br><span class="line">        &lt;/xml&gt;&apos;,</span><br><span class="line">    // 图文模板</span><br><span class="line">    &apos;news&apos;  =&gt;[</span><br><span class="line">        &apos;TplHead&apos; =&gt; &apos;</span><br><span class="line">              &lt;xml&gt;</span><br><span class="line">                &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;</span><br><span class="line">                &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;</span><br><span class="line">                &lt;CreateTime&gt;%s&lt;/CreateTime&gt;</span><br><span class="line">                &lt;MsgType&gt;&lt;![CDATA[news]]&gt;&lt;/MsgType&gt;</span><br><span class="line">                &lt;ArticleCount&gt;%s&lt;/ArticleCount&gt;</span><br><span class="line">                &lt;Articles&gt;&apos;,</span><br><span class="line">        &apos;TplBody&apos; =&gt; &apos;</span><br><span class="line">                &lt;item&gt;</span><br><span class="line">                    &lt;Title&gt;&lt;![CDATA[%s]]&gt;&lt;/Title&gt;</span><br><span class="line">                    &lt;Description&gt;&lt;![CDATA[%s]]&gt;&lt;/Description&gt;</span><br><span class="line">                    &lt;PicUrl&gt;&lt;![CDATA[%s]]&gt;&lt;/PicUrl&gt;</span><br><span class="line">                    &lt;Url&gt;&lt;![CDATA[%s]]&gt;&lt;/Url&gt;</span><br><span class="line">                &lt;/item&gt;&apos;,</span><br><span class="line">        &apos;TplFoot&apos; =&gt; &apos;</span><br><span class="line">                &lt;/Articles&gt;</span><br><span class="line">              &lt;/xml&gt;&apos;</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h4 id="2-控制器index-controller-Weixin-php代码如下"><a href="#2-控制器index-controller-Weixin-php代码如下" class="headerlink" title="2.控制器index\controller\Weixin.php代码如下"></a>2.控制器index\controller\Weixin.php代码如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\index\controller;</span><br><span class="line">use think\Controller;</span><br><span class="line">use app\service\WeixinService;</span><br><span class="line"></span><br><span class="line">class Weixin extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        // 因为是一个xml数据包，所以我们不能使用post，param接收</span><br><span class="line">        //获取微信发送的xml  post方式请求</span><br><span class="line">        $postObj = file_get_contents(&apos;php://input&apos;);</span><br><span class="line">        //把xml转换为数组</span><br><span class="line">        $postArr = simplexml_load_string($postObj,&quot;SimpleXMLElement&quot;,LIBXML_NOCDATA);</span><br><span class="line"></span><br><span class="line">        $service = new WeixinService;</span><br><span class="line"></span><br><span class="line">        return $service-&gt;responseMsg($postArr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-业务逻辑层service-WeixinService-php代码如下"><a href="#3-业务逻辑层service-WeixinService-php代码如下" class="headerlink" title="3.业务逻辑层service\WeixinService.php代码如下"></a>3.业务逻辑层service\WeixinService.php代码如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace app\service;</span><br><span class="line">use Config,Log;</span><br><span class="line">use app\model\User;</span><br><span class="line"></span><br><span class="line">class WeixinService</span><br><span class="line">&#123;</span><br><span class="line">    public function responseMsg($postArr)</span><br><span class="line">    &#123;</span><br><span class="line">        //消息内容</span><br><span class="line">        $content      = $postArr-&gt;Content;</span><br><span class="line">        // //接受者</span><br><span class="line">        $toUserName   = $postArr-&gt;ToUserName;</span><br><span class="line">        // //发送者</span><br><span class="line">        $fromUserName = $postArr-&gt;FromUserName;</span><br><span class="line">        // //获取时间戳</span><br><span class="line">        $time = time();</span><br><span class="line">        //你好，你的消息是： $content</span><br><span class="line">        $content      = &quot;你好，你的消息是：&quot;.$content;</span><br><span class="line"></span><br><span class="line">        //根据回复用户id查出用户权限（预加载查询）</span><br><span class="line">        // $content = User::where(&apos;uid&apos;, $content)-&gt;with([</span><br><span class="line">        //     &apos;userRole&apos; =&gt; function ($userRole)&#123;</span><br><span class="line">        //         $userRole-&gt;with([</span><br><span class="line">        //             &apos;userGroup&apos; =&gt; function($userGroup)&#123;</span><br><span class="line">        //                 // 注意这个 关联字段已定义要在这个feild方法中</span><br><span class="line">        //                 $userGroup-&gt;field(&apos;group_id,module_id_array&apos;);</span><br><span class="line">        //             &#125;</span><br><span class="line">        //         ])-&gt;field(&apos;role_id,group_id_array&apos;);</span><br><span class="line">        //     &#125;</span><br><span class="line">        // ])-&gt;field(&apos;uid,role_id,user_name&apos;)-&gt;select()-&gt;toArray();</span><br><span class="line">        // Log::write($content);</span><br><span class="line"></span><br><span class="line">        //把百分号（%）符号替换成一个作为参数进行传递的变量：</span><br><span class="line">        return sprintf(Config::get(&apos;weixin.text&apos;), $fromUserName, $toUserName, $time, $content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h1><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;微信对接token验证&lt;br&gt;消息回复&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="thinkPHP" scheme="https://blog.axiao.vip/categories/thinkPHP/"/>
    
    
      <category term="tp5.1" scheme="https://blog.axiao.vip/tags/tp5-1/"/>
    
      <category term="wechat" scheme="https://blog.axiao.vip/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>TP5.1验证操作</title>
    <link href="https://blog.axiao.vip/tp-validate.html"/>
    <id>https://blog.axiao.vip/tp-validate.html</id>
    <published>2020-05-21T13:31:11.831Z</published>
    <updated>2020-05-22T05:21:30.450Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><blockquote><p>验证器<br>独立验证<br>表单令牌token</p></blockquote><hr><a id="more"></a><h3 id="一-验证器"><a href="#一-验证器" class="headerlink" title="一.验证器"></a>一.验证器</h3><h4 id="1-命令生成验证器validate"><a href="#1-命令生成验证器validate" class="headerlink" title="1.命令生成验证器validate"></a>1.命令生成验证器validate</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:validate index/User</span><br></pre></td></tr></table></figure><p>index\validate\User.php代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\validate;</span><br><span class="line"></span><br><span class="line">use think\Validate;</span><br><span class="line"></span><br><span class="line">class User extends Validate</span><br><span class="line">&#123;</span><br><span class="line">    protected $rule =   [</span><br><span class="line">        &apos;name&apos;  =&gt; &apos;require|max:25&apos;,</span><br><span class="line">        &apos;age&apos;   =&gt; &apos;number|between:1,120&apos;,</span><br><span class="line">        &apos;email&apos; =&gt; &apos;email&apos;,    </span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    protected $message  =   [</span><br><span class="line">        &apos;name.require&apos; =&gt; &apos;名称必须&apos;,</span><br><span class="line">        &apos;name.max&apos;     =&gt; &apos;名称最多不能超过25个字符&apos;,</span><br><span class="line">        &apos;age.number&apos;   =&gt; &apos;年龄必须是数字&apos;,</span><br><span class="line">        &apos;age.between&apos;  =&gt; &apos;年龄只能在1-120之间&apos;,</span><br><span class="line">        &apos;email&apos;        =&gt; &apos;邮箱格式错误&apos;,    </span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-数据验证"><a href="#2-数据验证" class="headerlink" title="2.数据验证"></a>2.数据验证</h4><p>在需要进行User验证的控制器方法中，添加如下代码即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">//方法1</span><br><span class="line">namespace app\index\controller;</span><br><span class="line">use think\Controller;</span><br><span class="line">use app\index\validate\User;</span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">            &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $validate = new User;</span><br><span class="line"></span><br><span class="line">        if (!$validate-&gt;check($data)) &#123;</span><br><span class="line">            dump($validate-&gt;getError());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//方法2（注意验证结果和方法1不同，方法1返回boole值（true和false），方法2返回true和错误信息）</span><br><span class="line">namespace app\index\controller;</span><br><span class="line">use think\Controller;</span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $result = $this-&gt;validate(</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">                &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">            ],</span><br><span class="line">            &apos;app\index\validate\User&apos;);</span><br><span class="line"></span><br><span class="line">        if (true !== $result) &#123;</span><br><span class="line">            // 验证失败 输出错误信息</span><br><span class="line">            dump($result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-批量验证"><a href="#3-批量验证" class="headerlink" title="3.批量验证"></a>3.批量验证</h4><blockquote><p>默认情况下，一旦有某个数据的验证规则不符合，就会停止后续数据及规则的验证，如果希望批量进行验证，可以设置：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">use think\Controller;</span><br><span class="line"></span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    // 是否批量验证</span><br><span class="line">    protected $batchValidate = true;</span><br><span class="line"></span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $result = $this-&gt;validate(</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">                &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">            ],</span><br><span class="line">            &apos;app\index\validate\User&apos;);</span><br><span class="line"></span><br><span class="line">        if (true !== $result) &#123;</span><br><span class="line">            // 验证失败 输出错误信息</span><br><span class="line">            dump($result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在非控制器的地方如果需要执行批量验证，可以在验证的时候添加是否批量的方法batch()</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">namespace app\common\service;</span><br><span class="line"></span><br><span class="line">use app\common\validate\User as UserValidate;</span><br><span class="line"></span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    public function validateTest($data)</span><br><span class="line">    &#123;</span><br><span class="line">        $validata = new UserValidate;</span><br><span class="line">        $result   = $validate-&gt;batch()-&gt;check($data);</span><br><span class="line">        if ($result !== true) &#123;</span><br><span class="line">            dump($result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-抛出验证异常"><a href="#4-抛出验证异常" class="headerlink" title="4.抛出验证异常"></a>4.抛出验证异常</h4><blockquote><p>可以用于接口，配合<a href="http://blog.axiao.vip/tp-controller.html">统一异常处理</a><br>默认情况下验证失败后不会抛出异常，如果希望验证失败自动抛出异常，可以在控制器类中添加设置：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">use think\Controller;</span><br><span class="line"></span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    // 验证失败是否抛出异常</span><br><span class="line">    protected $failException = true;</span><br><span class="line"></span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $result = $this-&gt;validate(</span><br><span class="line">            [</span><br><span class="line">                &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">                &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">            ],</span><br><span class="line">            &apos;app\index\validate\User&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-自定义验证规则"><a href="#5-自定义验证规则" class="headerlink" title="5.自定义验证规则"></a>5.自定义验证规则</h4><blockquote><p>系统内置了一些常用的规则（参考后面的内置规则），如果不能满足需求，可以在验证器重添加额外的验证方法，例如：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\validate;</span><br><span class="line"></span><br><span class="line">use think\Validate;</span><br><span class="line"></span><br><span class="line">class User extends Validate</span><br><span class="line">&#123;</span><br><span class="line">    protected $rule = [</span><br><span class="line">        &apos;name&apos;  =&gt;  &apos;checkName:thinkphp&apos;,</span><br><span class="line">        &apos;email&apos; =&gt;  &apos;email&apos;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    protected $message = [</span><br><span class="line">        &apos;name&apos;  =&gt;  &apos;用户名必须&apos;,</span><br><span class="line">        &apos;email&apos; =&gt;  &apos;邮箱格式错误&apos;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 自定义验证规则</span><br><span class="line">    protected function checkName($value,$rule,$data=[])</span><br><span class="line">    &#123;</span><br><span class="line">        return $rule == $value ? true : &apos;名称错误&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-验证场景"><a href="#6-验证场景" class="headerlink" title="6.验证场景"></a>6.验证场景</h4><p>验证器代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\validate;</span><br><span class="line"></span><br><span class="line">use think\Validate;</span><br><span class="line"></span><br><span class="line">class User extends Validate</span><br><span class="line">&#123;</span><br><span class="line">    protected $rule =   [</span><br><span class="line">        &apos;name&apos;  =&gt; &apos;require|max:25&apos;,</span><br><span class="line">        &apos;age&apos;   =&gt; &apos;number|between:1,120&apos;,</span><br><span class="line">        &apos;email&apos; =&gt; &apos;email&apos;,    </span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    protected $message  =   [</span><br><span class="line">        &apos;name.require&apos; =&gt; &apos;名称必须&apos;,</span><br><span class="line">        &apos;name.max&apos;     =&gt; &apos;名称最多不能超过25个字符&apos;,</span><br><span class="line">        &apos;age.number&apos;   =&gt; &apos;年龄必须是数字&apos;,</span><br><span class="line">        &apos;age.between&apos;  =&gt; &apos;年龄只能在1-120之间&apos;,</span><br><span class="line">        &apos;email&apos;        =&gt; &apos;邮箱格式错误&apos;,    </span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    protected $scene = [</span><br><span class="line">        &apos;edit&apos;  =&gt;  [&apos;name&apos;,&apos;age&apos;],</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制器代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">//方法1</span><br><span class="line">$data = [</span><br><span class="line">    &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">    &apos;age&apos;   =&gt; 10,</span><br><span class="line">    &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$result = $this-&gt;validate($data,&apos;app\index\validate\User.edit&apos;);</span><br><span class="line"></span><br><span class="line">if(true !== $result)&#123;</span><br><span class="line">    // 验证失败 输出错误信息</span><br><span class="line">    dump($result);</span><br><span class="line">&#125;</span><br><span class="line">//方法2</span><br><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">use app\index\validate\User as UserValidate;</span><br><span class="line">use think\Controller;</span><br><span class="line"></span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">            &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $validate = new UserValidate;</span><br><span class="line"></span><br><span class="line">        if (!$validate-&gt;scene(&apos;edit&apos;)-&gt;check($data)) &#123;</span><br><span class="line">            dump($validate-&gt;getError());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以单独为某个场景定义方法（方法的命名规范是scene+场景名），并且对某些字段的规则重新设置，例如：</p><blockquote><p>注意：场景名不区分大小写，且在调用的时候不能将驼峰写法转为下划线</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\validate;</span><br><span class="line"></span><br><span class="line">use think\Validate;</span><br><span class="line"></span><br><span class="line">class User extends Validate</span><br><span class="line">&#123;</span><br><span class="line">    protected $rule =   [</span><br><span class="line">        &apos;name&apos;  =&gt; &apos;require|max:25&apos;,</span><br><span class="line">        &apos;age&apos;   =&gt; &apos;number|between:1,120&apos;,</span><br><span class="line">        &apos;email&apos; =&gt; &apos;email&apos;,    </span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    protected $message  =   [</span><br><span class="line">        &apos;name.require&apos; =&gt; &apos;名称必须&apos;,</span><br><span class="line">        &apos;name.max&apos;     =&gt; &apos;名称最多不能超过25个字符&apos;,</span><br><span class="line">        &apos;age.number&apos;   =&gt; &apos;年龄必须是数字&apos;,</span><br><span class="line">        &apos;age.between&apos;  =&gt; &apos;年龄只能在1-120之间&apos;,</span><br><span class="line">        &apos;email&apos;        =&gt; &apos;邮箱格式错误&apos;,    </span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // edit 验证场景定义</span><br><span class="line">    public function sceneEdit()</span><br><span class="line">    &#123;</span><br><span class="line">    return $this-&gt;only([&apos;name&apos;,&apos;age&apos;])</span><br><span class="line">        -&gt;append(&apos;name&apos;, &apos;min:5&apos;)</span><br><span class="line">            -&gt;remove(&apos;age&apos;, &apos;between&apos;)</span><br><span class="line">            -&gt;append(&apos;age&apos;, &apos;require|max:100&apos;);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>only 场景需要验证的字段<br>remove 移除场景中的字段的部分验证规则<br>append 给场景中的字段需要追加验证规则</p></blockquote><p>控制器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">use app\index\validate\User as UserValidate;</span><br><span class="line">use think\Controller;</span><br><span class="line"></span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $data = [</span><br><span class="line">            &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">            &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $validate = new UserValidate;</span><br><span class="line"></span><br><span class="line">        if (!$validate-&gt;sceneEdit()-&gt;check($data)) &#123;</span><br><span class="line">            dump($validate-&gt;getError());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二-独立验证"><a href="#二-独立验证" class="headerlink" title="二.独立验证"></a>二.独立验证</h3><h4 id="1-验证数据"><a href="#1-验证数据" class="headerlink" title="1.验证数据"></a>1.验证数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">use Validate;</span><br><span class="line"></span><br><span class="line">$rule = [</span><br><span class="line">    &apos;name&apos;  =&gt; &apos;require|max:25&apos;,</span><br><span class="line">    &apos;age&apos;   =&gt; &apos;number|between:1,120&apos;,</span><br><span class="line">    &apos;email&apos; =&gt; &apos;email&apos;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$msg = [</span><br><span class="line">    &apos;name.require&apos; =&gt; &apos;名称必须&apos;,</span><br><span class="line">    &apos;name.max&apos;     =&gt; &apos;名称最多不能超过25个字符&apos;,</span><br><span class="line">    &apos;age.number&apos;   =&gt; &apos;年龄必须是数字&apos;,</span><br><span class="line">    &apos;age.between&apos;  =&gt; &apos;年龄只能在1-120之间&apos;,</span><br><span class="line">    &apos;email&apos;        =&gt; &apos;邮箱格式错误&apos;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$data = [</span><br><span class="line">    &apos;name&apos;  =&gt; &apos;thinkphp&apos;,</span><br><span class="line">    &apos;age&apos;   =&gt; 10,</span><br><span class="line">    &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$validate   = Validate::make($rule,$msg);</span><br><span class="line">$result = $validate-&gt;check($data);</span><br><span class="line"></span><br><span class="line">if(!$result) &#123;</span><br><span class="line">    dump($validate-&gt;getError());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//如果需要批量验证，可以使用：</span><br><span class="line">$result   = Validate::make($rule,$msg)</span><br><span class="line">-&gt;batch()</span><br><span class="line">-&gt;check($data);</span><br><span class="line">if ($result !== true) &#123;</span><br><span class="line">    dump($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-闭包验证"><a href="#2-闭包验证" class="headerlink" title="2.闭包验证"></a>2.闭包验证</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$validate = Validate::make([</span><br><span class="line">    &apos;name&apos;  =&gt; function($value,$rule) &#123;</span><br><span class="line">        return $rule==$value ? true : false;</span><br><span class="line">    &#125;,</span><br><span class="line">])-&gt;check($data);</span><br></pre></td></tr></table></figure><h4 id="3-自定义验证规则"><a href="#3-自定义验证规则" class="headerlink" title="3.自定义验证规则"></a>3.自定义验证规则</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Validate::extend(&apos;checkName&apos;, function ($value, $rule) &#123;</span><br><span class="line">    return $rule == $value ? true : &apos;名称错误&apos;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$validate = Validate::make([&apos;name&apos; =&gt; &apos;checkName:1&apos;]);</span><br><span class="line"></span><br><span class="line">$data   = [&apos;name&apos; =&gt; 1];</span><br><span class="line">$validate-&gt;check($data);</span><br><span class="line"></span><br><span class="line">//支持批量注册验证规则，例如：</span><br><span class="line">Validate::extend([</span><br><span class="line">    &apos;checkName&apos;=&gt; function ($value, $rule) &#123;</span><br><span class="line">    return $rule == $value ? true : &apos;名称错误&apos;;</span><br><span class="line">&#125;,</span><br><span class="line">    &apos;checkStatus&apos;=&gt; [$this,&apos;checkStatus&apos;]</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line">$validate = Validate::make([&apos;name&apos; =&gt; &apos;checkName:1&apos;])</span><br><span class="line"></span><br><span class="line">$data   = [&apos;name&apos; =&gt; 1];</span><br><span class="line">$validate-&gt;check($data);</span><br></pre></td></tr></table></figure><h4 id="4-静态调用"><a href="#4-静态调用" class="headerlink" title="4.静态调用"></a>4.静态调用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 日期格式验证</span><br><span class="line">Validate::dateFormat(&apos;2016-03-09&apos;,&apos;Y-m-d&apos;); // true</span><br><span class="line">// 验证是否有效的日期</span><br><span class="line">Validate::isDate(&apos;2016-06-03&apos;); // true</span><br><span class="line">// 验证是否有效邮箱地址</span><br><span class="line">Validate::isEmail(&apos;thinkphp@qq.com&apos;); // true</span><br><span class="line">// 验证是否在某个范围</span><br><span class="line">Validate::in(&apos;a&apos;,[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;]); // true</span><br><span class="line">// 验证是否大于某个值</span><br><span class="line">Validate::gt(10,8); // true</span><br><span class="line">// 正则验证</span><br><span class="line">Validate::regex(100,&apos;\d+&apos;); // true</span><br></pre></td></tr></table></figure><h3 id="三-表单令牌token"><a href="#三-表单令牌token" class="headerlink" title="三.表单令牌token"></a>三.表单令牌token</h3><h4 id="1-如果需要自定义令牌生成规则，可以调用Request类的token方法，例如："><a href="#1-如果需要自定义令牌生成规则，可以调用Request类的token方法，例如：" class="headerlink" title="1.如果需要自定义令牌生成规则，可以调用Request类的token方法，例如："></a>1.如果需要自定义令牌生成规则，可以调用Request类的token方法，例如：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">namespace app\index\controller;</span><br><span class="line"></span><br><span class="line">use think\Controller;</span><br><span class="line"></span><br><span class="line">class Index extends Controller</span><br><span class="line">&#123;</span><br><span class="line">    public function index()</span><br><span class="line">    &#123;</span><br><span class="line">        $token = $this-&gt;request-&gt;token(&apos;__token__&apos;, &apos;sha1&apos;);</span><br><span class="line">        $this-&gt;assign(&apos;token&apos;, $token);</span><br><span class="line">        return $this-&gt;fetch();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-然后在模板表单中使用："><a href="#2-然后在模板表单中使用：" class="headerlink" title="2.然后在模板表单中使用："></a>2.然后在模板表单中使用：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;__token__&quot; value=&quot;&#123;$token&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure><h4 id="3-然后在你的验证规则中，添加token验证规则即可"><a href="#3-然后在你的验证规则中，添加token验证规则即可" class="headerlink" title="3.然后在你的验证规则中，添加token验证规则即可"></a>3.然后在你的验证规则中，添加token验证规则即可</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">protected $rule = [</span><br><span class="line">   &apos;__token__&apos;  =&gt;  &apos;require|max:25|token&apos;,</span><br><span class="line">   &apos;email&apos; =&gt;  &apos;email&apos;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h1 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h1><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;验证器&lt;br&gt;独立验证&lt;br&gt;表单令牌token&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="thinkPHP" scheme="https://blog.axiao.vip/categories/thinkPHP/"/>
    
    
      <category term="tp5.1" scheme="https://blog.axiao.vip/tags/tp5-1/"/>
    
      <category term="validate" scheme="https://blog.axiao.vip/tags/validate/"/>
    
  </entry>
  
  <entry>
    <title>TP5.1视图操作</title>
    <link href="https://blog.axiao.vip/tp-view.html"/>
    <id>https://blog.axiao.vip/tp-view.html</id>
    <published>2020-05-15T04:01:53.389Z</published>
    <updated>2020-05-24T04:14:21.092Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --><blockquote><p>视图渲染<br>视图赋值<br>模板布局，继承，标签</p></blockquote><hr><a id="more"></a><h3 id="一-视图渲染"><a href="#一-视图渲染" class="headerlink" title="一.视图渲染"></a>一.视图渲染</h3><p>1.三种方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//助手函数</span><br><span class="line">return view(&apos;hello&apos;, [&apos;name&apos; =&gt; &apos;thinkphp&apos;]);</span><br><span class="line">//需要继承Controller</span><br><span class="line">return $this-&gt;fetch();</span><br><span class="line">//如果希望直接解析内容而不通过模板文件的话，可以使用display方法</span><br><span class="line">return $this-&gt;display(&apos;&#123;$name&#125;-&#123;$email&#125;&apos;, [&apos;name&apos; =&gt; &apos;thinkphp&apos;, &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;]);</span><br></pre></td></tr></table></figure><p>2.指定模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+ 跨控制器</span><br><span class="line">return $this-&gt;fetch(&apos;member/read&apos;);</span><br><span class="line">+ 跨模块</span><br><span class="line">return $this-&gt;fetch(&apos;admin@member/edit&apos;);</span><br></pre></td></tr></table></figure><h3 id="二-视图赋值"><a href="#二-视图赋值" class="headerlink" title="二.视图赋值"></a>二.视图赋值</h3><p>1.助手函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">return view(&apos;index&apos;, [</span><br><span class="line">    &apos;name&apos;  =&gt; &apos;ThinkPHP&apos;,</span><br><span class="line">    &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>2.fetch渲染</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;assign([</span><br><span class="line">    &apos;name&apos;  =&gt; &apos;ThinkPHP&apos;,</span><br><span class="line">    &apos;email&apos; =&gt; &apos;thinkphp@qq.com&apos;</span><br><span class="line">]);</span><br><span class="line">// 模板输出</span><br><span class="line">return $this-&gt;fetch(&apos;index&apos;);</span><br></pre></td></tr></table></figure><p>3.视图过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 助手函数使用视图输出过滤</span><br><span class="line">return view()-&gt;filter(function($content)&#123;</span><br><span class="line">return str_replace(&quot;\r\n&quot;,&apos;&lt;br/&gt;&apos;,$content);</span><br><span class="line">&#125;);</span><br><span class="line">// fetch使用视图输出过滤</span><br><span class="line">return $this-&gt;filter(function($content)&#123;</span><br><span class="line">return str_replace(&quot;\r\n&quot;,&apos;&lt;br/&gt;&apos;,$content);</span><br><span class="line">&#125;)-&gt;fetch();</span><br><span class="line">//全局使用视图输出过滤</span><br><span class="line">protected function initialize()</span><br><span class="line">&#123;</span><br><span class="line">$this-&gt;view-&gt;filter(function($content)&#123;</span><br><span class="line">    return str_replace(&quot;\r\n&quot;,&apos;&lt;br/&gt;&apos;,$content);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public function index()</span><br><span class="line">&#123;</span><br><span class="line">    // 使用视图输出过滤</span><br><span class="line">    return $this-&gt;fetch();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.动态改变模板引擎，请使用视图类提供的config方法进行动态设置，而不要使用改变配置类参数的方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function index()</span><br><span class="line">&#123;</span><br><span class="line">    // 改变当前操作的模板路径</span><br><span class="line">    $this-&gt;view-&gt;config(&apos;view_path&apos;, &apos;自定义路径&apos;);</span><br><span class="line">    return $this-&gt;fetch();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.变量输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">//数组</span><br><span class="line">&#123;$data.name&#125;或者&#123;$data[&apos;name&apos;]&#125;</span><br><span class="line"></span><br><span class="line">//给变量输出提供默认值</span><br><span class="line">&#123;$user.nickname|default=&quot;这家伙很懒，什么也没留下&quot;&#125;</span><br><span class="line"></span><br><span class="line">//系统变量输出</span><br><span class="line">&#123;$Think.server.script_name&#125; // 输出$_SERVER[&apos;SCRIPT_NAME&apos;]变量</span><br><span class="line">&#123;$Think.session.user_id&#125; // 输出$_SESSION[&apos;user_id&apos;]变量</span><br><span class="line">&#123;$Think.get.page&#125; // 输出$_GET[&apos;page&apos;]变量</span><br><span class="line">&#123;$Think.cookie.name&#125;  // 输出$_COOKIE[&apos;name&apos;]变量</span><br><span class="line"></span><br><span class="line">//常量输出</span><br><span class="line">&#123;$Think.PHP_VERSION&#125;</span><br><span class="line"></span><br><span class="line">//配置参数输出</span><br><span class="line">&#123;$Think.config.default_module&#125;</span><br><span class="line">&#123;$Think.config.default_controller&#125;</span><br><span class="line"></span><br><span class="line">//语言变量</span><br><span class="line">&#123;$Think.lang.page_error&#125;</span><br><span class="line">&#123;$Think.lang.var_error&#125;</span><br><span class="line"></span><br><span class="line">//请求变量，支持Request类的大部分方法，但只支持方法的第一个参数。</span><br><span class="line">&#123;$Request.get.id&#125;   // 调用Request对象的get方法 传入参数为id</span><br><span class="line">&#123;$Request.param.name&#125;   // 调用Request对象的param方法 传入参数为name</span><br><span class="line">&#123;$Request.param.user.nickname&#125;  // 调用Request对象的param方法 传入参数为user.nickname</span><br><span class="line">&#123;$Request.root&#125; // 调用Request对象的root方法</span><br><span class="line">&#123;$Request.root.true&#125;    // 调用Request对象的root方法，并且传入参数true</span><br><span class="line">&#123;$Request.path&#125; // 调用Request对象的path方法</span><br><span class="line">&#123;$Request.module&#125;   // 调用Request对象的module方法</span><br><span class="line">&#123;$Request.controller&#125;   // 调用Request对象的controller方法</span><br><span class="line">&#123;$Request.action&#125;   // 调用Request对象的action方法</span><br><span class="line">&#123;$Request.ext&#125;  // 调用Request对象的ext方法</span><br><span class="line">&#123;$Request.host&#125; // 调用Request对象的host方法</span><br><span class="line">&#123;$Request.ip&#125;   // 调用Request对象的ip方法</span><br><span class="line">&#123;$Request.header.accept-encoding&#125;   // 调用Request对象的header方法</span><br></pre></td></tr></table></figure><p>6.模板变量使用函数（为了避免出现XSS安全问题，默认的变量输出都会使用htmlentities方法进行转义输出）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;$data.name|md5&#125;</span><br><span class="line">&#123;$data.create_time|date=&apos;Y-m-d H:i:s&apos;,###&#125;</span><br><span class="line">&#123;$data.create_time|date=&apos;Y-m-d H:i:s&apos;&#125;</span><br><span class="line">&#123;$name|md5|upper|substr=0,3&#125;</span><br><span class="line"></span><br><span class="line">//你还可以设置默认的过滤方法，在配置文件template.php中设置htmlspecialchars转义</span><br><span class="line">&apos;default_filter&apos; =&gt; &apos;htmlspecialchars&apos;</span><br><span class="line"></span><br><span class="line">//如果你不需要转义（例如你需要输出html表格等内容），可以使用：</span><br><span class="line">$arr[&apos;name&apos;] = &apos;&lt;table border=&quot;1&quot;&gt;&lt;tr&gt;&lt;td&gt;axiao&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&apos;;</span><br><span class="line">$this-&gt;assign(&apos;data&apos;,$arr);</span><br><span class="line">return $this-&gt;fetch();</span><br><span class="line">&#123;$data.name|raw&#125;</span><br><span class="line"></span><br><span class="line">//变量输出使用的函数可以支持内置的PHP函数或者用户自定义函数，甚至是静态方法。</span><br><span class="line">&#123;:substr(strtoupper(md5($name)),0,3)&#125;</span><br><span class="line"></span><br><span class="line">//可以在模板中直接使用系统的助手函数进行输出</span><br><span class="line">&#123;:app(&apos;cache&apos;)-&gt;get(&apos;name&apos;)&#125;</span><br><span class="line"></span><br><span class="line">//调用函数或者类的方法及属性，如果你要带命名空间调用类的属性，命名空间中的\需要改成\\才能正常调用</span><br><span class="line">&#123;:think\\App::VERSION&#125;</span><br><span class="line">&#123;:think\\facade\\Request::get(&apos;name&apos;)&#125;</span><br><span class="line"></span><br><span class="line">//原样输出：可以使用literal标签来防止模板标签被解析</span><br><span class="line">&#123;literal&#125;</span><br><span class="line">    Hello,&#123;$name&#125;！</span><br><span class="line">&#123;/literal&#125;</span><br></pre></td></tr></table></figure><h3 id="模板布局，继承，标签"><a href="#模板布局，继承，标签" class="headerlink" title="模板布局，继承，标签"></a>模板布局，继承，标签</h3><p>1.模板布局<br>第一种配置方式：全局配置方式<br>在config\template.php中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;layout_on&apos;     =&gt;  true,</span><br><span class="line">&apos;layout_name&apos;   =&gt;  &apos;layout&apos;,</span><br><span class="line">&apos;layout_item&apos; =&gt; &apos;&#123;__CONTENT__&#125;&apos;,</span><br></pre></td></tr></table></figure><p>view中新建文件layout.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;include file=&quot;public/header&quot; /&#125;</span><br><span class="line">    &#123;__CONTENT__&#125;</span><br><span class="line">&#123;include file=&quot;public/footer&quot; /&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模板渲染时就会自动先加载layout.html内容，然后模板内容会替换{<strong>CONTENT</strong>} 如果某些页面不需要使用布局模板功能，可以在模板文件开头加上 {<strong>NOLAYOUT</strong>} 字符串</p></blockquote><p>第二种方式：模板标签方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;layout name=&quot;layout&quot; /&#125;</span><br></pre></td></tr></table></figure><p>同样view中新建文件layout.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;include file=&quot;public/header&quot; /&#125;</span><br><span class="line">    &#123;__CONTENT__&#125;</span><br><span class="line">&#123;include file=&quot;public/footer&quot; /&#125;</span><br></pre></td></tr></table></figure><p>第三种方式：动态方法布局<br>使用内置的layout方法可以更灵活的在程序中控制模板输出的布局功能，尤其适用于局部需要布局或者关闭布局的情况，这种方式也不需要在配置文件中开启layout_on：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function add()</span><br><span class="line">&#123;</span><br><span class="line">    $this-&gt;view-&gt;engine-&gt;layout(true);</span><br><span class="line">    return $this-&gt;fetch(&apos;add&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样view中新建文件layout.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;include file=&quot;public/header&quot; /&#125;</span><br><span class="line">    &#123;__CONTENT__&#125;</span><br><span class="line">&#123;include file=&quot;public/footer&quot; /&#125;</span><br></pre></td></tr></table></figure><p>或者使用layout方法动态关闭当前模板的布局功能（这种用法可以配合第一种布局方式，例如全局配置已经开启了布局，可以在某个页面单独关闭）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function add()</span><br><span class="line">&#123;</span><br><span class="line">    // 临时关闭当前模板的布局功能</span><br><span class="line">    $this-&gt;view-&gt;engine-&gt;layout(false);</span><br><span class="line">    return $this-&gt;display(&apos;add&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.模板继承<br>例如</p><ul><li><p>下面定义了一个base.html基础模板：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;&#123;block name=&quot;title&quot;&#125;标题&#123;/block&#125;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&#123;block name=&quot;menu&quot;&#125;菜单&#123;/block&#125;</span><br><span class="line">&#123;block name=&quot;left&quot;&#125;左边分栏&#123;/block&#125;</span><br><span class="line">&#123;block name=&quot;main&quot;&#125;主内容&#123;/block&#125;</span><br><span class="line">&#123;block name=&quot;right&quot;&#125;右边分栏&#123;/block&#125;</span><br><span class="line">&#123;block name=&quot;footer&quot;&#125;底部&#123;/block&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>在渲染的模板中使用继承：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;extend name=&quot;base&quot; /&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;title&quot;&#125;&#123;$title&#125;&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;menu&quot;&#125;</span><br><span class="line">&lt;a href=&quot;/&quot; &gt;首页&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;/info/&quot; &gt;资讯&lt;/a&gt;</span><br><span class="line">&lt;a href=&quot;/bbs/&quot; &gt;论坛&lt;/a&gt;</span><br><span class="line">&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;left&quot;&#125;&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;main&quot;&#125;</span><br><span class="line">&#123;volist name=&quot;list&quot; id=&quot;vo&quot;&#125;</span><br><span class="line">&lt;a href=&quot;/new/&#123;$vo.id&#125;&quot;&gt;&#123;$vo.title&#125;&lt;/a&gt;&lt;br/&gt;</span><br><span class="line"> &#123;$vo.content&#125;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line">&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;right&quot;&#125;</span><br><span class="line"> 最新资讯：</span><br><span class="line">&#123;volist name=&quot;news&quot; id=&quot;new&quot;&#125;</span><br><span class="line">&lt;a href=&quot;/new/&#123;$new.id&#125;&quot;&gt;&#123;$new.title&#125;&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line">&#123;/block&#125;</span><br><span class="line"></span><br><span class="line">&#123;block name=&quot;footer&quot;&#125;</span><br><span class="line">&#123;__block__&#125;</span><br><span class="line"> @ThinkPHP 版权所有</span><br><span class="line">&#123;/block&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>上例中，我们可以看到在子模板中使用了extend标签来继承了base模板。<br>在子模板中，可以对基础模板中的区块进行重载定义，如果没有重新定义的话，则表示沿用基础模板中的区块定义，如果定义了一个空的区块，则表示删除基础模板中的该区块内容。 上面的例子，我们就把left区块的内容删除了，其他的区块都进行了重载<br>这一区块中有{<strong>block</strong>}这个标签，当区块中有这个标记时，就不只是直接重载这个区块，它表示引用所继承模板对应区块的内容到这个位置，最终这个区块是合并后的内容。所以这里footer区块最后的内容是： 底部@ThinkPHP 版权所有</p></blockquote><blockquote><p>引入文件，传递参数<br><code>{include file=&quot;Public/header&quot; title=&quot;$title&quot; keywords=&quot;开源WEB开发框架&quot; /}</code></p></blockquote><blockquote><p>模板输出替换</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//如果需要全局替换的话，可以直接在template.php配置文件中添加：</span><br><span class="line">&apos;tpl_replace_string&apos;  =&gt;  [</span><br><span class="line">    &apos;__STATIC__&apos;=&gt;&apos;/static&apos;,</span><br><span class="line">&apos;__JS__&apos; =&gt; &apos;/static/javascript&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>引入css,js文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//1.模板输出替换</span><br><span class="line">__STATIC__/js/jquery.js</span><br><span class="line">//2.注意：如果配置文件app.php中（// URL伪静态后缀）&apos;url_html_suffix&apos;        =&gt; &apos;html&apos;,</span><br><span class="line">&#123;:url(&apos;/public/static/js/jquery.js&apos;,&apos;&apos;,&apos;&apos;)&#125;</span><br><span class="line">//3.如果配置文件app.php中（// URL伪静态后缀）&apos;url_html_suffix&apos;        =&gt; &apos;&apos;,</span><br><span class="line">&#123;:url(&apos;/public/static/js/jquery.js&apos;)&#125;</span><br></pre></td></tr></table></figure><h3 id="模板标签"><a href="#模板标签" class="headerlink" title="模板标签"></a>模板标签</h3><p>1.循环标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;foreach $list as $key=&gt;$vo &#125;</span><br><span class="line">    &#123;$vo.id&#125;:&#123;$vo.name&#125;</span><br><span class="line">&#123;/foreach&#125;</span><br><span class="line"></span><br><span class="line">&#123;volist name=&quot;list&quot; id=&quot;vo&quot;  &#125;</span><br><span class="line">&#123;$key&#125;.&#123;$vo.name&#125;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line"></span><br><span class="line">//为空的时候输出提示：</span><br><span class="line">$this-&gt;assign(&apos;empty&apos;,&apos;&lt;span class=&quot;empty&quot;&gt;没有数据&lt;/span&gt;&apos;);</span><br><span class="line">$this-&gt;assign(&apos;list&apos;,$list);</span><br><span class="line">&#123;volist name=&quot;list&quot; id=&quot;vo&quot; empty=&quot;$empty&quot; &#125;</span><br><span class="line">&#123;$vo.id&#125;|&#123;$vo.name&#125;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line"></span><br><span class="line">//支持输出查询结果中的部分数据，例如输出其中的第5～15条记录</span><br><span class="line">&#123;volist name=&quot;list&quot; id=&quot;vo&quot; offset=&quot;5&quot; length=&apos;10&apos;&#125;</span><br><span class="line">&#123;$vo.name&#125;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line"></span><br><span class="line">//输出偶数记录</span><br><span class="line">&#123;volist name=&quot;list&quot; id=&quot;vo&quot; mod=&quot;2&quot; &#125;</span><br><span class="line">&#123;eq name=&quot;mod&quot; value=&quot;1&quot;&#125;&#123;$vo.name&#125;&#123;/eq&#125;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line"></span><br><span class="line">//mod属性还用于控制一定记录的换行，例如：</span><br><span class="line">&#123;volist name=&quot;list&quot; id=&quot;vo&quot; mod=&quot;5&quot; &#125;</span><br><span class="line">&#123;$vo.name&#125;</span><br><span class="line">&#123;eq name=&quot;mod&quot; value=&quot;4&quot;&#125;&lt;br/&gt;&#123;/eq&#125;</span><br><span class="line">&#123;/volist&#125;</span><br><span class="line"></span><br><span class="line">//for循环：开始值、结束值、步进值和循环变量都可以支持变量，开始值和结束值是必须，其他是可选。comparison 的默认值是lt，name的默认值是i，步进值的默认值是1</span><br><span class="line">&#123;for start=&quot;开始值&quot; end=&quot;结束值&quot; comparison=&quot;&quot; step=&quot;步进值&quot; name=&quot;循环变量名&quot; &#125;</span><br><span class="line">&#123;/for&#125;</span><br></pre></td></tr></table></figure><p>2.比较标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//等于</span><br><span class="line">&#123;eq name=&quot;name&quot; value=&quot;value&quot;&#125;</span><br><span class="line">相等</span><br><span class="line">&#123;else/&#125;</span><br><span class="line">不相等</span><br><span class="line">&#123;/eq&#125;</span><br><span class="line"></span><br><span class="line">//对变量使用函数 当vo对象的属性值的字符串长度等于5就输出</span><br><span class="line">&#123;eq name=&quot;vo:name|strlen&quot; value=&quot;5&quot;&#125;&#123;$vo.name&#125;&#123;/eq&#125;</span><br><span class="line"></span><br><span class="line">//变量名可以支持系统变量的方式</span><br><span class="line">&#123;eq name=&quot;Think.get.name&quot; value=&quot;value&quot;&#125;相等&#123;else/&#125;不相等&#123;/eq&#125;</span><br><span class="line"></span><br><span class="line">//所有的比较标签可以统一使用compare标签（其实所有的比较标签都是compare标签的别名）</span><br><span class="line">&#123;compare name=&quot;name&quot; value=&quot;5&quot; type=&quot;eq&quot;&#125;value&#123;/compare&#125;</span><br><span class="line"></span><br><span class="line">//所有比较标签</span><br><span class="line">eq或者 equal等于</span><br><span class="line">neq 或者notequal不等于</span><br><span class="line">gt大于</span><br><span class="line">egt大于等于</span><br><span class="line">lt小于</span><br><span class="line">elt小于等于</span><br><span class="line">heq恒等于</span><br><span class="line">nheq不恒等于</span><br></pre></td></tr></table></figure><p>3.条件判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">//IF标签</span><br><span class="line">&#123;if ( $name == 1) OR ( $name &gt; 100) &#125; value1</span><br><span class="line">&#123;elseif $name == 2 /&#125;value2</span><br><span class="line">&#123;else /&#125; value3</span><br><span class="line">&#123;/if&#125;</span><br><span class="line">//支持php函数</span><br><span class="line">&#123;if strtoupper($user[&apos;name&apos;]) == &apos;THINKPHP&apos; &#125;ThinkPHP</span><br><span class="line">&#123;else /&#125; other Framework</span><br><span class="line">&#123;/if&#125;</span><br><span class="line"></span><br><span class="line">//SWITCH标签</span><br><span class="line">&#123;switch User.level&#125;</span><br><span class="line">    &#123;case 1&#125;value1&#123;/case&#125;</span><br><span class="line">    &#123;case 2&#125;value2&#123;/case&#125;</span><br><span class="line">    &#123;default /&#125;default</span><br><span class="line">&#123;/switch&#125;</span><br><span class="line">//可以使用函数以及系统变量</span><br><span class="line">&#123;switch User.level|intval &#125;</span><br><span class="line">    &#123;case $int&#125;admin&#123;/case&#125;</span><br><span class="line">    &#123;default /&#125;default</span><br><span class="line">&#123;/switch&#125;</span><br><span class="line">&#123;switch Think.get.type&#125;</span><br><span class="line">    &#123;case gif|png|jpg&#125;图像格式&#123;/case&#125;</span><br><span class="line">    &#123;default /&#125;其他格式</span><br><span class="line">&#123;/switch&#125;</span><br><span class="line"></span><br><span class="line">//范围判断（in/notin/ between/ notbetween）</span><br><span class="line">&#123;in name=&quot;id&quot; value=&quot;1,2,3&quot;&#125;</span><br><span class="line">id在范围内</span><br><span class="line">&#123;else/&#125;</span><br><span class="line">id不在范围内</span><br><span class="line">&#123;/in&#125;</span><br><span class="line"></span><br><span class="line">//present/notpresent标签用于判断某个变量是否已经定义</span><br><span class="line">&#123;present name=&quot;name&quot;&#125;</span><br><span class="line">name已经赋值</span><br><span class="line">&#123;else /&#125;</span><br><span class="line">name还没有赋值</span><br><span class="line">&#123;/present&#125;</span><br><span class="line"></span><br><span class="line">//empty/notempty标签用于判断某个变量是否为空</span><br><span class="line">&#123;empty name=&quot;name&quot;&#125;</span><br><span class="line">name为空</span><br><span class="line">&#123;else /&#125;</span><br><span class="line">name不为空</span><br><span class="line">&#123;/empty&#125;</span><br><span class="line"></span><br><span class="line">//defined/notdefined标签用于判断某个常量是否有定义</span><br><span class="line">&#123;defined name=&quot;NAME&quot;&#125;</span><br><span class="line">NAME常量已经定义</span><br><span class="line">&#123;else /&#125;</span><br><span class="line">NAME常量未定义</span><br><span class="line">&#123;/defined&#125;</span><br></pre></td></tr></table></figure><p>4.传统方式的导入外部JS和CSS文件的方法是直接在模板文件使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&apos;text/javascript&apos; src=&apos;/static/js/common.js&apos;&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/style.css&quot; /&gt;</span><br></pre></td></tr></table></figure><p>系统提供了专门的标签来简化上面的导入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;load href=&quot;/static/js/common.js&quot; /&#125;</span><br><span class="line">&#123;load href=&quot;/static/css/style.css&quot; /&#125;</span><br><span class="line">//并且支持同时加载多个资源文件</span><br><span class="line">&#123;load href=&quot;/static/js/common.js,/static/css/style.css&quot; /&#125;</span><br><span class="line">//系统还提供了两个标签别名js和css 用法和load一致</span><br><span class="line">&#123;js href=&quot;/static/js/common.js&quot; /&#125;</span><br><span class="line">&#123;css href=&quot;/static/css/style.css&quot; /&#125;</span><br></pre></td></tr></table></figure><p>5.在模板文件中定义变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;assign name=&quot;var&quot; value=&quot;123&quot; /&#125;</span><br><span class="line">&#123;assign name=&quot;var&quot; value=&quot;$val&quot; /&#125;</span><br><span class="line">&#123;assign name=&quot;var&quot; value=&quot;$Think.get.name&quot; /&#125;</span><br><span class="line">//模板中定义常量</span><br><span class="line">&#123;define name=&quot;MY_DEFINE_NAME&quot; value=&quot;3&quot; /&#125;</span><br><span class="line">&#123;define name=&quot;MY_DEFINE_NAME&quot; value=&quot;$name&quot; /&#125;</span><br><span class="line">&#123;define name=&quot;MY_DEFINE_NAME&quot; value=&quot;$Think.get.name&quot; /&#125;</span><br></pre></td></tr></table></figure><h1 id="OVER！！！"><a href="#OVER！！！" class="headerlink" title="OVER！！！"></a>OVER！！！</h1><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat May 11 2024 12:53:29 GMT+0800 (GMT+08:00) --&gt;&lt;blockquote&gt;&lt;p&gt;视图渲染&lt;br&gt;视图赋值&lt;br&gt;模板布局，继承，标签&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="thinkPHP" scheme="https://blog.axiao.vip/categories/thinkPHP/"/>
    
    
      <category term="tp5.1" scheme="https://blog.axiao.vip/tags/tp5-1/"/>
    
      <category term="view" scheme="https://blog.axiao.vip/tags/view/"/>
    
  </entry>
  
</feed>
